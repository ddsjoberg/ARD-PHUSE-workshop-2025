[
  {
    "objectID": "slides/04-tables-tfrmt/wrapup.html",
    "href": "slides/04-tables-tfrmt/wrapup.html",
    "title": "Workshop recap",
    "section": "",
    "text": "Introduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}\n\n\n\n\n\n{cards}: https://insightsengineering.github.io/cards/\n{cardx}: https://insightsengineering.github.io/cardx/\n{gtsummary}: https://www.danieldsjoberg.com/gtsummary/\n{tfrmt}: https://gsk-biostatistics.github.io/tfrmt/\n{tfrmtbuilder}: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/04-tables-tfrmt/wrapup.html#workshop-recap-1",
    "href": "slides/04-tables-tfrmt/wrapup.html#workshop-recap-1",
    "title": "Workshop recap",
    "section": "",
    "text": "Introduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/wrapup.html#learning-more",
    "href": "slides/04-tables-tfrmt/wrapup.html#learning-more",
    "title": "Workshop recap",
    "section": "",
    "text": "{cards}: https://insightsengineering.github.io/cards/\n{cardx}: https://insightsengineering.github.io/cardx/\n{gtsummary}: https://www.danieldsjoberg.com/gtsummary/\n{tfrmt}: https://gsk-biostatistics.github.io/tfrmt/\n{tfrmtbuilder}: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#workshop-outline",
    "href": "slides/04-tables-tfrmt/index.html#workshop-outline",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Workshop outline",
    "text": "Workshop outline\n\n\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "href": "slides/04-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "title": "ARD to Tables with {tfrmt}",
    "section": "ARD-first Tables with {tfrmt}",
    "text": "ARD-first Tables with {tfrmt}\n\n\n\n\n\n\n\n\n\nMetadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#the-tfrmt-object",
    "href": "slides/04-tables-tfrmt/index.html#the-tfrmt-object",
    "title": "ARD to Tables with {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "href": "slides/04-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = d_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#use-2-final-analysis",
    "href": "slides/04-tables-tfrmt/index.html#use-2-final-analysis",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = d_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "href": "slides/04-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = d_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#templates-the-possibilities",
    "href": "slides/04-tables-tfrmt/index.html#templates-the-possibilities",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-1",
    "href": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-1",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-2",
    "href": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-2",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#save-metadata-for-reuse",
    "href": "slides/04-tables-tfrmt/index.html#save-metadata-for-reuse",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#saving-display",
    "href": "slides/04-tables-tfrmt/index.html#saving-display",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Saving display",
    "text": "Saving display\n\ntfrmt::print_to_gt() creates a {gt} object under the hood\nYou can export the table to a variety of formats using gt::gt_save()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt",
    "href": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt",
    "title": "ARD to Tables with {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n\n{cards} includes a helper function shuffle_ard() to transform native {cards} output to display-ready data\nThis is also available as an argument .shuffle in ard_stack()\n\n\n\nlibrary(cards)\n\npharmaverseadam::adsl |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  )\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt-1",
    "href": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt-1",
    "title": "ARD to Tables with {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n{cards} includes a helper function rename_ard_columns() to transform native {cards} output to display-ready data\n\n\nlibrary(cards)\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  ) |&gt; \n   rename_ard_columns(columns = all_ard_groups(),\n                      unlist = c(\"variable_level\", \"stat\")) |&gt; \n  dplyr::select(-c(fmt_fn, warning, error))\n\n# A tibble: 36 × 7\n   TRT01A  variable variable_level context     stat_name stat_label   stat\n   &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;\n 1 Placebo AGEGR1   &gt;64            categorical n         n          72    \n 2 Placebo AGEGR1   &gt;64            categorical N         N          86    \n 3 Placebo AGEGR1   &gt;64            categorical p         %           0.837\n 4 Placebo AGEGR1   18-64          categorical n         n          14    \n 5 Placebo AGEGR1   18-64          categorical N         N          86    \n 6 Placebo AGEGR1   18-64          categorical p         %           0.163\n 7 Placebo SEX      F              categorical n         n          53    \n 8 Placebo SEX      F              categorical N         N          86    \n 9 Placebo SEX      F              categorical p         %           0.616\n10 Placebo SEX      M              categorical n         n          33    \n# ℹ 26 more rows"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt-2",
    "href": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt-2",
    "title": "ARD to Tables with {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n{cards} includes a helper function rename_ard_columns() to transform native {cards} output to display-ready data\n\n\n\nlibrary(cards)\nlibrary(tfrmt)\n\nmy_ard &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  ) |&gt; \n   rename_ard_columns(columns = all_ard_groups(),\n                      unlist = c(\"variable_level\", \"stat\")) |&gt; \n  dplyr::select(-c(fmt_fn, warning, error)) |&gt; \n  dplyr::filter(stat_name %in% c(\"n\",\"p\")) |&gt; \n  dplyr::select(-c(context, stat_label))\n\ntfrmt(\n  group = variable,\n  label = variable_level ,\n  column = TRT01A,\n  param = stat_name,\n  value = stat,\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", \n                   label_val = \".default\", \n                   frmt_combine(\"{n} ({p}%)\",\n                                n = frmt(\"xx\"),\n                                p = frmt(\"xx\", \n                                         transform = ~.*100)))\n  )\n) |&gt; \n  print_to_gt(my_ard)|&gt; \n  gt_style_slides()|&gt; \n    gt::tab_options(\n      table.font.size = 15\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlacebo\nXanomeline High Dose\nXanomeline Low Dose\n\n\n\n\nAGEGR1\n\n\n\n\n\n\n\n\n  &gt;64\n72 (84%)\n61 (85%)\n88 (92%)\n\n\n  18-64\n14 (16%)\n11 (15%)\n 8 ( 8%)\n\n\nSEX\n\n\n\n\n\n\n\n\n  F\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n  M\n33 (38%)\n37 (51%)\n41 (43%)"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#workshop-recap-1",
    "href": "slides/04-tables-tfrmt/index.html#workshop-recap-1",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Workshop recap",
    "text": "Workshop recap\n\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#learning-more",
    "href": "slides/04-tables-tfrmt/index.html#learning-more",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Learning more",
    "text": "Learning more\n\n{cards}: https://insightsengineering.github.io/cards/\n{cardx}: https://insightsengineering.github.io/cardx/\n{gtsummary}: https://www.danieldsjoberg.com/gtsummary/\n{tfrmt}: https://gsk-biostatistics.github.io/tfrmt/\n{tfrmtbuilder}: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#thank-you-for-coming",
    "href": "slides/04-tables-tfrmt/index.html#thank-you-for-coming",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Thank you for coming! 🎉",
    "text": "Thank you for coming! 🎉"
  },
  {
    "objectID": "slides/03-tables-gtsummary/09-summary.html",
    "href": "slides/03-tables-gtsummary/09-summary.html",
    "title": "In Closing",
    "section": "",
    "text": "http://www.danieldsjoberg.com/gtsummary/\n\n\n\n\n\n\n\n\n\nDaniel D. Sjoberg\nJoseph Larmarange\nMichael Curry\nJessica Lavery\nKarissa Whiting\nEmily C. Zabor\nXing Bai\nEsther Drill\nJessica Flynn\nMargie Hannum\nStephanie Lobaugh\nShannon Pileggi\nAmy Tin\nGustavo Zapata Wainberg\n\n\n\n\n\n\n@abduazizR, @ablack3, @ABohynDOE, @ABorakati, @adilsonbauhofer, @aghaynes, @ahinton-mmc, @aito123, @akarsteve, @akefley, @albamrt, @albertostefanelli, @alecbiom, @alexandrayas, @alexis-catherine, @AlexZHENGH, @alnajar, @amygimma, @anaavu, @anddis, @andrader, @Andrzej-Andrzej, @angelgar, @arbet003, @arnmayer, @aspina7, @AurelienDasre, @awcm0n, @ayogasekaram, @barretmonchka, @barthelmes, @bc-teixeira, @bcjaeger, @BeauMeche, @benediktclaus, @benwhalley, @berg-michael, @bhattmaulik, @BioYork, @blue-abdur, @brachem-christian, @brianmsm, @browne123, @bwiernik, @bx259, @calebasaraba, @CarolineXGao, @CharlyMarie, @ChongTienGoh, @Chris-M-P, @chrisleitzinger, @cjprobst, @ClaudiaCampani, @clmawhorter, @CodieMonster, @coeusanalytics, @coreysparks, @CorradoLanera, @crystalluckett-sanofi, @ctlamb, @dafxy, @DanChaltiel, @DanielPark-MGH, @davideyre, @davidgohel, @davidkane9, @DavisVaughan, @dax44, @dchiu911, @ddsjoberg, @DeFilippis, @denis-or, @dereksonderegger, @derekstein, @DesiQuintans, @dieuv0, @dimbage, @discoleo, @djbirke, @dmenne, @DrDinhLuong, @edelarua, @edrill, @Eduardo-Auer, @ElfatihHasabo, @emilyvertosick, @eokoshi, @ercbk, @eremingt, @erikvona, @eugenividal, @eweisbrod, @fdehrich, @feizhadj, @fh-jsnider, @fh-mthomson, @FrancoisGhesquiere, @ge-generation, @Generalized, @ghost, @giorgioluciano, @giovannitinervia9, @gjones1219, @gorkang, @GuiMarthe, @gungorMetehan, @hass91, @hescalar, @HichemLa, @hichew22, @hr70, @huftis, @hughjonesd, @iaingallagher, @ilyamusabirov, @IndrajeetPatil, @irene9116, @IsadoraBM, @j-tamad, @jalavery, @jaromilfrossard, @JBarsotti, @jbtov, @jeanmanguy, @jemus42, @jenifav, @jennybc, @JeremyPasco, @jerrodanzalone, @JesseRop, @jflynn264, @jhchou, @jhelvy, @jhk0530, @jjallaire, @jkylearmstrong, @jmbarajas, @jmbarbone, @JoanneF1229, @joelgautschi, @johnryan412, @JohnSodling, @jonasrekdalmathisen, @JonGretar, @jordan49er, @jsavinc, @jthomasmock, @juseer, @jwilliman, @karissawhiting, @karl-an, @kendonB, @kentm4, @klh281, @kmdono02, @kristyrobledo, @kwakuduahc1, @lamberp6, @lamhine, @larmarange, @ledermanr, @leejasme, @leslem, @levossen, @lngdet, @longjp, @lorenzoFabbri, @loukesio, @love520lfh, @lspeetluk, @ltin1214, @ltj-github, @lucavd, @LucyMcGowan, @LuiNov, @lukejenner6, @maciekbanas, @maia-sh, @malcolmbarrett, @mariamaseng, @Marsus1972, @martsobm, @Mathicaa, @matthieu-faron, @maxanes, @mayazadok2, @mbac, @mdidish, @medewitt, @meenakshi-kushwaha, @melindahiggins2000, @MelissaAssel, @Melkiades, @mfansler, @michaelcurry1123, @mikemazzucco, @mlamias, @mljaniczek, @moleps, @monitoringhsd, @motocci, @mrmvergeer, @msberends, @mvuorre, @myamortor, @myensr, @MyKo101, @nalimilan, @ndunnewind, @nikostr, @ningyile, @O16789, @oliviercailloux, @oranwutang, @palantre, @parmsam, @Pascal-Schmidt, @PaulC91, @paulduf, @pedersebastian, @perlatex, @pgseye, @philippemichel, @philsf, @polc1410, @Polperobis, @postgres-newbie, @proshano, @raphidoc, @RaviBot, @rawand-hanna, @rbcavanaugh, @remlapmot, @rich-iannone, @RiversPharmD, @rmgpanw, @roaldarbol, @roman2023, @ryzhu75, @s-j-choi, @sachijay, @saifelayan, @sammo3182, @samrodgersmelnick, @samuele-mercan, @sandhyapc, @sbalci, @sda030, @shah-in-boots, @shannonpileggi, @shaunporwal, @shengchaohou, @ShixiangWang, @simonpcouch, @slb2240, @slobaugh, @spiralparagon, @Spring75xx, @StaffanBetner, @steenharsted, @stenw, @Stephonomon, @storopoli, @stratopopolis, @strengejacke, @szimmer, @tamytsujimoto, @TAOS25, @TarJae, @themichjam, @THIB20, @tibirkrajc, @tjmeyers, @tldrcharlene, @tormodb, @toshifumikuroda, @TPDeramus, @UAB-BST-680, @uakimix, @uriahf, @Valja64, @viola-hilbert, @violet-nova, @vvm02, @will-gt, @xkcococo, @xtimbeau, @yatirbe, @yihunzeleke, @yonicd, @yoursdearboy, @YousufMohammed2002, @yuryzablotski, @zabore, @zachariae, @zaddyzad, @zawkzaw, @zdz2101, @zeyunlu, @zhangkaicr, @zhaohongxin0, @zheer-kejlberg, @zhengnow, @zhonghua723, @zlkrvsm, @zongell-star, and @Zoulf001.\n\n\n\n\n\n\n\n\n\n\nr fontawesome::fa(\"stack-overflow\", fill = fa_fill) Ask on stackoverflow.com\nr fontawesome::fa(\"align-justify\", fill = fa_fill) Use the gtsummary tag\nr fontawesome::fa(\"fire\", fill = fa_fill) Thousands of posts!\n\nr fontawesome::fa(\"link\", fill = fa_fill) danieldsjoberg.com\nr fontawesome::fa(\"mastodon\", fill = fa_fill) mastodon.social/@ddsjoberg\nr fontawesome::fa(\"linkedin\", fill = fa_fill) linkedin.com/in/ddsjoberg/\nr fontawesome::fa(\"github\", fill = fa_fill) github.com/ddsjoberg"
  },
  {
    "objectID": "slides/03-tables-gtsummary/09-summary.html#gtsummary-website",
    "href": "slides/03-tables-gtsummary/09-summary.html#gtsummary-website",
    "title": "In Closing",
    "section": "",
    "text": "http://www.danieldsjoberg.com/gtsummary/"
  },
  {
    "objectID": "slides/03-tables-gtsummary/09-summary.html#section",
    "href": "slides/03-tables-gtsummary/09-summary.html#section",
    "title": "In Closing",
    "section": "",
    "text": "Daniel D. Sjoberg\nJoseph Larmarange\nMichael Curry\nJessica Lavery\nKarissa Whiting\nEmily C. Zabor\nXing Bai\nEsther Drill\nJessica Flynn\nMargie Hannum\nStephanie Lobaugh\nShannon Pileggi\nAmy Tin\nGustavo Zapata Wainberg\n\n\n\n\n\n\n@abduazizR, @ablack3, @ABohynDOE, @ABorakati, @adilsonbauhofer, @aghaynes, @ahinton-mmc, @aito123, @akarsteve, @akefley, @albamrt, @albertostefanelli, @alecbiom, @alexandrayas, @alexis-catherine, @AlexZHENGH, @alnajar, @amygimma, @anaavu, @anddis, @andrader, @Andrzej-Andrzej, @angelgar, @arbet003, @arnmayer, @aspina7, @AurelienDasre, @awcm0n, @ayogasekaram, @barretmonchka, @barthelmes, @bc-teixeira, @bcjaeger, @BeauMeche, @benediktclaus, @benwhalley, @berg-michael, @bhattmaulik, @BioYork, @blue-abdur, @brachem-christian, @brianmsm, @browne123, @bwiernik, @bx259, @calebasaraba, @CarolineXGao, @CharlyMarie, @ChongTienGoh, @Chris-M-P, @chrisleitzinger, @cjprobst, @ClaudiaCampani, @clmawhorter, @CodieMonster, @coeusanalytics, @coreysparks, @CorradoLanera, @crystalluckett-sanofi, @ctlamb, @dafxy, @DanChaltiel, @DanielPark-MGH, @davideyre, @davidgohel, @davidkane9, @DavisVaughan, @dax44, @dchiu911, @ddsjoberg, @DeFilippis, @denis-or, @dereksonderegger, @derekstein, @DesiQuintans, @dieuv0, @dimbage, @discoleo, @djbirke, @dmenne, @DrDinhLuong, @edelarua, @edrill, @Eduardo-Auer, @ElfatihHasabo, @emilyvertosick, @eokoshi, @ercbk, @eremingt, @erikvona, @eugenividal, @eweisbrod, @fdehrich, @feizhadj, @fh-jsnider, @fh-mthomson, @FrancoisGhesquiere, @ge-generation, @Generalized, @ghost, @giorgioluciano, @giovannitinervia9, @gjones1219, @gorkang, @GuiMarthe, @gungorMetehan, @hass91, @hescalar, @HichemLa, @hichew22, @hr70, @huftis, @hughjonesd, @iaingallagher, @ilyamusabirov, @IndrajeetPatil, @irene9116, @IsadoraBM, @j-tamad, @jalavery, @jaromilfrossard, @JBarsotti, @jbtov, @jeanmanguy, @jemus42, @jenifav, @jennybc, @JeremyPasco, @jerrodanzalone, @JesseRop, @jflynn264, @jhchou, @jhelvy, @jhk0530, @jjallaire, @jkylearmstrong, @jmbarajas, @jmbarbone, @JoanneF1229, @joelgautschi, @johnryan412, @JohnSodling, @jonasrekdalmathisen, @JonGretar, @jordan49er, @jsavinc, @jthomasmock, @juseer, @jwilliman, @karissawhiting, @karl-an, @kendonB, @kentm4, @klh281, @kmdono02, @kristyrobledo, @kwakuduahc1, @lamberp6, @lamhine, @larmarange, @ledermanr, @leejasme, @leslem, @levossen, @lngdet, @longjp, @lorenzoFabbri, @loukesio, @love520lfh, @lspeetluk, @ltin1214, @ltj-github, @lucavd, @LucyMcGowan, @LuiNov, @lukejenner6, @maciekbanas, @maia-sh, @malcolmbarrett, @mariamaseng, @Marsus1972, @martsobm, @Mathicaa, @matthieu-faron, @maxanes, @mayazadok2, @mbac, @mdidish, @medewitt, @meenakshi-kushwaha, @melindahiggins2000, @MelissaAssel, @Melkiades, @mfansler, @michaelcurry1123, @mikemazzucco, @mlamias, @mljaniczek, @moleps, @monitoringhsd, @motocci, @mrmvergeer, @msberends, @mvuorre, @myamortor, @myensr, @MyKo101, @nalimilan, @ndunnewind, @nikostr, @ningyile, @O16789, @oliviercailloux, @oranwutang, @palantre, @parmsam, @Pascal-Schmidt, @PaulC91, @paulduf, @pedersebastian, @perlatex, @pgseye, @philippemichel, @philsf, @polc1410, @Polperobis, @postgres-newbie, @proshano, @raphidoc, @RaviBot, @rawand-hanna, @rbcavanaugh, @remlapmot, @rich-iannone, @RiversPharmD, @rmgpanw, @roaldarbol, @roman2023, @ryzhu75, @s-j-choi, @sachijay, @saifelayan, @sammo3182, @samrodgersmelnick, @samuele-mercan, @sandhyapc, @sbalci, @sda030, @shah-in-boots, @shannonpileggi, @shaunporwal, @shengchaohou, @ShixiangWang, @simonpcouch, @slb2240, @slobaugh, @spiralparagon, @Spring75xx, @StaffanBetner, @steenharsted, @stenw, @Stephonomon, @storopoli, @stratopopolis, @strengejacke, @szimmer, @tamytsujimoto, @TAOS25, @TarJae, @themichjam, @THIB20, @tibirkrajc, @tjmeyers, @tldrcharlene, @tormodb, @toshifumikuroda, @TPDeramus, @UAB-BST-680, @uakimix, @uriahf, @Valja64, @viola-hilbert, @violet-nova, @vvm02, @will-gt, @xkcococo, @xtimbeau, @yatirbe, @yihunzeleke, @yonicd, @yoursdearboy, @YousufMohammed2002, @yuryzablotski, @zabore, @zachariae, @zaddyzad, @zawkzaw, @zdz2101, @zeyunlu, @zhangkaicr, @zhaohongxin0, @zheer-kejlberg, @zhengnow, @zhonghua723, @zlkrvsm, @zongell-star, and @Zoulf001."
  },
  {
    "objectID": "slides/03-tables-gtsummary/09-summary.html#thank-you",
    "href": "slides/03-tables-gtsummary/09-summary.html#thank-you",
    "title": "In Closing",
    "section": "",
    "text": "r fontawesome::fa(\"stack-overflow\", fill = fa_fill) Ask on stackoverflow.com\nr fontawesome::fa(\"align-justify\", fill = fa_fill) Use the gtsummary tag\nr fontawesome::fa(\"fire\", fill = fa_fill) Thousands of posts!\n\nr fontawesome::fa(\"link\", fill = fa_fill) danieldsjoberg.com\nr fontawesome::fa(\"mastodon\", fill = fa_fill) mastodon.social/@ddsjoberg\nr fontawesome::fa(\"linkedin\", fill = fa_fill) linkedin.com/in/ddsjoberg/\nr fontawesome::fa(\"github\", fill = fa_fill) github.com/ddsjoberg"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html",
    "href": "slides/03-tables-gtsummary/07-themes.html",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "A theme is a set of customization preferences that can be easily set and reused.\nThemes control default settings for existing functions\nThemes control more fine-grained customization not available via arguments or helper functions\nEasily use one of the available themes, or create your own\n\n\n\n\n\nlibrary(gtsummary)\nreset_gtsummary_theme()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Default Theme\"\n  )\n\n\n\n\n\nDefault Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_journal(journal = \"jama\")\n\nSetting theme \"JAMA\"\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Journal Theme (JAMA)\"\n  )\n\n\n\n\n\nJournal Theme (JAMA)\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 98\nDrug B N = 102\n\n\n\n\nAge, Median (IQR)\n46 (37 – 60)\n48 (39 – 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response, n (%)\n28 (29)\n33 (34)\n\n\n    Unknown\n3\n4\n\n\n\n\n\n\n\n\n\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_language(language = \"zh-tw\")\n\nSetting theme \"language: zh-tw\"\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  add_p() |&gt; \n  modify_caption(\n    \"Language Theme (Chinese)\"\n  )\n\n\n\n\n\nLanguage Theme (Chinese)\n\n\n\n\n\n\n\n\n特色\nDrug A N = 981\nDrug B N = 1021\nP 值2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    未知\n7\n4\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    未知\n3\n4\n\n\n\n\n\n1 中位數 (Q1, Q3); n (%)\n\n\n2 Wilcoxon 排序和檢定; 卡方 獨立性檢定\n\n\n\n\n\n\n\n\nLanguage options:\n\n\n\nGerman\nEnglish\nSpanish\nFrench\nGujarati\nHindi\n\n\n\nIcelandic\nJapanese\nKorean\nMarathi\nDutch\n\n\n\nNorwegian\nPortuguese\nSwedish\nChinese Simplified\nChinese Traditional\n\n\n\n\n\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_compact()\n\nSetting theme \"Compact\"\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\"Compact Theme\")\n\n\n\n\n\nCompact Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\nReduces padding and font size\n\n\n\nWhile not yet exported from gtsummary, we can create a theme for tables that look more like what we expect in pharma.\n\nFixed-width font\nContinuous variable summaries default to multi-line\nFunction for rounding percentages includes leading white space\nDefault right alignment on summary statistics\n\n\n\nSetting theme \"Compact\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo N = 86\nXanomeline Low Dose N = 84\nXanomeline High Dose N = 84\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Median (Q1, Q3)\n76.0 (69.0, 82.0)\n77.5 (71.0, 82.0)\n76.0 (70.5, 80.0)\n\n\n    Mean (SD)\n75.2 (8.6)\n75.7 (8.3)\n74.4 (7.9)\n\n\n    Min - Max\n52.0 - 89.0\n51.0 - 88.0\n56.0 - 88.0\n\n\nAge Group, n (%)\n\n\n\n\n\n\n\n\n    &lt;65\n14 (16.3%)\n8 ( 9.5%)\n11 (13.1%)\n\n\n    65-80\n42 (48.8%)\n47 (56.0%)\n55 (65.5%)\n\n\n    &gt;80\n30 (34.9%)\n29 (34.5%)\n18 (21.4%)\n\n\nFemale, n (%)\n53 (61.6%)\n50 (59.5%)\n40 (47.6%)\n\n\n\n\n\n\n\n\n\n\n\nset_gtsummary_theme() to use a custom theme.\nSee the {gtsummary} + themes vignette for examples\n\nhttp://www.danieldsjoberg.com/gtsummary/articles/themes.html\n\n\n\n\n\nWe can also use themes to help us write new functions with different default behavior.\nIn pharma we often want tbl_summary(type = all_continuous() ~ \"continuous2\"). That is, continuous summaries to appear on 2+ rows.\nUse the with_gtsummary_theme() function to help here! In the example below, tbl_demographics() wraps tbl_summary() changing some default behavior. (https://github.com/insightsengineering/crane)\n\n\n\ncrane::theme_gtsummary_roche()\n\nSetting theme \"Roche\"\n\ncrane::tbl_demographics(\n  cards::ADSL,\n  include = c(AGE, RACE)\n)\n\nCharacteristicN = 254Agen254Mean (SD)75 (8)Median77Min - Max51 - 89Racen254AMERICAN INDIAN OR ALASKA NATIVE1 (0.4%)BLACK OR AFRICAN AMERICAN23 (9.1%)WHITE230 (90.6%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme-basics",
    "href": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme-basics",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "A theme is a set of customization preferences that can be easily set and reused.\nThemes control default settings for existing functions\nThemes control more fine-grained customization not available via arguments or helper functions\nEasily use one of the available themes, or create your own"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#gtsummary-default-theme",
    "href": "slides/03-tables-gtsummary/07-themes.html#gtsummary-default-theme",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "library(gtsummary)\nreset_gtsummary_theme()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Default Theme\"\n  )\n\n\n\n\n\nDefault Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme_gtsummary_journal",
    "href": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme_gtsummary_journal",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "reset_gtsummary_theme()\ntheme_gtsummary_journal(journal = \"jama\")\n\nSetting theme \"JAMA\"\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Journal Theme (JAMA)\"\n  )\n\n\n\n\n\nJournal Theme (JAMA)\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 98\nDrug B N = 102\n\n\n\n\nAge, Median (IQR)\n46 (37 – 60)\n48 (39 – 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response, n (%)\n28 (29)\n33 (34)\n\n\n    Unknown\n3\n4"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme_gtsummary_language",
    "href": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme_gtsummary_language",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "reset_gtsummary_theme()\ntheme_gtsummary_language(language = \"zh-tw\")\n\nSetting theme \"language: zh-tw\"\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  add_p() |&gt; \n  modify_caption(\n    \"Language Theme (Chinese)\"\n  )\n\n\n\n\n\nLanguage Theme (Chinese)\n\n\n\n\n\n\n\n\n特色\nDrug A N = 981\nDrug B N = 1021\nP 值2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    未知\n7\n4\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    未知\n3\n4\n\n\n\n\n\n1 中位數 (Q1, Q3); n (%)\n\n\n2 Wilcoxon 排序和檢定; 卡方 獨立性檢定\n\n\n\n\n\n\n\n\nLanguage options:\n\n\n\nGerman\nEnglish\nSpanish\nFrench\nGujarati\nHindi\n\n\n\nIcelandic\nJapanese\nKorean\nMarathi\nDutch\n\n\n\nNorwegian\nPortuguese\nSwedish\nChinese Simplified\nChinese Traditional"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme_gtsummary_compact",
    "href": "slides/03-tables-gtsummary/07-themes.html#gtsummary-theme_gtsummary_compact",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "reset_gtsummary_theme()\ntheme_gtsummary_compact()\n\nSetting theme \"Compact\"\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\"Compact Theme\")\n\n\n\n\n\nCompact Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\nReduces padding and font size"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#a-pharma-theme",
    "href": "slides/03-tables-gtsummary/07-themes.html#a-pharma-theme",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "While not yet exported from gtsummary, we can create a theme for tables that look more like what we expect in pharma.\n\nFixed-width font\nContinuous variable summaries default to multi-line\nFunction for rounding percentages includes leading white space\nDefault right alignment on summary statistics\n\n\n\nSetting theme \"Compact\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo N = 86\nXanomeline Low Dose N = 84\nXanomeline High Dose N = 84\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Median (Q1, Q3)\n76.0 (69.0, 82.0)\n77.5 (71.0, 82.0)\n76.0 (70.5, 80.0)\n\n\n    Mean (SD)\n75.2 (8.6)\n75.7 (8.3)\n74.4 (7.9)\n\n\n    Min - Max\n52.0 - 89.0\n51.0 - 88.0\n56.0 - 88.0\n\n\nAge Group, n (%)\n\n\n\n\n\n\n\n\n    &lt;65\n14 (16.3%)\n8 ( 9.5%)\n11 (13.1%)\n\n\n    65-80\n42 (48.8%)\n47 (56.0%)\n55 (65.5%)\n\n\n    &gt;80\n30 (34.9%)\n29 (34.5%)\n18 (21.4%)\n\n\nFemale, n (%)\n53 (61.6%)\n50 (59.5%)\n40 (47.6%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#gtsummary-set_gtsummary_theme",
    "href": "slides/03-tables-gtsummary/07-themes.html#gtsummary-set_gtsummary_theme",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "set_gtsummary_theme() to use a custom theme.\nSee the {gtsummary} + themes vignette for examples\n\nhttp://www.danieldsjoberg.com/gtsummary/articles/themes.html"
  },
  {
    "objectID": "slides/03-tables-gtsummary/07-themes.html#themes-for-new-functions",
    "href": "slides/03-tables-gtsummary/07-themes.html#themes-for-new-functions",
    "title": "{gtsummary} themes",
    "section": "",
    "text": "We can also use themes to help us write new functions with different default behavior.\nIn pharma we often want tbl_summary(type = all_continuous() ~ \"continuous2\"). That is, continuous summaries to appear on 2+ rows.\nUse the with_gtsummary_theme() function to help here! In the example below, tbl_demographics() wraps tbl_summary() changing some default behavior. (https://github.com/insightsengineering/crane)\n\n\n\ncrane::theme_gtsummary_roche()\n\nSetting theme \"Roche\"\n\ncrane::tbl_demographics(\n  cards::ADSL,\n  include = c(AGE, RACE)\n)\n\nCharacteristicN = 254Agen254Mean (SD)75 (8)Median77Min - Max51 - 89Racen254AMERICAN INDIAN OR ALASKA NATIVE1 (0.4%)BLACK OR AFRICAN AMERICAN23 (9.1%)WHITE230 (90.6%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/04-tbl_merge.html",
    "href": "slides/03-tables-gtsummary/04-tbl_merge.html",
    "title": "tbl_merge()/tbl_stack()",
    "section": "",
    "text": "library(gtsummary)\ntbl_n &lt;- \n  tbl_summary(\n    trial, \n    include = grade, \n    statistic = grade ~ \"{n}\"\n  ) |&gt; \n  modify_header( # update header\n    all_stat_cols() ~ \"**N**\"\n  ) |&gt; \n  modify_footnote( # rm footnote\n    all_stat_cols() ~ NA\n  ) \ntbl_n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\n\n\n\n\nGrade\n\n\n\n\n    I\n68\n\n\n    II\n68\n\n\n    III\n64\n\n\n\n\n\n\n\n\n\n\ntbl_age &lt;-\n  tbl_continuous(\n    trial, \n    include = grade, \n    variable = age, \n    by = trt\n  ) |&gt; \n  modify_header( # update header\n    all_stat_cols() ~ \"**{level}**\"\n  ) \n\n\n\ntbl_age\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\nGrade\n\n\n\n\n\n\n    I\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# combine the tables side by side\nlist(tbl_n, tbl_age) |&gt; \n  tbl_merge(tab_spanner = FALSE) # suppress default header\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nDrug A1\nDrug B1\n\n\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n68\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n64\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)\n\n\n\n\n\n\n\n\n\n\n\n\ntbl_drug_a &lt;- trial |&gt; \n  dplyr::filter(trt == \"Drug A\") |&gt; \n  tbl_summary(include = c(response, death), missing = \"no\")\ntbl_drug_b &lt;- trial |&gt; \n  dplyr::filter(trt == \"Drug B\") |&gt; \n  tbl_summary(include = c(response, death), missing = \"no\")\n\n# stack the two tables \nlist(tbl_drug_a, tbl_drug_b) |&gt; \n  tbl_stack(group_header = c(\"Drug A\", \"Drug B\")) |&gt; # optionally include headers for each table\n  modify_header(all_stat_cols() ~ \"**Outcome Rates**\")\n\nColumn headers among stacked tables differ. Headers from the first table are\nused.\nℹ Check the header is correct and use `modify_header()` to update, or `quiet =\n  TRUE` to suppress this message.\n\n\n\n\n\n\n\n\nCharacteristic\nOutcome Rates1\n\n\n\n\nDrug A\n\n\nTumor Response\n28 (29%)\n\n\nPatient Died\n52 (53%)\n\n\nDrug B\n\n\nTumor Response\n33 (34%)\n\n\nPatient Died\n60 (59%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\ntbl_strata(\n  trial, \n  strata = trt, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(response, death))\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug A\n\n\nDrug B\n\n\n\nn\n%\nn\n%\n\n\n\n\nTumor Response\n28\n29%\n33\n34%\n\n\nPatient Died\n52\n53%\n60\n59%\n\n\n\n\n\n\n\nThe default is to combine stratified tables with tbl_merge().\n\n\n\nWe can also stack the tables.\n\ntbl_strata(\n  trial, \n  strata = trt, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(response, death)),\n  .combine_with = \"tbl_stack\"\n)\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nDrug A\n\n\nTumor Response\n28\n29%\n\n\nPatient Died\n52\n53%\n\n\nDrug B\n\n\nTumor Response\n33\n34%\n\n\nPatient Died\n60\n59%\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMost of the tables we create in the pharma space come from a catalog of standard tables.\nCustom or one-off tables are often quite difficult and time intensive to create.\nThe {gtsummary} package makes it simple to break complex tables into their simple parts and cobble them together in the end.\nMoreover, the internal structure of a gtsummary table is super simple: a data frame and instructions on how to print that data frame to make it cute. If needed, you can directly modify the underlying data frame with modify_table_body().\n\n\n\ntrial |&gt; tbl_summary(include = c(age, grade), by = trt) |&gt; purrr::pluck(\"table_body\")\n\n# A tibble: 6 × 7\n  variable var_type    row_type var_label label   stat_1      stat_2     \n  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt;      \n1 age      continuous  label    Age       Age     46 (37, 60) 48 (39, 56)\n2 age      continuous  missing  Age       Unknown 7           4          \n3 grade    categorical label    Grade     Grade   &lt;NA&gt;        &lt;NA&gt;       \n4 grade    categorical level    Grade     I       35 (36%)    33 (32%)   \n5 grade    categorical level    Grade     II      32 (33%)    36 (35%)   \n6 grade    categorical level    Grade     III     31 (32%)    33 (32%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_merge-for-side-by-side-tables",
    "href": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_merge-for-side-by-side-tables",
    "title": "tbl_merge()/tbl_stack()",
    "section": "",
    "text": "library(gtsummary)\ntbl_n &lt;- \n  tbl_summary(\n    trial, \n    include = grade, \n    statistic = grade ~ \"{n}\"\n  ) |&gt; \n  modify_header( # update header\n    all_stat_cols() ~ \"**N**\"\n  ) |&gt; \n  modify_footnote( # rm footnote\n    all_stat_cols() ~ NA\n  ) \ntbl_n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\n\n\n\n\nGrade\n\n\n\n\n    I\n68\n\n\n    II\n68\n\n\n    III\n64\n\n\n\n\n\n\n\n\n\n\ntbl_age &lt;-\n  tbl_continuous(\n    trial, \n    include = grade, \n    variable = age, \n    by = trt\n  ) |&gt; \n  modify_header( # update header\n    all_stat_cols() ~ \"**{level}**\"\n  ) \n\n\n\ntbl_age\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\nGrade\n\n\n\n\n\n\n    I\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_merge-for-side-by-side-tables-1",
    "href": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_merge-for-side-by-side-tables-1",
    "title": "tbl_merge()/tbl_stack()",
    "section": "",
    "text": "# combine the tables side by side\nlist(tbl_n, tbl_age) |&gt; \n  tbl_merge(tab_spanner = FALSE) # suppress default header\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nDrug A1\nDrug B1\n\n\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n68\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n64\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_stack-to-combine-vertically",
    "href": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_stack-to-combine-vertically",
    "title": "tbl_merge()/tbl_stack()",
    "section": "",
    "text": "tbl_drug_a &lt;- trial |&gt; \n  dplyr::filter(trt == \"Drug A\") |&gt; \n  tbl_summary(include = c(response, death), missing = \"no\")\ntbl_drug_b &lt;- trial |&gt; \n  dplyr::filter(trt == \"Drug B\") |&gt; \n  tbl_summary(include = c(response, death), missing = \"no\")\n\n# stack the two tables \nlist(tbl_drug_a, tbl_drug_b) |&gt; \n  tbl_stack(group_header = c(\"Drug A\", \"Drug B\")) |&gt; # optionally include headers for each table\n  modify_header(all_stat_cols() ~ \"**Outcome Rates**\")\n\nColumn headers among stacked tables differ. Headers from the first table are\nused.\nℹ Check the header is correct and use `modify_header()` to update, or `quiet =\n  TRUE` to suppress this message.\n\n\n\n\n\n\n\n\nCharacteristic\nOutcome Rates1\n\n\n\n\nDrug A\n\n\nTumor Response\n28 (29%)\n\n\nPatient Died\n52 (53%)\n\n\nDrug B\n\n\nTumor Response\n33 (34%)\n\n\nPatient Died\n60 (59%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_strata-for-stratified-tables",
    "href": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_strata-for-stratified-tables",
    "title": "tbl_merge()/tbl_stack()",
    "section": "",
    "text": "tbl_strata(\n  trial, \n  strata = trt, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(response, death))\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug A\n\n\nDrug B\n\n\n\nn\n%\nn\n%\n\n\n\n\nTumor Response\n28\n29%\n33\n34%\n\n\nPatient Died\n52\n53%\n60\n59%\n\n\n\n\n\n\n\nThe default is to combine stratified tables with tbl_merge()."
  },
  {
    "objectID": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_strata-for-stratified-tables-1",
    "href": "slides/03-tables-gtsummary/04-tbl_merge.html#tbl_strata-for-stratified-tables-1",
    "title": "tbl_merge()/tbl_stack()",
    "section": "",
    "text": "We can also stack the tables.\n\ntbl_strata(\n  trial, \n  strata = trt, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(response, death)),\n  .combine_with = \"tbl_stack\"\n)\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nDrug A\n\n\nTumor Response\n28\n29%\n\n\nPatient Died\n52\n53%\n\n\nDrug B\n\n\nTumor Response\n33\n34%\n\n\nPatient Died\n60\n59%"
  },
  {
    "objectID": "slides/03-tables-gtsummary/04-tbl_merge.html#cobbling-tables-together",
    "href": "slides/03-tables-gtsummary/04-tbl_merge.html#cobbling-tables-together",
    "title": "tbl_merge()/tbl_stack()",
    "section": "",
    "text": "Most of the tables we create in the pharma space come from a catalog of standard tables.\nCustom or one-off tables are often quite difficult and time intensive to create.\nThe {gtsummary} package makes it simple to break complex tables into their simple parts and cobble them together in the end.\nMoreover, the internal structure of a gtsummary table is super simple: a data frame and instructions on how to print that data frame to make it cute. If needed, you can directly modify the underlying data frame with modify_table_body().\n\n\n\ntrial |&gt; tbl_summary(include = c(age, grade), by = trt) |&gt; purrr::pluck(\"table_body\")\n\n# A tibble: 6 × 7\n  variable var_type    row_type var_label label   stat_1      stat_2     \n  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt;      \n1 age      continuous  label    Age       Age     46 (37, 60) 48 (39, 56)\n2 age      continuous  missing  Age       Unknown 7           4          \n3 grade    categorical label    Grade     Grade   &lt;NA&gt;        &lt;NA&gt;       \n4 grade    categorical level    Grade     I       35 (36%)    33 (32%)   \n5 grade    categorical level    Grade     II      32 (33%)    36 (35%)   \n6 grade    categorical level    Grade     III     31 (32%)    33 (32%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/02-trial.html",
    "href": "slides/03-tables-gtsummary/02-trial.html",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "The trial data set is included with {gtsummary}\nSimulated data set of baseline characteristics for 200 patients who receive Drug A or Drug B\nVariables were assigned labels using the labelled package\n\n\n\nlibrary(gtsummary)\nlibrary(tidyverse)\nhead(trial) |&gt; gt::gt()\n\n\n\n\n\n\n\nChemotherapy Treatment\nAge\nMarker Level (ng/mL)\nT Stage\nGrade\nTumor Response\nPatient Died\nMonths to Death/Censor\n\n\n\n\nDrug A\n23\n0.160\nT1\nII\n0\n0\n24.00\n\n\nDrug B\n9\n1.107\nT2\nI\n1\n0\n24.00\n\n\nDrug A\n31\n0.277\nT1\nII\n0\n0\n24.00\n\n\nDrug A\nNA\n2.067\nT3\nIII\n1\n1\n17.64\n\n\nDrug A\n51\n2.767\nT4\nIII\n1\n1\n16.43\n\n\nDrug B\n39\n0.613\nT4\nI\n0\n1\n15.64"
  },
  {
    "objectID": "slides/03-tables-gtsummary/02-trial.html#example-dataset",
    "href": "slides/03-tables-gtsummary/02-trial.html#example-dataset",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "The trial data set is included with {gtsummary}\nSimulated data set of baseline characteristics for 200 patients who receive Drug A or Drug B\nVariables were assigned labels using the labelled package\n\n\n\nlibrary(gtsummary)\nlibrary(tidyverse)\nhead(trial) |&gt; gt::gt()\n\n\n\n\n\n\n\nChemotherapy Treatment\nAge\nMarker Level (ng/mL)\nT Stage\nGrade\nTumor Response\nPatient Died\nMonths to Death/Censor\n\n\n\n\nDrug A\n23\n0.160\nT1\nII\n0\n0\n24.00\n\n\nDrug B\n9\n1.107\nT2\nI\n1\n0\n24.00\n\n\nDrug A\n31\n0.277\nT1\nII\n0\n0\n24.00\n\n\nDrug A\nNA\n2.067\nT3\nIII\n1\n1\n17.64\n\n\nDrug A\n51\n2.767\nT4\nIII\n1\n1\n16.43\n\n\nDrug B\n39\n0.613\nT4\nI\n0\n1\n15.64"
  },
  {
    "objectID": "slides/03-tables-gtsummary/02-trial.html#example-dataset-1",
    "href": "slides/03-tables-gtsummary/02-trial.html#example-dataset-1",
    "title": "Analysis Results Datasets",
    "section": "Example Dataset",
    "text": "Example Dataset\n\n\nThis presentation will use a subset of the variables.\n\nsm_trial &lt;-\n  trial |&gt; \n  select(trt, age, grade, response)\n\n\n\n\n\n\n\n\n\n\nVariable\nLabel\n\n\n\n\ntrt\nChemotherapy Treatment\n\n\nage\nAge\n\n\ngrade\nGrade\n\n\nresponse\nTumor Response"
  },
  {
    "objectID": "slides/03-tables-gtsummary/00-setup.html",
    "href": "slides/03-tables-gtsummary/00-setup.html",
    "title": "Introduction",
    "section": "",
    "text": "── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\n Please ask questions at any time!"
  },
  {
    "objectID": "slides/03-tables-gtsummary/00-setup.html#questions",
    "href": "slides/03-tables-gtsummary/00-setup.html#questions",
    "title": "Introduction",
    "section": "",
    "text": "Please ask questions at any time!"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html",
    "href": "slides/02-intro-cardx/02-extras.html",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "What happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_continuous(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fn\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#when-things-go-wrong",
    "href": "slides/02-intro-cardx/02-extras.html#when-things-go-wrong",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "What happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_continuous(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fn\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#mock-ards",
    "href": "slides/02-intro-cardx/02-extras.html#mock-ards",
    "title": "Analysis Results Datasets",
    "section": "Mock ARDs",
    "text": "Mock ARDs\nLike mock tables, mock ARDs are often useful\n\ncards::bind_ard(\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\"))),\n  cards::mock_continuous(variables = \"AGE\")\n) |&gt; \n  cards::apply_fmt_fn()\n\n{cards} data frame: 14 x 10\n\n\n   variable variable_level stat_name stat_label stat stat_fmt\n1    AGEGR1            &lt;65         n          n            xx\n2    AGEGR1            &lt;65         p          %          xx.x\n3    AGEGR1            &lt;65         N          N            xx\n4    AGEGR1           &gt;=65         n          n            xx\n5    AGEGR1           &gt;=65         p          %          xx.x\n6    AGEGR1           &gt;=65         N          N            xx\n7       AGE                        N          N            xx\n8       AGE                     mean       Mean          xx.x\n9       AGE                       sd         SD          xx.x\n10      AGE                   median     Median          xx.x\n11      AGE                      p25         Q1          xx.x\n12      AGE                      p75         Q3          xx.x\n13      AGE                      min        Min          xx.x\n14      AGE                      max        Max          xx.x\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#mock-ards-1",
    "href": "slides/02-intro-cardx/02-extras.html#mock-ards-1",
    "title": "Analysis Results Datasets",
    "section": "Mock ARDs",
    "text": "Mock ARDs\n\ncards::bind_ard(\n  cards::mock_continuous(variables = \"AGE\", \n                         by = list(ARM = c(\"Drug A\", \"Drug B\"))),\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\")),\n                          by = list(ARM = c(\"Drug A\", \"Drug B\")))\n) |&gt; \n  gtsummary::tbl_ard_summary(\n    by = ARM,\n    type  = AGE ~ \"continuous2\",\n    statistic = AGE ~ c(\"{N}\", \"{mean} ({sd})\", \"{median} ({p25}, {p75})\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\nAGE\n\n\n\n\n\n\n    N\nxx\nxx\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Median (Q1, Q3)\nxx.x (xx.x, xx.x)\nxx.x (xx.x, xx.x)\n\n\nAGEGR1\n\n\n\n\n\n\n    &lt;65\nxx (xx.x%)\nxx (xx.x%)\n\n\n    &gt;=65\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#other-ard-representations",
    "href": "slides/02-intro-cardx/02-extras.html#other-ard-representations",
    "title": "Analysis Results Datasets",
    "section": "Other ARD Representations",
    "text": "Other ARD Representations\nWhile the data frame-based ARD is easy to work with, language-agnostic representations are often useful.\n\n\nYAML\n\ncards::as_nested_list(ard) |&gt; \n  yaml::as.yaml() |&gt; \n  cat()\n\nvariable:\n  AGE:\n    group1:\n      ARM:\n        group1_level:\n          Placebo:\n            stat_name:\n              'N':\n                stat: 86\n                stat_fmt: '86'\n                warning: ~\n                error: ~\n                context: continuous\n              mean:\n                stat: 75.2093023\n...\n\n\n\nJSON\n\ncards::as_nested_list(ard) |&gt; \n  jsonlite::toJSON(pretty = TRUE)\n\n{\n  \"variable\": {\n    \"AGE\": {\n      \"group1\": {\n        \"ARM\": {\n          \"group1_level\": {\n            \"Placebo\": {\n              \"stat_name\": {\n                \"N\": {\n                  \"stat\": [86],\n                  \"stat_fmt\": [\"86\"],\n                  \"warning\": {},\n                  \"error\": {},\n                  \"context\": [\"continuous\"]\n                },\n..."
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#break",
    "href": "slides/02-intro-cardx/02-extras.html#break",
    "title": "Analysis Results Datasets",
    "section": "Break",
    "text": "Break\n\n\n\nSister Act 2: Back in the Habit\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html",
    "href": "slides/01-intro-cards/intro.html",
    "title": "Introduction",
    "section": "",
    "text": "You want to learn about ARDs\nYou want to learn about new tools for working with ARDs\nYou want to learn about new tools for making displays from ARDs"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#this-workshop-is-for-you-if",
    "href": "slides/01-intro-cards/intro.html#this-workshop-is-for-you-if",
    "title": "Introduction",
    "section": "",
    "text": "You want to learn about ARDs\nYou want to learn about new tools for working with ARDs\nYou want to learn about new tools for making displays from ARDs"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-1",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-1",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\n\n\nEmerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-2",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-2",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-3",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-3",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-data-ard",
    "href": "slides/01-intro-cards/intro.html#analysis-results-data-ard",
    "title": "Introduction",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-data-ard-1",
    "href": "slides/01-intro-cards/intro.html#analysis-results-data-ard-1",
    "title": "Introduction",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#a-few-notes-about-ards",
    "href": "slides/01-intro-cards/intro.html#a-few-notes-about-ards",
    "title": "Introduction",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\n\nRethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html",
    "href": "slides/01-intro-cards/cards.html",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n45k downloads per month 🤯\n\n\n\n\n\nlibrary(cards)\n\n# create ARD with default summary statistics\nADSL |&gt; \n  ard_continuous(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable   context stat_name stat_label   stat fmt_fn\n1      AGE continuo…         N          N    254      0\n2      AGE continuo…      mean       Mean 75.087      1\n3      AGE continuo…        sd         SD  8.246      1\n4      AGE continuo…    median     Median     77      1\n5      AGE continuo…       p25         Q1     70      1\n6      AGE continuo…       p75         Q3     81      1\n7      AGE continuo…       min        Min     51      1\n8      AGE continuo…       max        Max     89      1\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 24 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Xanomeli…      AGE         N          N     84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nADSL |&gt; \n  ard_continuous(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Xanomeli…      AGE        cv         cv 0.106\n3    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nCustomize the statistics returned for each variable\n\n\nADSL |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_continuous(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 9 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1    ARM      Placebo      AGE        cv         cv  0.114\n2    ARM      Placebo     AGE2      mean       Mean 75.209\n3    ARM      Placebo     AGE2    median     Median     76\n4    ARM    Xanomeli…      AGE        cv         cv  0.106\n5    ARM    Xanomeli…     AGE2      mean       Mean 74.381\n6    ARM    Xanomeli…     AGE2    median     Median     76\n7    ARM    Xanomeli…      AGE        cv         cv   0.11\n8    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n9    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nOverride the default formatting functions, method 1:\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fn = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fn() # add a character column of rounded results\n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nOverride the default formatting functions, method 2:\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fn(stat_names = \"mean\", fmt_fn = 0) |&gt; \n  apply_fmt_fn() \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\nincludes n, %, N by default\n\n\n\nADSL |&gt; \n  ard_categorical(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 27 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &lt;65         n          n    14\n2     ARM      Placebo   AGEGR1            &lt;65         N          N    86\n3     ARM      Placebo   AGEGR1            &lt;65         p          % 0.163\n4     ARM      Placebo   AGEGR1            &gt;80         n          n    30\n5     ARM      Placebo   AGEGR1            &gt;80         N          N    86\n6     ARM      Placebo   AGEGR1            &gt;80         p          % 0.349\n7     ARM      Placebo   AGEGR1          65-80         n          n    42\n8     ARM      Placebo   AGEGR1          65-80         N          N    86\n9     ARM      Placebo   AGEGR1          65-80         p          % 0.488\n10    ARM    Xanomeli…   AGEGR1            &lt;65         n          n    11\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\n\n\nard_dichotomous(): similar to ard_categorical(), but for dichotomous summaries\nard_hierarchical(): similar to ard_categorical(), but built for nested tabulations, e.g. AE terms within SOC\nard_complex(): similar to ard_continuous(), but the summary functions can be more complex and accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞\n\n\n\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: shuffle_ard(), get_ard_statistics(), replace_null_statistic(), etc.\n\n\n\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nADSL |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_continuous(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_categorical(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &lt;65         p          %  0.163\n4     ARM      Placebo   AGEGR1            &gt;80         p          %  0.349\n5     ARM      Placebo   AGEGR1          65-80         p          %  0.488\n6     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n7     ARM    Xanomeli…      AGE                       sd         SD  7.886\n8     ARM    Xanomeli…   AGEGR1            &lt;65         p          %  0.131\n9     ARM    Xanomeli…   AGEGR1            &gt;80         p          %  0.214\n10    ARM    Xanomeli…   AGEGR1          65-80         p          %  0.655\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\n\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = ,\n  variables =\n)\n\n\n\n\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGE, BMI, HEIGHT, WEIGHT)\n)\n\n{cards} data frame: 96 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1  TRT01A      Placebo      AGE         N          N     86\n2  TRT01A      Placebo      AGE      mean       Mean 75.209\n3  TRT01A      Placebo      AGE        sd         SD   8.59\n4  TRT01A      Placebo      AGE    median     Median     76\n5  TRT01A      Placebo      AGE       p25         Q1     69\n6  TRT01A      Placebo      AGE       p75         Q3     82\n7  TRT01A      Placebo      AGE       min        Min     52\n8  TRT01A      Placebo      AGE       max        Max     89\n9  TRT01A      Placebo      BMI         N          N     86\n10 TRT01A      Placebo      BMI      mean       Mean 23.645\n\n\nℹ 86 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = ,\n  variables =\n)\n\n\n\n\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGEGR1, SEX, RACE, ETHNIC)\n)\n\n{cards} data frame: 81 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = ,\n\n  # add ard_* calls here\n\n)\n\n\n\n\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC))\n)\n\n{cards} data frame: 186 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 176 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall =  ,\n  .total_n =  \n)\n\n\n\n\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 246 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 236 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts\nard_stack_hierarchical() and ard_stack_hierarchical_count(): perform hierarchical calculations across many levels of the hierarchy (e.g., Any AE Overall, by System Organ Class, by Preferred Term)\n\n\n\n\n\n\nard_hierarchical stacking functions simplify this multi-step process for calculating over a hierarchy into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA,\n  id = USUBJID,\n  denominator = adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n8    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         N\n9    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         p\n10   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n11   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n12   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n   stat_label  stat\n1           n    11\n2           N    86\n3           % 0.128\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     1\n11          N    86\n12          % 0.012\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA, \n  denominator = adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1   TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n4   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n  stat_label stat\n1          n   14\n2          n   10\n3          n    2\n4          n    2\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nCalculate the number and percentage of unique subjects (USUBJID) with at least one AE:\n\nOverall\nBy each SOC (AESOC)\nBy each Preferred term (AEDECOD) within SOC (AESOC)\n\nBy every combination of treatment group (TRT01A) and severity (AESEV)\n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n)\n\n\n\n\nCalculate the number and percentage of unique subjects (USUBJID) with at least one AE:\n\nOverall\nBy each SOC (AESOC)\nBy each Preferred term (AEDECOD) within SOC (AESOC)\n\nBy every combination of treatment group (TRT01A) and severity (AESEV)\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = c(TRTA, AESEV), \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n)\n\nℹ Denominator set by number of rows in `denominator` data frame.\n{cards} data frame: 351 x 15\n\n\n   group1 group1_level group2 group2_level group3 group3_level\n1    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n2    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n3    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n4    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n5    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n6    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n7    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n8    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n9    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n10   TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n                       variable variable_level stat_name stat_label  stat\n1                         AESOC      GASTROIN…         n          n    10\n2                         AESOC      GASTROIN…         N          N   254\n3                         AESOC      GASTROIN…         p          % 0.039\n4                         AESOC      GENERAL …         n          n     8\n5                         AESOC      GENERAL …         N          N   254\n6                         AESOC      GENERAL …         p          % 0.031\n7                         AESOC      SKIN AND…         n          n    10\n8                         AESOC      SKIN AND…         N          N   254\n9                         AESOC      SKIN AND…         p          % 0.039\n10 ..ard_hierarchical_overall..           TRUE         n          n    25\n\n\nℹ 341 more rows\nℹ Use `print(n = ...)` to see more rows\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-introduction",
    "href": "slides/01-intro-cards/cards.html#cards-introduction",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n45k downloads per month 🤯"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "library(cards)\n\n# create ARD with default summary statistics\nADSL |&gt; \n  ard_continuous(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable   context stat_name stat_label   stat fmt_fn\n1      AGE continuo…         N          N    254      0\n2      AGE continuo…      mean       Mean 75.087      1\n3      AGE continuo…        sd         SD  8.246      1\n4      AGE continuo…    median     Median     77      1\n5      AGE continuo…       p25         Q1     70      1\n6      AGE continuo…       p75         Q3     81      1\n7      AGE continuo…       min        Min     51      1\n8      AGE continuo…       max        Max     89      1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-by-variable",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-by-variable",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "by: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 24 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Xanomeli…      AGE         N          N     84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "statistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nADSL |&gt; \n  ard_continuous(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Xanomeli…      AGE        cv         cv 0.106\n3    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics-1",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Customize the statistics returned for each variable\n\n\nADSL |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_continuous(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 9 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1    ARM      Placebo      AGE        cv         cv  0.114\n2    ARM      Placebo     AGE2      mean       Mean 75.209\n3    ARM      Placebo     AGE2    median     Median     76\n4    ARM    Xanomeli…      AGE        cv         cv  0.106\n5    ARM    Xanomeli…     AGE2      mean       Mean 74.381\n6    ARM    Xanomeli…     AGE2    median     Median     76\n7    ARM    Xanomeli…      AGE        cv         cv   0.11\n8    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n9    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-fmt_fn",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-fmt_fn",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions, method 1:\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fn = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fn() # add a character column of rounded results\n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-fmt_fn-1",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-fmt_fn-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions, method 2:\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fn(stat_names = \"mean\", fmt_fn = 0) |&gt; \n  apply_fmt_fn() \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_categorical",
    "href": "slides/01-intro-cards/cards.html#cards-ard_categorical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "includes n, %, N by default\n\n\n\nADSL |&gt; \n  ard_categorical(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 27 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &lt;65         n          n    14\n2     ARM      Placebo   AGEGR1            &lt;65         N          N    86\n3     ARM      Placebo   AGEGR1            &lt;65         p          % 0.163\n4     ARM      Placebo   AGEGR1            &gt;80         n          n    30\n5     ARM      Placebo   AGEGR1            &gt;80         N          N    86\n6     ARM      Placebo   AGEGR1            &gt;80         p          % 0.349\n7     ARM      Placebo   AGEGR1          65-80         n          n    42\n8     ARM      Placebo   AGEGR1          65-80         N          N    86\n9     ARM      Placebo   AGEGR1          65-80         p          % 0.488\n10    ARM    Xanomeli…   AGEGR1            &lt;65         n          n    11\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-other-summary-functions",
    "href": "slides/01-intro-cards/cards.html#cards-other-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_dichotomous(): similar to ard_categorical(), but for dichotomous summaries\nard_hierarchical(): similar to ard_categorical(), but built for nested tabulations, e.g. AE terms within SOC\nard_complex(): similar to ard_continuous(), but the summary functions can be more complex and accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-other-functions",
    "href": "slides/01-intro-cards/cards.html#cards-other-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "In addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: shuffle_ard(), get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-stacking-utilities",
    "href": "slides/01-intro-cards/cards.html#cards-stacking-utilities",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "data and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nADSL |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_continuous(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_categorical(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &lt;65         p          %  0.163\n4     ARM      Placebo   AGEGR1            &gt;80         p          %  0.349\n5     ARM      Placebo   AGEGR1          65-80         p          %  0.488\n6     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n7     ARM    Xanomeli…      AGE                       sd         SD  7.886\n8     ARM    Xanomeli…   AGEGR1            &lt;65         p          %  0.131\n9     ARM    Xanomeli…   AGEGR1            &gt;80         p          %  0.214\n10    ARM    Xanomeli…   AGEGR1          65-80         p          %  0.655\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-1",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "First, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-2",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-2",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "First, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGE, BMI, HEIGHT, WEIGHT)\n)\n\n{cards} data frame: 96 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1  TRT01A      Placebo      AGE         N          N     86\n2  TRT01A      Placebo      AGE      mean       Mean 75.209\n3  TRT01A      Placebo      AGE        sd         SD   8.59\n4  TRT01A      Placebo      AGE    median     Median     76\n5  TRT01A      Placebo      AGE       p25         Q1     69\n6  TRT01A      Placebo      AGE       p75         Q3     82\n7  TRT01A      Placebo      AGE       min        Min     52\n8  TRT01A      Placebo      AGE       max        Max     89\n9  TRT01A      Placebo      BMI         N          N     86\n10 TRT01A      Placebo      BMI      mean       Mean 23.645\n\n\nℹ 86 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-3",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-3",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Next, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-4",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-4",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Next, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGEGR1, SEX, RACE, ETHNIC)\n)\n\n{cards} data frame: 81 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-5",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-5",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Perform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = ,\n\n  # add ard_* calls here\n\n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-6",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-6",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Perform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC))\n)\n\n{cards} data frame: 186 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 176 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-7",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-7",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Also add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall =  ,\n  .total_n =  \n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-8",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-8",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Also add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 246 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 236 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-hierarchical-summary-functions",
    "href": "slides/01-intro-cards/cards.html#cards-hierarchical-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Following hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts\nard_stack_hierarchical() and ard_stack_hierarchical_count(): perform hierarchical calculations across many levels of the hierarchy (e.g., Any AE Overall, by System Organ Class, by Preferred Term)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/01-intro-cards/cards.html#cards-stacking-function-for-ard_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_hierarchical stacking functions simplify this multi-step process for calculating over a hierarchy into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA,\n  id = USUBJID,\n  denominator = adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n8    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         N\n9    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         p\n10   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n11   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n12   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n   stat_label  stat\n1           n    11\n2           N    86\n3           % 0.128\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     1\n11          N    86\n12          % 0.012\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/01-intro-cards/cards.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Below is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA, \n  denominator = adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1   TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n4   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n  stat_label stat\n1          n   14\n2          n   10\n3          n    2\n4          n    2\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-ae-ard",
    "href": "slides/01-intro-cards/cards.html#example-ae-ard",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Calculate the number and percentage of unique subjects (USUBJID) with at least one AE:\n\nOverall\nBy each SOC (AESOC)\nBy each Preferred term (AEDECOD) within SOC (AESOC)\n\nBy every combination of treatment group (TRT01A) and severity (AESEV)\n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-ae-ard-1",
    "href": "slides/01-intro-cards/cards.html#example-ae-ard-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Calculate the number and percentage of unique subjects (USUBJID) with at least one AE:\n\nOverall\nBy each SOC (AESOC)\nBy each Preferred term (AEDECOD) within SOC (AESOC)\n\nBy every combination of treatment group (TRT01A) and severity (AESEV)\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = c(TRTA, AESEV), \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n)\n\nℹ Denominator set by number of rows in `denominator` data frame.\n{cards} data frame: 351 x 15\n\n\n   group1 group1_level group2 group2_level group3 group3_level\n1    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n2    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n3    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n4    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n5    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n6    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n7    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n8    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n9    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n10   TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n                       variable variable_level stat_name stat_label  stat\n1                         AESOC      GASTROIN…         n          n    10\n2                         AESOC      GASTROIN…         N          N   254\n3                         AESOC      GASTROIN…         p          % 0.039\n4                         AESOC      GENERAL …         n          n     8\n5                         AESOC      GENERAL …         N          N   254\n6                         AESOC      GENERAL …         p          % 0.031\n7                         AESOC      SKIN AND…         n          n    10\n8                         AESOC      SKIN AND…         N          N   254\n9                         AESOC      SKIN AND…         p          % 0.039\n10 ..ard_hierarchical_overall..           TRUE         n          n    25\n\n\nℹ 341 more rows\nℹ Use `print(n = ...)` to see more rows\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "",
    "text": "🗓️ Tuesday March 18, 2025 | 04:00 - 05:30PM EDT\n🏢 Renaissance Orlando at SeaWorld, Oceans 1\n💥 FREE for PHUSE US Connect Attendees!",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Description",
    "text": "Description\nThe CDISC Analysis Results Data (ARD) Model is an emerging standard for encoding statistical analysis summaries in a machine-readable format. Its primary objective is to streamline the processes of automation, ensuring reproducibility, promoting reusability, and enhancing traceability.\nThe newly released {cards} R package, a collaborative effort in the Pharmaverse including Roche, GSK, and Novartis, offers a variety of functions for ARD generation. These range from basic univariate summaries like means and tabulations to complex multivariable summaries encompassing regression models and statistical tests.\nIn this interactive workshop, attendees will learn about ARDs and how they fit into the larger CDISC Analysis Results Standard. They will get hands-on experience using {cards} to build ARDs for both simple and complex statistical summaries. Lastly, attendees will also be introduced to open-source tools for converting their ARDs into tables using the {gtsummary} and {tfrmt} R packages. Attendees will leave with a solid understanding of ARDs and the knowledge of how to integrate them into their daily work using open-source tools.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#slides",
    "href": "index.html#slides",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Slides",
    "text": "Slides\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary}\nARD to Tables with {tfrmt}",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Instructors",
    "text": "Instructors\n\nDaniel D. Sjoberg (he/him) is a Senior Principal Data Scientist at Genentech. Previously, he was a Lead Data Science Manager at the Prostate Cancer Clinical Trials Consortium, and a Senior Biostatistician at Memorial Sloan Kettering Cancer Center in New York City. He enjoys R package development, creating many packages available on CRAN, R-Universe, and GitHub. He’s a co-organizer of rainbowR (a community that supports, promotes and connects LGBTQ+ people who code in the R language) and of the R Medicine Conference. His research interests include adaptive methods in clinical trials, precision medicine, and predictive modeling. Daniel is the winner of the 2021 American Statistical Association (ASA) Innovation in Statistical Programming and Analytics award.\n   \n\nBecca Krouse is a data scientist in GSK’s Statistics and Data Science Innovation Hub. A biostatistician by training, she has experience spanning 14+ years in the field of clinical research and specializes in developing R-based tools.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "slides/01-intro-cards/index.html#instructors",
    "href": "slides/01-intro-cards/index.html#instructors",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Instructors",
    "text": "Instructors\n\n\n\n\n\n\nDaniel Sjoberg, Genentech\n\n\n\n\n\n\nBecca Krouse, GSK\n\n\n\nWho are we?\nWhat do we do?\nWhy are we here?"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#workshop-outline",
    "href": "slides/01-intro-cards/index.html#workshop-outline",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Workshop outline",
    "text": "Workshop outline\n\nIntroduction to the Analysis Results Standard and ARDs with {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#this-workshop-is-for-you-if",
    "href": "slides/01-intro-cards/index.html#this-workshop-is-for-you-if",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "This workshop is for you if…",
    "text": "This workshop is for you if…\n\nYou want to learn about ARDs\nYou want to learn about new tools for working with ARDs\nYou want to learn about new tools for making displays from ARDs"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars-1",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\n\n\nEmerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars-2",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars-2",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars-3",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars-3",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-data-ard",
    "href": "slides/01-intro-cards/index.html#analysis-results-data-ard",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-data-ard-1",
    "href": "slides/01-intro-cards/index.html#analysis-results-data-ard-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/01-intro-cards/index.html#a-few-notes-about-ards",
    "href": "slides/01-intro-cards/index.html#a-few-notes-about-ards",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\n\nRethinking QC\n\nQC can be focused on the raw value, not the formatted display\n\nYou don’t have to waste time trying to match formatting to match QC\nBut…QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-introduction",
    "href": "slides/01-intro-cards/index.html#cards-introduction",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Introduction",
    "text": "{cards}: Introduction\n\nPart of the Pharmaverse\nCollaboration between Roche, GSK, Novartis\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n45k downloads per month 🤯"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous()",
    "text": "{cards}: ard_continuous()\n\nlibrary(cards)\n\n# create ARD with default summary statistics\nADSL |&gt; \n  ard_continuous(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable   context stat_name stat_label   stat fmt_fn\n1      AGE continuo…         N          N    254      0\n2      AGE continuo…      mean       Mean 75.087      1\n3      AGE continuo…        sd         SD  8.246      1\n4      AGE continuo…    median     Median     77      1\n5      AGE continuo…       p25         Q1     70      1\n6      AGE continuo…       p75         Q3     81      1\n7      AGE continuo…       min        Min     51      1\n8      AGE continuo…       max        Max     89      1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-by-variable",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-by-variable",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() by variable",
    "text": "{cards}: ard_continuous() by variable\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 24 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Xanomeli…      AGE         N          N     84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() statistics",
    "text": "{cards}: ard_continuous() statistics\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nADSL |&gt; \n  ard_continuous(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Xanomeli…      AGE        cv         cv 0.106\n3    ARM    Xanomeli…      AGE        cv         cv  0.11"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics-1",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() statistics",
    "text": "{cards}: ard_continuous() statistics\n\nCustomize the statistics returned for each variable\n\n\nADSL |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_continuous(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n  group1 group1_level variable stat_name stat_label   stat\n1    ARM      Placebo      AGE        cv         cv  0.114\n2    ARM      Placebo     AGE2      mean       Mean 75.209\n3    ARM      Placebo     AGE2    median     Median     76\n4    ARM    Xanomeli…      AGE        cv         cv  0.106\n5    ARM    Xanomeli…     AGE2      mean       Mean 74.381\n6    ARM    Xanomeli…     AGE2    median     Median     76\n7    ARM    Xanomeli…      AGE        cv         cv   0.11\n8    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n9    ARM    Xanomeli…     AGE2    median     Median   77.5"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-fmt_fn",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-fmt_fn",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() fmt_fn",
    "text": "{cards}: ard_continuous() fmt_fn\n\nOverride the default formatting functions, method 1:\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n    fmt_fn = ~list(mean = 0)                \n  ) |&gt; \n  apply_fmt_fn() # add a character column of rounded results\n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-fmt_fn-1",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-fmt_fn-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() fmt_fn",
    "text": "{cards}: ard_continuous() fmt_fn\n\nOverride the default formatting functions, method 2:\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fn(stat_names = \"mean\", fmt_fn = 0) |&gt; \n  apply_fmt_fn() \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_categorical",
    "href": "slides/01-intro-cards/index.html#cards-ard_categorical",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_categorical()",
    "text": "{cards}: ard_categorical()\n\n\nincludes n, %, N by default\n\n\n\nADSL |&gt; \n  ard_categorical(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 27 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &lt;65         n          n    14\n2     ARM      Placebo   AGEGR1            &lt;65         N          N    86\n3     ARM      Placebo   AGEGR1            &lt;65         p          % 0.163\n4     ARM      Placebo   AGEGR1            &gt;80         n          n    30\n5     ARM      Placebo   AGEGR1            &gt;80         N          N    86\n6     ARM      Placebo   AGEGR1            &gt;80         p          % 0.349\n7     ARM      Placebo   AGEGR1          65-80         n          n    42\n8     ARM      Placebo   AGEGR1          65-80         N          N    86\n9     ARM      Placebo   AGEGR1          65-80         p          % 0.488\n10    ARM    Xanomeli…   AGEGR1            &lt;65         n          n    11\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-other-summary-functions",
    "href": "slides/01-intro-cards/index.html#cards-other-summary-functions",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Other Summary Functions",
    "text": "{cards}: Other Summary Functions\n\nard_dichotomous(): similar to ard_categorical(), but for dichotomous summaries\nard_hierarchical(): similar to ard_categorical(), but built for nested tabulations, e.g. AE terms within SOC\nard_complex(): similar to ard_continuous(), but the summary functions can be more complex and accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-other-functions",
    "href": "slides/01-intro-cards/index.html#cards-other-functions",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Other Functions",
    "text": "{cards}: Other Functions\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), tidy_as_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: shuffle_ard(), get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-stacking-utilities",
    "href": "slides/01-intro-cards/index.html#cards-stacking-utilities",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Stacking utilities",
    "text": "{cards}: Stacking utilities\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nADSL |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_continuous(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_categorical(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &lt;65         p          %  0.163\n4     ARM      Placebo   AGEGR1            &gt;80         p          %  0.349\n5     ARM      Placebo   AGEGR1          65-80         p          %  0.488\n6     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n7     ARM    Xanomeli…      AGE                       sd         SD  7.886\n8     ARM    Xanomeli…   AGEGR1            &lt;65         p          %  0.131\n9     ARM    Xanomeli…   AGEGR1            &gt;80         p          %  0.214\n10    ARM    Xanomeli…   AGEGR1          65-80         p          %  0.655\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-1",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-2",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-2",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGE, BMI, HEIGHT, WEIGHT)\n)\n\n   group1 group1_level variable stat_name stat_label   stat\n1  TRT01A      Placebo      AGE         N          N     86\n2  TRT01A      Placebo      AGE      mean       Mean 75.209\n3  TRT01A      Placebo      AGE        sd         SD   8.59\n4  TRT01A      Placebo      AGE    median     Median     76\n5  TRT01A      Placebo      AGE       p25         Q1     69\n6  TRT01A      Placebo      AGE       p75         Q3     82\n7  TRT01A      Placebo      AGE       min        Min     52\n8  TRT01A      Placebo      AGE       max        Max     89\n9  TRT01A      Placebo      BMI         N          N     86\n10 TRT01A      Placebo      BMI      mean       Mean 23.645"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-3",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-3",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-4",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-4",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGEGR1, SEX, RACE, ETHNIC)\n)\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-5",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-5",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = ,\n\n  # add ard_* calls here\n\n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-6",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-6",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC))\n)\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-7",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-7",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall =  ,\n  .total_n =  \n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-8",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-8",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-hierarchical-summary-functions",
    "href": "slides/01-intro-cards/index.html#cards-hierarchical-summary-functions",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Hierarchical Summary Functions",
    "text": "{cards}: Hierarchical Summary Functions\nFollowing hierarchical summary functions aid in nested tabulations (e.g. AE terms within SOC):\n\nard_hierarchical(): calculating nested subject-level rates\nard_hierarchical_count(): calculating nested event-level counts\nard_stack_hierarchical() and ard_stack_hierarchical_count(): perform hierarchical calculations across many levels of the hierarchy (e.g., Any AE Overall, by System Organ Class, by Preferred Term)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-stacking-function-for-ard_hierarchical",
    "href": "slides/01-intro-cards/index.html#cards-stacking-function-for-ard_hierarchical",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Stacking function for ard_hierarchical()",
    "text": "{cards}: Stacking function for ard_hierarchical()\n\n\nard_hierarchical stacking functions simplify this multi-step process for calculating over a hierarchy into a single step\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA,\n  id = USUBJID,\n  denominator = adsl\n)\n\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n8    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         N\n9    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         p\n10   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n11   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n12   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n   stat_label  stat\n1           n    11\n2           N    86\n3           % 0.128\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     1\n11          N    86\n12          % 0.012"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "href": "slides/01-intro-cards/index.html#cards-stacking-function-for-ard_hierarchical_count",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Stacking function for ard_hierarchical_count()",
    "text": "{cards}: Stacking function for ard_hierarchical_count()\n\n\nBelow is the stacking function for event-level summaries, aligned with ard_hierarchical_count()\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA, \n  denominator = adsl\n)\n\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name\n1   TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n3   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n4   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n  stat_label stat\n1          n   14\n2          n   10\n3          n    2\n4          n    2"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-ae-ard",
    "href": "slides/01-intro-cards/index.html#example-ae-ard",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: AE ARD",
    "text": "Example: AE ARD\nCalculate the number and percentage of unique subjects (USUBJID) with at least one AE:\n\nOverall\nBy each SOC (AESOC)\nBy each Preferred term (AEDECOD) within SOC (AESOC)\n\nBy every combination of treatment group (TRT01A) and severity (AESEV)\n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-ae-ard-1",
    "href": "slides/01-intro-cards/index.html#example-ae-ard-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: AE ARD",
    "text": "Example: AE ARD\nCalculate the number and percentage of unique subjects (USUBJID) with at least one AE:\n\nOverall\nBy each SOC (AESOC)\nBy each Preferred term (AEDECOD) within SOC (AESOC)\n\nBy every combination of treatment group (TRT01A) and severity (AESEV)\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = c(TRTA, AESEV), \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n)\n\n   group1 group1_level group2 group2_level group3 group3_level\n1    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n2    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n3    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n4    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n5    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n6    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n7    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n8    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n9    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n10   TRTA      Placebo  AESEV         MILD   &lt;NA&gt;             \n                       variable variable_level stat_name stat_label  stat\n1                         AESOC      GASTROIN…         n          n    10\n2                         AESOC      GASTROIN…         N          N   254\n3                         AESOC      GASTROIN…         p          % 0.039\n4                         AESOC      GENERAL …         n          n     8\n5                         AESOC      GENERAL …         N          N   254\n6                         AESOC      GENERAL …         p          % 0.031\n7                         AESOC      SKIN AND…         n          n    10\n8                         AESOC      SKIN AND…         N          N   254\n9                         AESOC      SKIN AND…         p          % 0.039\n10 ..ard_hierarchical_overall..           TRUE         n          n    25"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html",
    "href": "slides/02-intro-cardx/01-cardx.html",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Extension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods.\n\n\n\n\n\n\n\n\n\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱\n\n\n\n\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAlso includes function inputs; useful for re-use, e.g. we record we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\n\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_continuous(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fn\n1      AGE t_test_o…    estimate   estimate    75.024      1\n2      AGE t_test_o…   statistic  statistic     120.2      1\n3      AGE t_test_o…     p.value    p.value         0      1\n4      AGE t_test_o…   parameter  parameter       167      1\n5      AGE t_test_o…    conf.low   conf.low    73.792      1\n6      AGE t_test_o…   conf.high  conf.high    76.256      1\n7      AGE t_test_o…      method     method One Samp…   &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\nUpdate code for a two-sample t-test\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_complex(\n    variables = AGE,\n    statistic = ~ list(t_test = \\(x, data, ...) broom::tidy(t.test(x ~ data$ARM)))\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\n\n\nSave the results from prop.test() in an ARD for columns am and vs in mtcars\n\n\nmtcars |&gt; \n  cards::ard_continuous(\n    variables = c(  ),\n    statistic = \n      everything() ~ list(prop_test =  )\n  )\n\n\n\n\n\nSave the results from prop.test() in an ARD\n\n\nmtcars |&gt; \n  cards::ard_continuous(\n    variables = c(am, vs),\n    statistic = \n      everything() ~ list(prop_test = \\(x) prop.test(x = sum(x), n = length(x)) |&gt; broom::tidy())\n  )\n\n{cards} data frame: 16 x 8\n\n\n   variable   context   stat_name stat_label      stat fmt_fn\n1        am continuo…    estimate   estimate     0.406      1\n2        am continuo…   statistic  statistic     0.781      1\n3        am continuo…     p.value    p.value     0.377      1\n4        am continuo…   parameter  parameter         1      0\n5        am continuo…    conf.low   conf.low     0.242      1\n6        am continuo…   conf.high  conf.high     0.592      1\n7        am continuo…      method     method 1-sample…   &lt;fn&gt;\n8        am continuo… alternative  alternat… two.sided   &lt;fn&gt;\n9        vs continuo…    estimate   estimate     0.438      1\n10       vs continuo…   statistic  statistic     0.281      1\n11       vs continuo…     p.value    p.value     0.596      1\n12       vs continuo…   parameter  parameter         1      0\n13       vs continuo…    conf.low   conf.low     0.268      1\n14       vs continuo…   conf.high  conf.high     0.621      1\n15       vs continuo…      method     method 1-sample…   &lt;fn&gt;\n16       vs continuo… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\nSee the full vignette for details on creating both one-off ARDs and functions for creating ARDs.\n\n\n\n\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), tidycmprsk::crr(), VGAM::vglm() (and more)\n\n\n\n\n\nlibrary(survival)\nlibrary(gtsummary)\n\n# build model\nmod &lt;- pharmaverseadam::adtte_onco |&gt; \n  dplyr::filter(PARAM %in% \"Progression Free Survival\") |&gt;\n  coxph(ggsurvfit::Surv_CNSR() ~ ARM + AGE, data = _)\n\n# put model in a summary table\ntbl &lt;- tbl_regression(mod, exponentiate = TRUE) |&gt; \n  add_n(location = c('label', 'level')) |&gt; \n  add_nevent(location = c('label', 'level')) |&gt; \n  bold_labels()\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nEvent N\nHR\n95% CI\np-value\n\n\n\n\nDescription of Planned Arm\n254\n6\n\n\n\n\n\n\n\n\n    Placebo\n86\n3\n—\n—\n\n\n\n\n    Xanomeline High Dose\n84\n2\n1.94\n0.27, 14.1\n0.5\n\n\n    Xanomeline Low Dose\n84\n1\n0.65\n0.06, 7.47\n0.7\n\n\nAge\n254\n6\n1.10\n0.95, 1.29\n0.2\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio\n\n\n\n\n\n\n\n\n\n\n\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more."
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Extension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-1",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-1",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Exports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "We see the results like the mean difference, the confidence interval, and p-value as expected.\nAlso includes function inputs; useful for re-use, e.g. we record we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-1",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-1",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "What to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_continuous(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fn\n1      AGE t_test_o…    estimate   estimate    75.024      1\n2      AGE t_test_o…   statistic  statistic     120.2      1\n3      AGE t_test_o…     p.value    p.value         0      1\n4      AGE t_test_o…   parameter  parameter       167      1\n5      AGE t_test_o…    conf.low   conf.low    73.792      1\n6      AGE t_test_o…   conf.high  conf.high    76.256      1\n7      AGE t_test_o…      method     method One Samp…   &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-2",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-2",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Update code for a two-sample t-test\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_complex(\n    variables = AGE,\n    statistic = ~ list(t_test = \\(x, data, ...) broom::tidy(t.test(x ~ data$ARM)))\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#example-build-ard-for-prop.test",
    "href": "slides/02-intro-cardx/01-cardx.html#example-build-ard-for-prop.test",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Save the results from prop.test() in an ARD for columns am and vs in mtcars\n\n\nmtcars |&gt; \n  cards::ard_continuous(\n    variables = c(  ),\n    statistic = \n      everything() ~ list(prop_test =  )\n  )"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#example-build-ard-for-prop.test-1",
    "href": "slides/02-intro-cardx/01-cardx.html#example-build-ard-for-prop.test-1",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Save the results from prop.test() in an ARD\n\n\nmtcars |&gt; \n  cards::ard_continuous(\n    variables = c(am, vs),\n    statistic = \n      everything() ~ list(prop_test = \\(x) prop.test(x = sum(x), n = length(x)) |&gt; broom::tidy())\n  )\n\n{cards} data frame: 16 x 8\n\n\n   variable   context   stat_name stat_label      stat fmt_fn\n1        am continuo…    estimate   estimate     0.406      1\n2        am continuo…   statistic  statistic     0.781      1\n3        am continuo…     p.value    p.value     0.377      1\n4        am continuo…   parameter  parameter         1      0\n5        am continuo…    conf.low   conf.low     0.242      1\n6        am continuo…   conf.high  conf.high     0.592      1\n7        am continuo…      method     method 1-sample…   &lt;fn&gt;\n8        am continuo… alternative  alternat… two.sided   &lt;fn&gt;\n9        vs continuo…    estimate   estimate     0.438      1\n10       vs continuo…   statistic  statistic     0.281      1\n11       vs continuo…     p.value    p.value     0.596      1\n12       vs continuo…   parameter  parameter         1      0\n13       vs continuo…    conf.low   conf.low     0.268      1\n14       vs continuo…   conf.high  conf.high     0.621      1\n15       vs continuo…      method     method 1-sample…   &lt;fn&gt;\n16       vs continuo… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#building-your-own-ard-functions",
    "href": "slides/02-intro-cardx/01-cardx.html#building-your-own-ard-functions",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "See the full vignette for details on creating both one-off ARDs and functions for creating ARDs."
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-regression",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-regression",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Includes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), tidycmprsk::crr(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "library(survival)\nlibrary(gtsummary)\n\n# build model\nmod &lt;- pharmaverseadam::adtte_onco |&gt; \n  dplyr::filter(PARAM %in% \"Progression Free Survival\") |&gt;\n  coxph(ggsurvfit::Surv_CNSR() ~ ARM + AGE, data = _)\n\n# put model in a summary table\ntbl &lt;- tbl_regression(mod, exponentiate = TRUE) |&gt; \n  add_n(location = c('label', 'level')) |&gt; \n  add_nevent(location = c('label', 'level')) |&gt; \n  bold_labels()\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nEvent N\nHR\n95% CI\np-value\n\n\n\n\nDescription of Planned Arm\n254\n6\n\n\n\n\n\n\n\n\n    Placebo\n86\n3\n—\n—\n\n\n\n\n    Xanomeline High Dose\n84\n2\n1.94\n0.27, 14.1\n0.5\n\n\n    Xanomeline Low Dose\n84\n1\n0.65\n0.06, 7.47\n0.7\n\n\nAge\n254\n6\n1.10\n0.95, 1.29\n0.2\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example-1",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example-1",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "The cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#workshop-outline",
    "href": "slides/02-intro-cardx/index.html#workshop-outline",
    "title": "{cardx} & other extras",
    "section": "Workshop outline",
    "text": "Workshop outline\n\n\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary}\nARD to Tables with {tfrmt}"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx",
    "href": "slides/02-intro-cardx/index.html#cardx",
    "title": "{cardx} & other extras",
    "section": "{cardx}",
    "text": "{cardx}\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-1",
    "href": "slides/02-intro-cardx/index.html#cardx-1",
    "title": "{cardx} & other extras",
    "section": "{cardx}",
    "text": "{cardx}\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-t-test-example",
    "href": "slides/02-intro-cardx/index.html#cardx-t-test-example",
    "title": "{cardx} & other extras",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAlso includes function inputs; useful for re-use, e.g. we record we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-t-test-example-1",
    "href": "slides/02-intro-cardx/index.html#cardx-t-test-example-1",
    "title": "{cardx} & other extras",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_continuous(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fn\n1      AGE t_test_o…    estimate   estimate    75.024      1\n2      AGE t_test_o…   statistic  statistic     120.2      1\n3      AGE t_test_o…     p.value    p.value         0      1\n4      AGE t_test_o…   parameter  parameter       167      1\n5      AGE t_test_o…    conf.low   conf.low    73.792      1\n6      AGE t_test_o…   conf.high  conf.high    76.256      1\n7      AGE t_test_o…      method     method One Samp…   &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-t-test-example-2",
    "href": "slides/02-intro-cardx/index.html#cardx-t-test-example-2",
    "title": "{cardx} & other extras",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nUpdate code for a two-sample t-test\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_complex(\n    variables = AGE,\n    statistic = ~ list(t_test = \\(x, data, ...) broom::tidy(t.test(x ~ data$ARM)))\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#example-build-ard-for-prop.test",
    "href": "slides/02-intro-cardx/index.html#example-build-ard-for-prop.test",
    "title": "{cardx} & other extras",
    "section": "Example: Build ARD for prop.test()",
    "text": "Example: Build ARD for prop.test()\n\nSave the results from prop.test() in an ARD for columns am and vs in mtcars\n\n\nmtcars |&gt; \n  cards::ard_continuous(\n    variables = c(  ),\n    statistic = \n      everything() ~ list(prop_test =  )\n  )"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#example-build-ard-for-prop.test-1",
    "href": "slides/02-intro-cardx/index.html#example-build-ard-for-prop.test-1",
    "title": "{cardx} & other extras",
    "section": "Example: Build ARD for prop.test()",
    "text": "Example: Build ARD for prop.test()\n\nSave the results from prop.test() in an ARD\n\n\nmtcars |&gt; \n  cards::ard_continuous(\n    variables = c(am, vs),\n    statistic = \n      everything() ~ list(prop_test = \\(x) prop.test(x = sum(x), n = length(x)) |&gt; broom::tidy())\n  )\n\n   variable   context   stat_name stat_label      stat fmt_fn\n1        am continuo…    estimate   estimate     0.406      1\n2        am continuo…   statistic  statistic     0.781      1\n3        am continuo…     p.value    p.value     0.377      1\n4        am continuo…   parameter  parameter         1      0\n5        am continuo…    conf.low   conf.low     0.242      1\n6        am continuo…   conf.high  conf.high     0.592      1\n7        am continuo…      method     method 1-sample…   &lt;fn&gt;\n8        am continuo… alternative  alternat… two.sided   &lt;fn&gt;\n9        vs continuo…    estimate   estimate     0.438      1\n10       vs continuo…   statistic  statistic     0.281      1\n11       vs continuo…     p.value    p.value     0.596      1\n12       vs continuo…   parameter  parameter         1      0\n13       vs continuo…    conf.low   conf.low     0.268      1\n14       vs continuo…   conf.high  conf.high     0.621      1\n15       vs continuo…      method     method 1-sample…   &lt;fn&gt;\n16       vs continuo… alternative  alternat… two.sided   &lt;fn&gt;"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#building-your-own-ard-functions",
    "href": "slides/02-intro-cardx/index.html#building-your-own-ard-functions",
    "title": "{cardx} & other extras",
    "section": "Building your own ARD functions",
    "text": "Building your own ARD functions\nSee the full vignette for details on creating both one-off ARDs and functions for creating ARDs."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-regression",
    "href": "slides/02-intro-cardx/index.html#cardx-regression",
    "title": "{cardx} & other extras",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), tidycmprsk::crr(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-regression-example",
    "href": "slides/02-intro-cardx/index.html#cardx-regression-example",
    "title": "{cardx} & other extras",
    "section": "{cardx} Regression Example",
    "text": "{cardx} Regression Example\n\nlibrary(survival)\nlibrary(gtsummary)\n\n# build model\nmod &lt;- pharmaverseadam::adtte_onco |&gt; \n  dplyr::filter(PARAM %in% \"Progression Free Survival\") |&gt;\n  coxph(ggsurvfit::Surv_CNSR() ~ ARM + AGE, data = _)\n\n# put model in a summary table\ntbl &lt;- tbl_regression(mod, exponentiate = TRUE) |&gt; \n  add_n(location = c('label', 'level')) |&gt; \n  add_nevent(location = c('label', 'level')) |&gt; \n  bold_labels()\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nEvent N\nHR\n95% CI\np-value\n\n\n\n\nDescription of Planned Arm\n254\n6\n\n\n\n\n\n\n\n\n    Placebo\n86\n3\n—\n—\n\n\n\n\n    Xanomeline High Dose\n84\n2\n1.94\n0.27, 14.1\n0.5\n\n\n    Xanomeline Low Dose\n84\n1\n0.65\n0.06, 7.47\n0.7\n\n\nAge\n254\n6\n1.10\n0.95, 1.29\n0.2\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-regression-example-1",
    "href": "slides/02-intro-cardx/index.html#cardx-regression-example-1",
    "title": "{cardx} & other extras",
    "section": "{cardx} Regression Example",
    "text": "{cardx} Regression Example\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#when-things-go-wrong",
    "href": "slides/02-intro-cardx/index.html#when-things-go-wrong",
    "title": "{cardx} & other extras",
    "section": "When things go wrong 😱",
    "text": "When things go wrong 😱\nWhat happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_continuous(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fn\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#mock-ards",
    "href": "slides/02-intro-cardx/index.html#mock-ards",
    "title": "{cardx} & other extras",
    "section": "Mock ARDs",
    "text": "Mock ARDs\nLike mock tables, mock ARDs are often useful\n\ncards::bind_ard(\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\"))),\n  cards::mock_continuous(variables = \"AGE\")\n) |&gt; \n  cards::apply_fmt_fn()\n\n{cards} data frame: 14 x 10\n\n\n   variable variable_level stat_name stat_label stat stat_fmt\n1    AGEGR1            &lt;65         n          n            xx\n2    AGEGR1            &lt;65         p          %          xx.x\n3    AGEGR1            &lt;65         N          N            xx\n4    AGEGR1           &gt;=65         n          n            xx\n5    AGEGR1           &gt;=65         p          %          xx.x\n6    AGEGR1           &gt;=65         N          N            xx\n7       AGE                        N          N            xx\n8       AGE                     mean       Mean          xx.x\n9       AGE                       sd         SD          xx.x\n10      AGE                   median     Median          xx.x\n11      AGE                      p25         Q1          xx.x\n12      AGE                      p75         Q3          xx.x\n13      AGE                      min        Min          xx.x\n14      AGE                      max        Max          xx.x\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#mock-ards-1",
    "href": "slides/02-intro-cardx/index.html#mock-ards-1",
    "title": "{cardx} & other extras",
    "section": "Mock ARDs",
    "text": "Mock ARDs\n\ncards::bind_ard(\n  cards::mock_continuous(variables = \"AGE\", \n                         by = list(ARM = c(\"Drug A\", \"Drug B\"))),\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\")),\n                          by = list(ARM = c(\"Drug A\", \"Drug B\")))\n) |&gt; \n  gtsummary::tbl_ard_summary(\n    by = ARM,\n    type  = AGE ~ \"continuous2\",\n    statistic = AGE ~ c(\"{N}\", \"{mean} ({sd})\", \"{median} ({p25}, {p75})\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\nAGE\n\n\n\n\n\n\n    N\nxx\nxx\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Median (Q1, Q3)\nxx.x (xx.x, xx.x)\nxx.x (xx.x, xx.x)\n\n\nAGEGR1\n\n\n\n\n\n\n    &lt;65\nxx (xx.x%)\nxx (xx.x%)\n\n\n    &gt;=65\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#other-ard-representations",
    "href": "slides/02-intro-cardx/index.html#other-ard-representations",
    "title": "{cardx} & other extras",
    "section": "Other ARD Representations",
    "text": "Other ARD Representations\nWhile the data frame-based ARD is easy to work with, language-agnostic representations are often useful.\n\n\nYAML\n\ncards::as_nested_list(ard) |&gt; \n  yaml::as.yaml() |&gt; \n  cat()\n\nvariable:\n  AGE:\n    group1:\n      ARM:\n        group1_level:\n          Placebo:\n            stat_name:\n              'N':\n                stat: 86\n                stat_fmt: '86'\n                warning: ~\n                error: ~\n                context: continuous\n              mean:\n                stat: 75.2093023\n...\n\n\n\nJSON\n\ncards::as_nested_list(ard) |&gt; \n  jsonlite::toJSON(pretty = TRUE)\n\n{\n  \"variable\": {\n    \"AGE\": {\n      \"group1\": {\n        \"ARM\": {\n          \"group1_level\": {\n            \"Placebo\": {\n              \"stat_name\": {\n                \"N\": {\n                  \"stat\": [86],\n                  \"stat_fmt\": [\"86\"],\n                  \"warning\": {},\n                  \"error\": {},\n                  \"context\": [\"continuous\"]\n                },\n..."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#break",
    "href": "slides/02-intro-cardx/index.html#break",
    "title": "{cardx} & other extras",
    "section": "Break",
    "text": "Break\n\n\n\n\n\n−+\n05:00\n\n\n\n\n\n\nSister Act 2: Back in the Habit"
  },
  {
    "objectID": "slides/03-tables-gtsummary/01-background.html",
    "href": "slides/03-tables-gtsummary/01-background.html",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "Began to address reproducible issues while working in academia\nGoal was to build a package to summarize study results with code that was both simple and customizable\nFirst release in May 2019\n\n\n\n\n\n\n\n\nThe stats\n\n1,300,000+ installations from CRAN\n1100+ GitHub stars\n300+ contributors\n50+ code contributors\n\nWon the 2021 American Statistical Association (ASA) Innovation in Programming Award\nWon the 2024 Posit Pharma Table Contest"
  },
  {
    "objectID": "slides/03-tables-gtsummary/01-background.html#section",
    "href": "slides/03-tables-gtsummary/01-background.html#section",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "Began to address reproducible issues while working in academia\nGoal was to build a package to summarize study results with code that was both simple and customizable\nFirst release in May 2019\n\n\n\n\n\n\n\n\nThe stats\n\n1,300,000+ installations from CRAN\n1100+ GitHub stars\n300+ contributors\n50+ code contributors\n\nWon the 2021 American Statistical Association (ASA) Innovation in Programming Award\nWon the 2024 Posit Pharma Table Contest"
  },
  {
    "objectID": "slides/03-tables-gtsummary/01-background.html#gtsummary-overview",
    "href": "slides/03-tables-gtsummary/01-background.html#gtsummary-overview",
    "title": "Analysis Results Datasets",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\n\n\n\nCreate tabular summaries with sensible defaults but highly customizable\nTypes of summaries:\n\nDemographic- or “Table 1”-types\nCross-tabulation\nRegression models\nSurvival data\nSurvey data\nCustom tables\n\n\n\n\nReport statistics from {gtsummary} tables inline in R Markdown\nStack and/or merge any table type\nUse themes to standardize across tables\nChoose from different print engines"
  },
  {
    "objectID": "slides/03-tables-gtsummary/01-background.html#gtsummary-runs-on-ards",
    "href": "slides/03-tables-gtsummary/01-background.html#gtsummary-runs-on-ards",
    "title": "Analysis Results Datasets",
    "section": "{gtsummary} runs on ARDs!",
    "text": "{gtsummary} runs on ARDs!"
  },
  {
    "objectID": "slides/03-tables-gtsummary/01-background.html#gtsummary-overview-1",
    "href": "slides/03-tables-gtsummary/01-background.html#gtsummary-overview-1",
    "title": "Analysis Results Datasets",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\nFor our workshop, we will focus on the following summary types as well as themes and print engines.\n\ntbl_summary()\ntbl_cross()\ntbl_continuous()\ntbl_wide_summary()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt; \n  select(-trt) |&gt;  \n  tbl_summary()\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2001\n\n\n\n\nAge\n47 (38, 57)\n\n\n    Unknown\n11\n\n\nGrade\n\n\n\n\n    I\n68 (34%)\n\n\n    II\n68 (34%)\n\n\n    III\n64 (32%)\n\n\nTumor Response\n61 (32%)\n\n\n    Unknown\n7\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\nFour types of summaries: continuous, continuous2, categorical, and dichotomous\nStatistics are median (IQR) for continuous, n (%) for categorical/dichotomous\nVariables coded 0/1, TRUE/FALSE, Yes/No treated as dichotomous\nLists NA values under “Unknown”\nLabel attributes are printed automatically\n\n\n\n\n\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\n\n\n\n\n\n\n\n\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Median (Q1, Q3)\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\n\n\n\n\n\n\n\n\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (15)\n47 (14)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\n\n\n\n\n\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    list(grade = \"Pathologic tumor grade\"),\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (15)\n47 (14)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nPathologic tumor grade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels\n\n\n\n\n\n\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    list(grade = \"Pathologic tumor grade\"),\n  digits = # report SD(age) to one decimal place\n    list(age = list(sd = 1)) \n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (14.7)\n47 (14.0)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nPathologic tumor grade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels\ndigits: specify the number of decimal places for rounding\n\n\n\n\n\n\n\nThis syntax is also used in {cards}, {cardx}, and {gt}.\n\n\n\nNamed list are OK too! label = list(age = \"Patient Age\")\n\n\n\n\n\n\nUse the following helpers to select groups of variables: all_continuous(), all_categorical()\nUse all_stat_cols() to select the summary statistic columns\n\n\n\n\ntbl_summary() objects can also be updated using related functions.\n\nadd_*() add additional column of statistics or information, e.g. p-values, q-values, overall statistics, treatment differences, N obs., and more\nmodify_*() modify table headers, spanning headers, footnotes, and more\nbold_*()/italicize_*() style labels, variable levels, significant p-values\n\n\n\n\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt\n  ) |&gt; \n  add_p()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\np-value2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    Unknown\n7\n4\n\n\n\n\nGrade\n\n\n\n\n0.9\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n\n\n    III\n31 (32%)\n33 (32%)\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    Unknown\n3\n4\n\n\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\nadd_p(): adds a column of p-values\nFunction is customizable with many methods implemented internally, as well as extendable to any method you may be using\n\n\n\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall N = 2001\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics\n\n\n\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall() |&gt; \n  add_n()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nOverall N = 2001\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n189\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n200\n\n\n\n\n\n\n\n\n    I\n\n\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n\n\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n\n\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response\n193\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics\nadd_n(): adds a column with the sample size\n\n\n\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall() |&gt; \n  add_n() |&gt; \n  add_stat_label(\n    label = all_categorical() ~ \"No. (%)\"\n  ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nOverall N = 200\nDrug A N = 98\nDrug B N = 102\n\n\n\n\nAge, Median (Q1, Q3)\n189\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade, No. (%)\n200\n\n\n\n\n\n\n\n\n    I\n\n\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n\n\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n\n\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response, No. (%)\n193\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics\nadd_n(): adds a column with the sample size\nadd_stat_label(): adds a description of the reported statistic\n\n\n\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt\n  ) |&gt;\n  add_p() |&gt; \n  bold_labels() |&gt; \n  italicize_levels() |&gt; \n  bold_p(t = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\np-value2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    Unknown\n7\n4\n\n\n\n\nGrade\n\n\n\n\n0.9\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n\n\n    III\n31 (32%)\n33 (32%)\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    Unknown\n3\n4\n\n\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\nbold_labels(): bold the variable labels\nitalicize_levels(): italicize the variable levels\nbold_p(): bold p-values according a specified threshold\n\n\n\n\n\ntbl &lt;-\n  sm_trial |&gt; \n  tbl_summary(by = trt, \n              missing = \"no\") |&gt;\n  modify_header(\n      stat_1 ~ \"**Group A**\",\n      stat_2 ~ \"**Group B**\"\n  ) |&gt; \n  modify_spanning_header(\n    all_stat_cols() ~ \"**Drug**\") |&gt; \n  modify_footnote(\n    all_stat_cols() ~ \n      paste(\"median (IQR) for continuous;\",\n            \"n (%) for categorical\")\n  )\ntbl\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug\n\n\n\nGroup A1\nGroup B1\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n\n1 median (IQR) for continuous; n (%) for categorical\n\n\n\n\n\n\n\n\n\nUse show_header_names() to see the internal header names available for use in modify_header()\n\n\n\n\n\ntrial |&gt;\n  select(trt, marker, response) |&gt;\n  tbl_summary(\n    by = trt,\n    statistic = list(marker ~ \"{mean} ({sd})\",\n                     response ~ \"{p}%\"),\n    missing = \"no\"\n  ) |&gt; \n  add_difference()\n\n\n\n\n  \n    \n      Characteristic\n      Drug A\nN = 981\n      Drug B\nN = 1021\n      Difference2\n      95% CI2\n      p-value2\n    \n  \n  \n    Marker Level (ng/mL)\n1.02 (0.89)\n0.82 (0.83)\n0.20\n-0.05, 0.44\n0.12\n    Tumor Response\n29%\n34%\n-4.2%\n-18%, 9.9%\n0.6\n  \n  \n    \n      Abbreviation: CI = Confidence Interval\n    \n  \n  \n    \n      1 Mean (SD); %\n    \n    \n      2 Welch Two Sample t-test; 2-sample test for equality of proportions with continuity correction\n    \n  \n\n\n\n\n\nadd_difference(): mean and rate differences between two groups. Can also be adjusted differences\n\n\n\n\n\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_stat(...)\n\n\n\nCustomize statistics presented with add_stat()\nAdded statistics can be placed on the label or the level rows\nAdded statistics may be a single column or multiple\n\n\n\n\n\n\n\n\n\nARDs are the backbone for all calculations in gtsummary\nEvery gtsummary table saves the ARDs from each calculation\nThey can be extracted individually, or combined.\n\n\n\ntbl &lt;- tbl_summary(trial, by = trt) |&gt; add_p()\ngather_ard(tbl) |&gt; purrr::pluck(\"add_p\", \"age\")\n\n{cards} data frame: 15 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     trt      age stats_wi…    estimate  Median o…        -1\n2     trt      age stats_wi…   statistic  X-square…      4323\n3     trt      age stats_wi…     p.value    p-value     0.718\n4     trt      age stats_wi…    conf.low  CI Lower…        -5\n5     trt      age stats_wi…   conf.high  CI Upper…         4\n6     trt      age stats_wi…      method     method Wilcoxon…\n7     trt      age stats_wi… alternative  alternat… two.sided\n8     trt      age stats_wi…          mu         mu         0\n9     trt      age stats_wi…      paired  Paired t…     FALSE\n10    trt      age stats_wi…       exact      exact          \n11    trt      age stats_wi…     correct    correct      TRUE\n12    trt      age stats_wi…    conf.int   conf.int      TRUE\n13    trt      age stats_wi…  conf.level  CI Confi…      0.95\n14    trt      age stats_wi…    tol.root   tol.root         0\n15    trt      age stats_wi… digits.rank  digits.r…       Inf\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\n\n\n\nAnd many more!\nSee the documentation at http://www.danieldsjoberg.com/gtsummary/reference/index.html\nAnd a detailed tbl_summary() vignette at http://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html\n\n\n\n\nNavigate to Posit Cloud script exercises/03-gtsummary_partA.R.\nCreate the table outlined in the script.\n\n\n\n\n−+\n10:00\n\n\n\n\n\n\nCreate a demographics tables split by TRT01A including AGE, SEX, RACE\n\nlibrary(gtsummary) \nadsl &lt;- pharmaverseadam::adsl |&gt; dplyr::filter(SAFFL == \"Y\") \n \n# Create table \ntbl &lt;- adsl |&gt;  \n  tbl_summary( \n    by = TRT01A, \n    include = c(AGE, SEX, RACE), \n    type = AGE ~ 'continuous2', \n    statistic = AGE ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\") \n  ) |&gt;  \n  add_overall() \ntbl \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall N = 2541\nPlacebo N = 861\nXanomeline High Dose N = 721\nXanomeline Low Dose N = 961\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (8)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Median (Q1, Q3)\n77 (70, 81)\n76 (69, 82)\n76 (70, 79)\n78 (71, 82)\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n    F\n143 (56%)\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n    M\n111 (44%)\n33 (38%)\n37 (51%)\n41 (43%)\n\n\nRace\n\n\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (0.4%)\n0 (0%)\n1 (1.4%)\n0 (0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n23 (9.1%)\n8 (9.3%)\n9 (13%)\n6 (6.3%)\n\n\n    WHITE\n230 (91%)\n78 (91%)\n62 (86%)\n90 (94%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\nExtract ARD from table object\n\ngather_ard(tbl)[[\"tbl_summary\"]] |&gt; dplyr::select(-gts_column)\n\n{cards} data frame: 123 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo      SEX              F         n          n    53\n2  TRT01A      Placebo      SEX              F         N          N    86\n3  TRT01A      Placebo      SEX              F         p          % 0.616\n4  TRT01A      Placebo      SEX              M         n          n    33\n5  TRT01A      Placebo      SEX              M         N          N    86\n6  TRT01A      Placebo      SEX              M         p          % 0.384\n7  TRT01A      Placebo     RACE      AMERICAN…         n          n     0\n8  TRT01A      Placebo     RACE      AMERICAN…         N          N    86\n9  TRT01A      Placebo     RACE      AMERICAN…         p          %     0\n10 TRT01A      Placebo     RACE      BLACK OR…         n          n     8\n\n\nℹ 113 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\ntbl_cross() is a wrapper for tbl_summary() for n x m tables\n\nsm_trial |&gt;\n  tbl_cross(\n    row = trt, \n    col = grade,\n    percent = \"row\",\n    margin = \"row\"\n  ) |&gt;\n  add_p(source_note = TRUE) |&gt;\n  bold_labels()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrade\n\n\n\nI\nII\nIII\n\n\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n35 (36%)\n32 (33%)\n31 (32%)\n\n\n    Drug B\n33 (32%)\n36 (35%)\n33 (32%)\n\n\nTotal\n68 (34%)\n68 (34%)\n64 (32%)\n\n\n\nPearson’s Chi-squared test, p=0.9\n\n\n\n\n\n\n\n\n\n\n\ntbl_continuous() summarizes a continuous variable by 1, 2, or more categorical variables\n\nsm_trial |&gt;\n  tbl_continuous(\n    variable = age,\n    by = trt,\n    include = grade\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nGrade\n\n\n\n\n\n\n    I\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)\n\n\n\n\n\n\n\n\n\n\n\ntbl_wide_summary() summarizes a continuous variable with summary statistics spread across columns\n\ntrial |&gt;\n  tbl_wide_summary(include = c(response, grade))\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nTumor Response\n61\n32%\n\n\nGrade\n\n\n\n\n\n\n    I\n68\n34%\n\n\n    II\n68\n34%\n\n\n    III\n64\n32%\n\n\n\n\n\n\n\n\n\n\n\ntrial |&gt;\n  tbl_wide_summary(include = c(age, marker))\n\n\n\n\n\n\n\nCharacteristic\nMedian\nQ1, Q3\n\n\n\n\nAge\n47\n38, 57\n\n\nMarker Level (ng/mL)\n0.64\n0.22, 1.41\n\n\n\n\n\n\n\nNaturally, you can change the statistics, and which appear in each column.\n\n\n\n\n cards::ADAE |&gt; \n  tbl_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRTA,\n    id = USUBJID,\n    denominator = cards::ADSL |&gt; dplyr::rename(TRTA = ARM)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class     Dictionary-Derived Term\nPlacebo N = 861\nXanomeline High Dose N = 841\nXanomeline Low Dose N = 841\n\n\n\n\nGASTROINTESTINAL DISORDERS\n10 (12%)\n4 (4.8%)\n5 (6.0%)\n\n\n    DIARRHOEA\n9 (10%)\n4 (4.8%)\n5 (6.0%)\n\n\n    HIATUS HERNIA\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\n8 (9.3%)\n25 (30%)\n24 (29%)\n\n\n    APPLICATION SITE ERYTHEMA\n3 (3.5%)\n15 (18%)\n12 (14%)\n\n\n    APPLICATION SITE PRURITUS\n6 (7.0%)\n22 (26%)\n22 (26%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#basic-tbl_summary",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#basic-tbl_summary",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt; \n  select(-trt) |&gt;  \n  tbl_summary()\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2001\n\n\n\n\nAge\n47 (38, 57)\n\n\n    Unknown\n11\n\n\nGrade\n\n\n\n\n    I\n68 (34%)\n\n\n    II\n68 (34%)\n\n\n    III\n64 (32%)\n\n\nTumor Response\n61 (32%)\n\n\n    Unknown\n7\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\nFour types of summaries: continuous, continuous2, categorical, and dichotomous\nStatistics are median (IQR) for continuous, n (%) for categorical/dichotomous\nVariables coded 0/1, TRUE/FALSE, Yes/No treated as dichotomous\nLists NA values under “Unknown”\nLabel attributes are printed automatically"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_summary(\n  sm_trial,\n  by = trt,\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-1",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-1",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Median (Q1, Q3)\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-2",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-2",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (15)\n47 (14)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-3",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-3",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    list(grade = \"Pathologic tumor grade\"),\n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (15)\n47 (14)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nPathologic tumor grade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-4",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#customize-tbl_summary-output-4",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    list(grade = \"Pathologic tumor grade\"),\n  digits = # report SD(age) to one decimal place\n    list(age = list(sd = 1)) \n)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (14.7)\n47 (14.0)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nPathologic tumor grade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels\ndigits: specify the number of decimal places for rounding"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-formulas",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-formulas",
    "title": "tbl_summary()",
    "section": "",
    "text": "This syntax is also used in {cards}, {cardx}, and {gt}.\n\n\n\nNamed list are OK too! label = list(age = \"Patient Age\")"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#section",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#section",
    "title": "tbl_summary()",
    "section": "",
    "text": "Use the following helpers to select groups of variables: all_continuous(), all_categorical()\nUse all_stat_cols() to select the summary statistic columns\n\n\n\n\ntbl_summary() objects can also be updated using related functions.\n\nadd_*() add additional column of statistics or information, e.g. p-values, q-values, overall statistics, treatment differences, N obs., and more\nmodify_*() modify table headers, spanning headers, footnotes, and more\nbold_*()/italicize_*() style labels, variable levels, significant p-values"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt;\n  tbl_summary(\n    by = trt\n  ) |&gt; \n  add_p()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\np-value2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    Unknown\n7\n4\n\n\n\n\nGrade\n\n\n\n\n0.9\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n\n\n    III\n31 (32%)\n33 (32%)\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    Unknown\n3\n4\n\n\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\nadd_p(): adds a column of p-values\nFunction is customizable with many methods implemented internally, as well as extendable to any method you may be using"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-1",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-1",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall N = 2001\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-2",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-2",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall() |&gt; \n  add_n()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nOverall N = 2001\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n189\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n200\n\n\n\n\n\n\n\n\n    I\n\n\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n\n\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n\n\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response\n193\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics\nadd_n(): adds a column with the sample size"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-3",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-3",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall() |&gt; \n  add_n() |&gt; \n  add_stat_label(\n    label = all_categorical() ~ \"No. (%)\"\n  ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nOverall N = 200\nDrug A N = 98\nDrug B N = 102\n\n\n\n\nAge, Median (Q1, Q3)\n189\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade, No. (%)\n200\n\n\n\n\n\n\n\n\n    I\n\n\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n\n\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n\n\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response, No. (%)\n193\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics\nadd_n(): adds a column with the sample size\nadd_stat_label(): adds a description of the reported statistic"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-with-bold_italicize_",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-with-bold_italicize_",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt;\n  tbl_summary(\n    by = trt\n  ) |&gt;\n  add_p() |&gt; \n  bold_labels() |&gt; \n  italicize_levels() |&gt; \n  bold_p(t = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\np-value2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    Unknown\n7\n4\n\n\n\n\nGrade\n\n\n\n\n0.9\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n\n\n    III\n31 (32%)\n33 (32%)\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    Unknown\n3\n4\n\n\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\nbold_labels(): bold the variable labels\nitalicize_levels(): italicize the variable levels\nbold_p(): bold p-values according a specified threshold"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-modify_",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-modify_",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl &lt;-\n  sm_trial |&gt; \n  tbl_summary(by = trt, \n              missing = \"no\") |&gt;\n  modify_header(\n      stat_1 ~ \"**Group A**\",\n      stat_2 ~ \"**Group B**\"\n  ) |&gt; \n  modify_spanning_header(\n    all_stat_cols() ~ \"**Drug**\") |&gt; \n  modify_footnote(\n    all_stat_cols() ~ \n      paste(\"median (IQR) for continuous;\",\n            \"n (%) for categorical\")\n  )\ntbl\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug\n\n\n\nGroup A1\nGroup B1\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n\n1 median (IQR) for continuous; n (%) for categorical\n\n\n\n\n\n\n\n\n\nUse show_header_names() to see the internal header names available for use in modify_header()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-4",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-4",
    "title": "tbl_summary()",
    "section": "",
    "text": "trial |&gt;\n  select(trt, marker, response) |&gt;\n  tbl_summary(\n    by = trt,\n    statistic = list(marker ~ \"{mean} ({sd})\",\n                     response ~ \"{p}%\"),\n    missing = \"no\"\n  ) |&gt; \n  add_difference()\n\n\n\n\n  \n    \n      Characteristic\n      Drug A\nN = 981\n      Drug B\nN = 1021\n      Difference2\n      95% CI2\n      p-value2\n    \n  \n  \n    Marker Level (ng/mL)\n1.02 (0.89)\n0.82 (0.83)\n0.20\n-0.05, 0.44\n0.12\n    Tumor Response\n29%\n34%\n-4.2%\n-18%, 9.9%\n0.6\n  \n  \n    \n      Abbreviation: CI = Confidence Interval\n    \n  \n  \n    \n      1 Mean (SD); %\n    \n    \n      2 Welch Two Sample t-test; 2-sample test for equality of proportions with continuity correction\n    \n  \n\n\n\n\n\nadd_difference(): mean and rate differences between two groups. Can also be adjusted differences"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-5",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#update-tbl_summary-with-add_-5",
    "title": "tbl_summary()",
    "section": "",
    "text": "sm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_stat(...)\n\n\n\nCustomize statistics presented with add_stat()\nAdded statistics can be placed on the label or the level rows\nAdded statistics may be a single column or multiple"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#where-are-the-ards",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#where-are-the-ards",
    "title": "tbl_summary()",
    "section": "",
    "text": "ARDs are the backbone for all calculations in gtsummary\nEvery gtsummary table saves the ARDs from each calculation\nThey can be extracted individually, or combined.\n\n\n\ntbl &lt;- tbl_summary(trial, by = trt) |&gt; add_p()\ngather_ard(tbl) |&gt; purrr::pluck(\"add_p\", \"age\")\n\n{cards} data frame: 15 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     trt      age stats_wi…    estimate  Median o…        -1\n2     trt      age stats_wi…   statistic  X-square…      4323\n3     trt      age stats_wi…     p.value    p-value     0.718\n4     trt      age stats_wi…    conf.low  CI Lower…        -5\n5     trt      age stats_wi…   conf.high  CI Upper…         4\n6     trt      age stats_wi…      method     method Wilcoxon…\n7     trt      age stats_wi… alternative  alternat… two.sided\n8     trt      age stats_wi…          mu         mu         0\n9     trt      age stats_wi…      paired  Paired t…     FALSE\n10    trt      age stats_wi…       exact      exact          \n11    trt      age stats_wi…     correct    correct      TRUE\n12    trt      age stats_wi…    conf.int   conf.int      TRUE\n13    trt      age stats_wi…  conf.level  CI Confi…      0.95\n14    trt      age stats_wi…    tol.root   tol.root         0\n15    trt      age stats_wi… digits.rank  digits.r…       Inf\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#add-on-functions-in-gtsummary-1",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#add-on-functions-in-gtsummary-1",
    "title": "tbl_summary()",
    "section": "",
    "text": "And many more!\nSee the documentation at http://www.danieldsjoberg.com/gtsummary/reference/index.html\nAnd a detailed tbl_summary() vignette at http://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-exercise-1",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-exercise-1",
    "title": "tbl_summary()",
    "section": "",
    "text": "Navigate to Posit Cloud script exercises/03-gtsummary_partA.R.\nCreate the table outlined in the script.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-exercise-1-solution",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-exercise-1-solution",
    "title": "tbl_summary()",
    "section": "",
    "text": "Create a demographics tables split by TRT01A including AGE, SEX, RACE\n\nlibrary(gtsummary) \nadsl &lt;- pharmaverseadam::adsl |&gt; dplyr::filter(SAFFL == \"Y\") \n \n# Create table \ntbl &lt;- adsl |&gt;  \n  tbl_summary( \n    by = TRT01A, \n    include = c(AGE, SEX, RACE), \n    type = AGE ~ 'continuous2', \n    statistic = AGE ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\") \n  ) |&gt;  \n  add_overall() \ntbl \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall N = 2541\nPlacebo N = 861\nXanomeline High Dose N = 721\nXanomeline Low Dose N = 961\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (8)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Median (Q1, Q3)\n77 (70, 81)\n76 (69, 82)\n76 (70, 79)\n78 (71, 82)\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n    F\n143 (56%)\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n    M\n111 (44%)\n33 (38%)\n37 (51%)\n41 (43%)\n\n\nRace\n\n\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (0.4%)\n0 (0%)\n1 (1.4%)\n0 (0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n23 (9.1%)\n8 (9.3%)\n9 (13%)\n6 (6.3%)\n\n\n    WHITE\n230 (91%)\n78 (91%)\n62 (86%)\n90 (94%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-exercise-1-solution-1",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#gtsummary-exercise-1-solution-1",
    "title": "tbl_summary()",
    "section": "",
    "text": "Extract ARD from table object\n\ngather_ard(tbl)[[\"tbl_summary\"]] |&gt; dplyr::select(-gts_column)\n\n{cards} data frame: 123 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo      SEX              F         n          n    53\n2  TRT01A      Placebo      SEX              F         N          N    86\n3  TRT01A      Placebo      SEX              F         p          % 0.616\n4  TRT01A      Placebo      SEX              M         n          n    33\n5  TRT01A      Placebo      SEX              M         N          N    86\n6  TRT01A      Placebo      SEX              M         p          % 0.384\n7  TRT01A      Placebo     RACE      AMERICAN…         n          n     0\n8  TRT01A      Placebo     RACE      AMERICAN…         N          N    86\n9  TRT01A      Placebo     RACE      AMERICAN…         p          %     0\n10 TRT01A      Placebo     RACE      BLACK OR…         n          n     8\n\n\nℹ 113 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#cross-tabulation-with-tbl_cross",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#cross-tabulation-with-tbl_cross",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_cross() is a wrapper for tbl_summary() for n x m tables\n\nsm_trial |&gt;\n  tbl_cross(\n    row = trt, \n    col = grade,\n    percent = \"row\",\n    margin = \"row\"\n  ) |&gt;\n  add_p(source_note = TRUE) |&gt;\n  bold_labels()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrade\n\n\n\nI\nII\nIII\n\n\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n35 (36%)\n32 (33%)\n31 (32%)\n\n\n    Drug B\n33 (32%)\n36 (35%)\n33 (32%)\n\n\nTotal\n68 (34%)\n68 (34%)\n64 (32%)\n\n\n\nPearson’s Chi-squared test, p=0.9"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#continuous-summaries-with-tbl_continuous",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#continuous-summaries-with-tbl_continuous",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_continuous() summarizes a continuous variable by 1, 2, or more categorical variables\n\nsm_trial |&gt;\n  tbl_continuous(\n    variable = age,\n    by = trt,\n    include = grade\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nGrade\n\n\n\n\n\n\n    I\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#wide-summaries-with-tbl_wide_summary",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#wide-summaries-with-tbl_wide_summary",
    "title": "tbl_summary()",
    "section": "",
    "text": "tbl_wide_summary() summarizes a continuous variable with summary statistics spread across columns\n\ntrial |&gt;\n  tbl_wide_summary(include = c(response, grade))\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nTumor Response\n61\n32%\n\n\nGrade\n\n\n\n\n\n\n    I\n68\n34%\n\n\n    II\n68\n34%\n\n\n    III\n64\n32%"
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#wide-summaries-with-tbl_wide_summary-1",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#wide-summaries-with-tbl_wide_summary-1",
    "title": "tbl_summary()",
    "section": "",
    "text": "trial |&gt;\n  tbl_wide_summary(include = c(age, marker))\n\n\n\n\n\n\n\nCharacteristic\nMedian\nQ1, Q3\n\n\n\n\nAge\n47\n38, 57\n\n\nMarker Level (ng/mL)\n0.64\n0.22, 1.41\n\n\n\n\n\n\n\nNaturally, you can change the statistics, and which appear in each column."
  },
  {
    "objectID": "slides/03-tables-gtsummary/03-tbl_summary.html#nested-summaries-with-tbl_hierarchical",
    "href": "slides/03-tables-gtsummary/03-tbl_summary.html#nested-summaries-with-tbl_hierarchical",
    "title": "tbl_summary()",
    "section": "",
    "text": "cards::ADAE |&gt; \n  tbl_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRTA,\n    id = USUBJID,\n    denominator = cards::ADSL |&gt; dplyr::rename(TRTA = ARM)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class     Dictionary-Derived Term\nPlacebo N = 861\nXanomeline High Dose N = 841\nXanomeline Low Dose N = 841\n\n\n\n\nGASTROINTESTINAL DISORDERS\n10 (12%)\n4 (4.8%)\n5 (6.0%)\n\n\n    DIARRHOEA\n9 (10%)\n4 (4.8%)\n5 (6.0%)\n\n\n    HIATUS HERNIA\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\n8 (9.3%)\n25 (30%)\n24 (29%)\n\n\n    APPLICATION SITE ERYTHEMA\n3 (3.5%)\n15 (18%)\n12 (14%)\n\n\n    APPLICATION SITE PRURITUS\n6 (7.0%)\n22 (26%)\n22 (26%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html",
    "href": "slides/03-tables-gtsummary/05-ard-first.html",
    "title": "ARD-first tables",
    "section": "",
    "text": "Similar to functions that accept a data frame, the package exports functions with nearly identical APIs that accept an ARD.\n\n\ntbl_summary()\n\ntbl_continuous()\n\ntbl_wide_summary()\n\ntbl_ard_summary()\n\ntbl_ard_continuous()\n\ntbl_ard_wide_summary()\n\n\n\n\n\nWe can use the skills we learned earlier today to create ARDs for gtsummary tables.\n\nlibrary(cards)\nlibrary(gtsummary)\n\nard &lt;- ard_stack(\n  data = trial, \n  ard_continuous(variables = age),\n  ard_categorical(variables = grade),\n  .attributes=TRUE\n)\n\nard |&gt; print(n = 7)\n\n{cards} data frame: 22 x 9\n\n\n  variable variable_level   context stat_name stat_label   stat\n1      age                continuo…         N          N    189\n2      age                continuo…      mean       Mean 47.238\n3      age                continuo…        sd         SD 14.312\n4      age                continuo…    median     Median     47\n5      age                continuo…       p25         Q1     38\n6      age                continuo…       p75         Q3     57\n7      age                continuo…       min        Min      6\n\n\nℹ 15 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\nThe .attributes=TRUE call adds column attributes, like labels, to the ARD table, which leads to better defaults by displaying the column labels in the table.\n\n\n\nWe can simply use the ARD from the previous slide, and pass it to tbl_ard_summary() for a summary table.\n\ntbl_ard_summary(ard)\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\n\n\n\n\nAge\n47.0 (38.0, 57.0)\n\n\nGrade\n\n\n\n\n    I\n68 (34.0%)\n\n\n    II\n68 (34.0%)\n\n\n    III\n64 (32.0%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\nNow let’s try a somewhat more complicated table.\n\ntrial |&gt; \n  ard_stack( \n    .by = trt,\n    ard_continuous(variables = age),\n    ard_categorical(variables = grade),\n    # add this for best-looking tables\n    .attributes = TRUE,\n    .overall = TRUE # get unstratified summary statistics\n  ) |&gt; \n  tbl_ard_summary(\n    by = trt,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    label = list(age = \"Patient Age, yrs\"),\n    overall = TRUE\n  ) |&gt; \n  modify_caption(\"**Table 1. Subject Demographics**\")\n\n\n\n\n\nTable 1. Subject Demographics\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\nDrug A1\nDrug B1\n\n\n\n\nPatient Age, yrs\n\n\n\n\n\n\n\n\n    Mean (SD)\n47.2 (14.3)\n47.0 (14.7)\n47.4 (14.0)\n\n\n    Min - Max\n6.0 - 83.0\n6.0 - 78.0\n9.0 - 83.0\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68 (34.0%)\n35 (35.7%)\n33 (32.4%)\n\n\n    II\n68 (34.0%)\n32 (32.7%)\n36 (35.3%)\n\n\n    III\n64 (32.0%)\n31 (31.6%)\n33 (32.4%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhile our examples have focused on simple demographics tables, the ARD structure is general and any statistic can be presented.\n\n\n\ntrial |&gt; \n  cardx::ard_stats_t_test_onesample(by = c(trt, grade), variables = age) |&gt; \n  cards::update_ard_fmt_fn(stat_names = \"p.value\", \n                           fmt_fn = label_style_pvalue(prepend_p = TRUE)) |&gt; \n  tbl_ard_continuous(\n    by = trt, \n    include = grade,\n    variable = age,\n    statistic = ~\"{estimate} ({conf.low}, {conf.high}; {p.value})\"\n  ) |&gt; \n  modify_footnote(all_stat_cols() ~ \"One-sample t-test\")\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\ngrade\n\n\n\n\n\n\n    I\n45.9 (40.2, 51.5; p&lt;0.001)\n46.4 (41.2, 51.6; p&lt;0.001)\n\n\n    II\n44.6 (39.0, 50.1; p&lt;0.001)\n50.3 (45.9, 54.7; p&lt;0.001)\n\n\n    III\n51.0 (46.1, 55.9; p&lt;0.001)\n45.7 (40.4, 51.0; p&lt;0.001)\n\n\n\n1 One-sample t-test\n\n\n\n\n\n\n\n\n\n\n\n\nNavigate to Posit Cloud script exercises/03-gtsummary_partB.R.\nCreate the table outlined in the script.\n\n\n\n\n−+\n10:00\n\n\n\n\n\n\nCreate a demographics tables split by TRT01A including AGE, SEX, RACE using ARD-first\n\nlibrary(cards) \nlibrary(gtsummary) \nadsl &lt;- pharmaverseadam::adsl |&gt; dplyr::filter(SAFFL == \"Y\") \n\n# Create the ARD with the needed statistics \nard &lt;-  \n  ard_stack( \n    adsl, \n    .by = TRT01A, \n    ard_continuous(variables = AGE), \n    ard_categorical(variables = c(SEX, RACE)), \n    .attributes = TRUE,  \n    .overall = TRUE \n  )\nard\n\n{cards} data frame: 109 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      SEX              F         n          n     53\n10 TRT01A      Placebo      SEX              F         N          N     86\n\n\nℹ 99 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nard |&gt;  \n  tbl_ard_summary( \n    by = TRT01A, \n    include = c(AGE, SEX, RACE), \n    type = AGE ~ 'continuous2', \n    statistic = AGE ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\"), \n    overall = TRUE \n  ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\nPlacebo1\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n\n\n    Mean (SD)\n75.1 (8.2)\n75.2 (8.6)\n73.8 (7.9)\n76.0 (8.1)\n\n\n    Median (Q1, Q3)\n77.0 (70.0, 81.0)\n76.0 (69.0, 82.0)\n75.5 (70.0, 79.0)\n78.0 (71.0, 82.0)\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n    F\n143 (56.3%)\n53 (61.6%)\n35 (48.6%)\n55 (57.3%)\n\n\n    M\n111 (43.7%)\n33 (38.4%)\n37 (51.4%)\n41 (42.7%)\n\n\nRace\n\n\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (0.4%)\n0 (0.0%)\n1 (1.4%)\n0 (0.0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n23 (9.1%)\n8 (9.3%)\n9 (12.5%)\n6 (6.3%)\n\n\n    WHITE\n230 (90.6%)\n78 (90.7%)\n62 (86.1%)\n90 (93.8%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\ntrial |&gt; \n  ard_stack( \n    .by = trt,\n    ard_continuous(variables = age),\n    ard_categorical(variables = grade),\n    # add this for best-looking tables\n    .attributes = TRUE\n  ) |&gt; \n  update_ard_fmt_fn(stat_names = c(\"mean\", \"sd\", \"min\", \"max\", \"p\"), \n                    fmt_fn = \\(x) \"xx.x\") |&gt; \n  update_ard_fmt_fn(stat_names = \"n\", fmt_fn = \\(x) \"xx\") |&gt; \n  tbl_ard_summary(\n    by = trt,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    label = list(age = \"Patient Age, yrs\")\n  ) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**  \\nN = xx\")\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = xx1\nDrug B N = xx1\n\n\n\n\nPatient Age, yrs\n\n\n\n\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Min - Max\nxx.x - xx.x\nxx.x - xx.x\n\n\nGrade\n\n\n\n\n\n\n    I\nxx (xx.x%)\nxx (xx.x%)\n\n\n    II\nxx (xx.x%)\nxx (xx.x%)\n\n\n    III\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-1",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-1",
    "title": "ARD-first tables",
    "section": "",
    "text": "Similar to functions that accept a data frame, the package exports functions with nearly identical APIs that accept an ARD.\n\n\ntbl_summary()\n\ntbl_continuous()\n\ntbl_wide_summary()\n\ntbl_ard_summary()\n\ntbl_ard_continuous()\n\ntbl_ard_wide_summary()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-2",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-2",
    "title": "ARD-first tables",
    "section": "",
    "text": "We can use the skills we learned earlier today to create ARDs for gtsummary tables.\n\nlibrary(cards)\nlibrary(gtsummary)\n\nard &lt;- ard_stack(\n  data = trial, \n  ard_continuous(variables = age),\n  ard_categorical(variables = grade),\n  .attributes=TRUE\n)\n\nard |&gt; print(n = 7)\n\n{cards} data frame: 22 x 9\n\n\n  variable variable_level   context stat_name stat_label   stat\n1      age                continuo…         N          N    189\n2      age                continuo…      mean       Mean 47.238\n3      age                continuo…        sd         SD 14.312\n4      age                continuo…    median     Median     47\n5      age                continuo…       p25         Q1     38\n6      age                continuo…       p75         Q3     57\n7      age                continuo…       min        Min      6\n\n\nℹ 15 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\nThe .attributes=TRUE call adds column attributes, like labels, to the ARD table, which leads to better defaults by displaying the column labels in the table."
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-3",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-3",
    "title": "ARD-first tables",
    "section": "",
    "text": "We can simply use the ARD from the previous slide, and pass it to tbl_ard_summary() for a summary table.\n\ntbl_ard_summary(ard)\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\n\n\n\n\nAge\n47.0 (38.0, 57.0)\n\n\nGrade\n\n\n\n\n    I\n68 (34.0%)\n\n\n    II\n68 (34.0%)\n\n\n    III\n64 (32.0%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-4",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-tables-4",
    "title": "ARD-first tables",
    "section": "",
    "text": "Now let’s try a somewhat more complicated table.\n\ntrial |&gt; \n  ard_stack( \n    .by = trt,\n    ard_continuous(variables = age),\n    ard_categorical(variables = grade),\n    # add this for best-looking tables\n    .attributes = TRUE,\n    .overall = TRUE # get unstratified summary statistics\n  ) |&gt; \n  tbl_ard_summary(\n    by = trt,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    label = list(age = \"Patient Age, yrs\"),\n    overall = TRUE\n  ) |&gt; \n  modify_caption(\"**Table 1. Subject Demographics**\")\n\n\n\n\n\nTable 1. Subject Demographics\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\nDrug A1\nDrug B1\n\n\n\n\nPatient Age, yrs\n\n\n\n\n\n\n\n\n    Mean (SD)\n47.2 (14.3)\n47.0 (14.7)\n47.4 (14.0)\n\n\n    Min - Max\n6.0 - 83.0\n6.0 - 78.0\n9.0 - 83.0\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68 (34.0%)\n35 (35.7%)\n33 (32.4%)\n\n\n    II\n68 (34.0%)\n32 (32.7%)\n36 (35.3%)\n\n\n    III\n64 (32.0%)\n31 (31.6%)\n33 (32.4%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#what-about-other-tables",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#what-about-other-tables",
    "title": "ARD-first tables",
    "section": "",
    "text": "While our examples have focused on simple demographics tables, the ARD structure is general and any statistic can be presented.\n\n\n\ntrial |&gt; \n  cardx::ard_stats_t_test_onesample(by = c(trt, grade), variables = age) |&gt; \n  cards::update_ard_fmt_fn(stat_names = \"p.value\", \n                           fmt_fn = label_style_pvalue(prepend_p = TRUE)) |&gt; \n  tbl_ard_continuous(\n    by = trt, \n    include = grade,\n    variable = age,\n    statistic = ~\"{estimate} ({conf.low}, {conf.high}; {p.value})\"\n  ) |&gt; \n  modify_footnote(all_stat_cols() ~ \"One-sample t-test\")\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\ngrade\n\n\n\n\n\n\n    I\n45.9 (40.2, 51.5; p&lt;0.001)\n46.4 (41.2, 51.6; p&lt;0.001)\n\n\n    II\n44.6 (39.0, 50.1; p&lt;0.001)\n50.3 (45.9, 54.7; p&lt;0.001)\n\n\n    III\n51.0 (46.1, 55.9; p&lt;0.001)\n45.7 (40.4, 51.0; p&lt;0.001)\n\n\n\n1 One-sample t-test"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#gtsummary-exercise-2",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#gtsummary-exercise-2",
    "title": "ARD-first tables",
    "section": "",
    "text": "Navigate to Posit Cloud script exercises/03-gtsummary_partB.R.\nCreate the table outlined in the script.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#gtsummary-exercise-2-solution",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#gtsummary-exercise-2-solution",
    "title": "ARD-first tables",
    "section": "",
    "text": "Create a demographics tables split by TRT01A including AGE, SEX, RACE using ARD-first\n\nlibrary(cards) \nlibrary(gtsummary) \nadsl &lt;- pharmaverseadam::adsl |&gt; dplyr::filter(SAFFL == \"Y\") \n\n# Create the ARD with the needed statistics \nard &lt;-  \n  ard_stack( \n    adsl, \n    .by = TRT01A, \n    ard_continuous(variables = AGE), \n    ard_categorical(variables = c(SEX, RACE)), \n    .attributes = TRUE,  \n    .overall = TRUE \n  )\nard\n\n{cards} data frame: 109 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      SEX              F         n          n     53\n10 TRT01A      Placebo      SEX              F         N          N     86\n\n\nℹ 99 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#gtsummary-exercise-2-solution-1",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#gtsummary-exercise-2-solution-1",
    "title": "ARD-first tables",
    "section": "",
    "text": "ard |&gt;  \n  tbl_ard_summary( \n    by = TRT01A, \n    include = c(AGE, SEX, RACE), \n    type = AGE ~ 'continuous2', \n    statistic = AGE ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\"), \n    overall = TRUE \n  ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\nPlacebo1\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n\n\n    Mean (SD)\n75.1 (8.2)\n75.2 (8.6)\n73.8 (7.9)\n76.0 (8.1)\n\n\n    Median (Q1, Q3)\n77.0 (70.0, 81.0)\n76.0 (69.0, 82.0)\n75.5 (70.0, 79.0)\n78.0 (71.0, 82.0)\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n    F\n143 (56.3%)\n53 (61.6%)\n35 (48.6%)\n55 (57.3%)\n\n\n    M\n111 (43.7%)\n33 (38.4%)\n37 (51.4%)\n41 (42.7%)\n\n\nRace\n\n\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (0.4%)\n0 (0.0%)\n1 (1.4%)\n0 (0.0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n23 (9.1%)\n8 (9.3%)\n9 (12.5%)\n6 (6.3%)\n\n\n    WHITE\n230 (90.6%)\n78 (90.7%)\n62 (86.1%)\n90 (93.8%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-table-shells",
    "href": "slides/03-tables-gtsummary/05-ard-first.html#ard-first-table-shells",
    "title": "ARD-first tables",
    "section": "",
    "text": "trial |&gt; \n  ard_stack( \n    .by = trt,\n    ard_continuous(variables = age),\n    ard_categorical(variables = grade),\n    # add this for best-looking tables\n    .attributes = TRUE\n  ) |&gt; \n  update_ard_fmt_fn(stat_names = c(\"mean\", \"sd\", \"min\", \"max\", \"p\"), \n                    fmt_fn = \\(x) \"xx.x\") |&gt; \n  update_ard_fmt_fn(stat_names = \"n\", fmt_fn = \\(x) \"xx\") |&gt; \n  tbl_ard_summary(\n    by = trt,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    label = list(age = \"Patient Age, yrs\")\n  ) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**  \\nN = xx\")\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = xx1\nDrug B N = xx1\n\n\n\n\nPatient Age, yrs\n\n\n\n\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Min - Max\nxx.x - xx.x\nxx.x - xx.x\n\n\nGrade\n\n\n\n\n\n\n    I\nxx (xx.x%)\nxx (xx.x%)\n\n\n    II\nxx (xx.x%)\nxx (xx.x%)\n\n\n    III\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/08-print_engines.html",
    "href": "slides/03-tables-gtsummary/08-print_engines.html",
    "title": "{gtsummary} print engines",
    "section": "",
    "text": "Use any print engine to customize table\n\nlibrary(gtsummary)\nlibrary(gt)\ntrial |&gt;\n  select(age, grade) |&gt;\n  tbl_summary() |&gt;\n  as_gt() |&gt;\n  cols_width(label ~ px(300)) |&gt;\n  cols_align(columns = stat_0, \n             align = \"left\")\n\n\n\n\n\n\n\nCharacteristic\nN = 2001\n\n\n\n\nAge\n47 (38, 57)\n\n\n    Unknown\n11\n\n\nGrade\n\n\n\n\n    I\n68 (34%)\n\n\n    II\n68 (34%)\n\n\n    III\n64 (32%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/08-print_engines.html#gtsummary-print-engines-2",
    "href": "slides/03-tables-gtsummary/08-print_engines.html#gtsummary-print-engines-2",
    "title": "{gtsummary} print engines",
    "section": "",
    "text": "Use any print engine to customize table\n\nlibrary(gtsummary)\nlibrary(gt)\ntrial |&gt;\n  select(age, grade) |&gt;\n  tbl_summary() |&gt;\n  as_gt() |&gt;\n  cols_width(label ~ px(300)) |&gt;\n  cols_align(columns = stat_0, \n             align = \"left\")\n\n\n\n\n\n\n\nCharacteristic\nN = 2001\n\n\n\n\nAge\n47 (38, 57)\n\n\n    Unknown\n11\n\n\nGrade\n\n\n\n\n    I\n68 (34%)\n\n\n    II\n68 (34%)\n\n\n    III\n64 (32%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#workshop-outline",
    "href": "slides/03-tables-gtsummary/index.html#workshop-outline",
    "title": "gtsummary + ARD",
    "section": "Workshop outline",
    "text": "Workshop outline\n\n\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary}\nARD to Tables with {tfrmt}"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#questions",
    "href": "slides/03-tables-gtsummary/index.html#questions",
    "title": "gtsummary + ARD",
    "section": "Questions",
    "text": "Questions\n\n\n Please ask questions at any time!"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#section",
    "href": "slides/03-tables-gtsummary/index.html#section",
    "title": "gtsummary + ARD",
    "section": "",
    "text": "How it started\n\n\nBegan to address reproducible issues while working in academia\nGoal was to build a package to summarize study results with code that was both simple and customizable\nFirst release in May 2019\n\n\n\nHow it’s going\n\n\nThe stats\n\n1,300,000+ installations from CRAN\n1100+ GitHub stars\n300+ contributors\n50+ code contributors\n\nWon the 2021 American Statistical Association (ASA) Innovation in Programming Award\nWon the 2024 Posit Pharma Table Contest"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-overview",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-overview",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\n\n\n\nCreate tabular summaries with sensible defaults but highly customizable\nTypes of summaries:\n\nDemographic- or “Table 1”-types\nCross-tabulation\nRegression models\nSurvival data\nSurvey data\nCustom tables\n\n\n\n\nReport statistics from {gtsummary} tables inline in R Markdown\nStack and/or merge any table type\nUse themes to standardize across tables\nChoose from different print engines"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-runs-on-ards",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-runs-on-ards",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} runs on ARDs!",
    "text": "{gtsummary} runs on ARDs!"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-overview-1",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-overview-1",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\nFor our workshop, we will focus on the following summary types as well as themes and print engines.\n\ntbl_summary()\ntbl_cross()\ntbl_continuous()\ntbl_wide_summary()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#example-dataset",
    "href": "slides/03-tables-gtsummary/index.html#example-dataset",
    "title": "gtsummary + ARD",
    "section": "Example Dataset",
    "text": "Example Dataset\n\n\n\nThe trial data set is included with {gtsummary}\nSimulated data set of baseline characteristics for 200 patients who receive Drug A or Drug B\nVariables were assigned labels using the labelled package\n\n\n\nlibrary(gtsummary)\nlibrary(tidyverse)\nhead(trial) |&gt; gt::gt()\n\n\n\n\n\n\n\nChemotherapy Treatment\nAge\nMarker Level (ng/mL)\nT Stage\nGrade\nTumor Response\nPatient Died\nMonths to Death/Censor\n\n\n\n\nDrug A\n23\n0.160\nT1\nII\n0\n0\n24.00\n\n\nDrug B\n9\n1.107\nT2\nI\n1\n0\n24.00\n\n\nDrug A\n31\n0.277\nT1\nII\n0\n0\n24.00\n\n\nDrug A\nNA\n2.067\nT3\nIII\n1\n1\n17.64\n\n\nDrug A\n51\n2.767\nT4\nIII\n1\n1\n16.43\n\n\nDrug B\n39\n0.613\nT4\nI\n0\n1\n15.64"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#example-dataset-1",
    "href": "slides/03-tables-gtsummary/index.html#example-dataset-1",
    "title": "gtsummary + ARD",
    "section": "Example Dataset",
    "text": "Example Dataset\n\n\nThis presentation will use a subset of the variables.\n\nsm_trial &lt;-\n  trial |&gt; \n  select(trt, age, grade, response)\n\n\n\n\n\n\n\n\n\n\nVariable\nLabel\n\n\n\n\ntrt\nChemotherapy Treatment\n\n\nage\nAge\n\n\ngrade\nGrade\n\n\nresponse\nTumor Response"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#basic-tbl_summary",
    "href": "slides/03-tables-gtsummary/index.html#basic-tbl_summary",
    "title": "gtsummary + ARD",
    "section": "Basic tbl_summary()",
    "text": "Basic tbl_summary()\n\n\n\nsm_trial |&gt; \n  select(-trt) |&gt;  \n  tbl_summary()\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2001\n\n\n\n\nAge\n47 (38, 57)\n\n\n    Unknown\n11\n\n\nGrade\n\n\n\n\n    I\n68 (34%)\n\n\n    II\n68 (34%)\n\n\n    III\n64 (32%)\n\n\nTumor Response\n61 (32%)\n\n\n    Unknown\n7\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\nFour types of summaries: continuous, continuous2, categorical, and dichotomous\nStatistics are median (IQR) for continuous, n (%) for categorical/dichotomous\nVariables coded 0/1, TRUE/FALSE, Yes/No treated as dichotomous\nLists NA values under “Unknown”\nLabel attributes are printed automatically"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output",
    "href": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output",
    "title": "gtsummary + ARD",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "href": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-1",
    "title": "gtsummary + ARD",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Median (Q1, Q3)\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "href": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-2",
    "title": "gtsummary + ARD",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (15)\n47 (14)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "href": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-3",
    "title": "gtsummary + ARD",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    list(grade = \"Pathologic tumor grade\"),\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (15)\n47 (14)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nPathologic tumor grade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "href": "slides/03-tables-gtsummary/index.html#customize-tbl_summary-output-4",
    "title": "gtsummary + ARD",
    "section": "Customize tbl_summary() output",
    "text": "Customize tbl_summary() output\n\n\ntbl_summary(\n  sm_trial,\n  by = trt,\n  type = list(age = \"continuous2\"),\n  statistic = \n    list(\n      age = c(\"{mean} ({sd})\", \n              \"{min}, {max}\"), \n      response = \"{n} / {N} ({p}%)\"\n    ),\n  label = \n    list(grade = \"Pathologic tumor grade\"),\n  digits = # report SD(age) to one decimal place\n    list(age = list(sd = 1)) \n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n47 (14.7)\n47 (14.0)\n\n\n    Min, Max\n6, 78\n9, 83\n\n\n    Unknown\n7\n4\n\n\nPathologic tumor grade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 / 95 (29%)\n33 / 98 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 n (%); n / N (%)\n\n\n\n\n\n\n\n\n\n\n\n\nby: specify a column variable for cross-tabulation\ntype: specify the summary type\nstatistic: customize the reported statistics\n\n\n\nlabel: change or customize variable labels\ndigits: specify the number of decimal places for rounding"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-formulas",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-formulas",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} + formulas",
    "text": "{gtsummary} + formulas\nThis syntax is also used in {cards}, {cardx}, and {gt}.\n\n\n\nNamed list are OK too! label = list(age = \"Patient Age\")"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#section-1",
    "href": "slides/03-tables-gtsummary/index.html#section-1",
    "title": "gtsummary + ARD",
    "section": "",
    "text": "{gtsummary} selectors\n\nUse the following helpers to select groups of variables: all_continuous(), all_categorical()\nUse all_stat_cols() to select the summary statistic columns\n\nAdd-on functions in {gtsummary}\ntbl_summary() objects can also be updated using related functions.\n\nadd_*() add additional column of statistics or information, e.g. p-values, q-values, overall statistics, treatment differences, N obs., and more\nmodify_*() modify table headers, spanning headers, footnotes, and more\nbold_*()/italicize_*() style labels, variable levels, significant p-values"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "href": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_",
    "title": "gtsummary + ARD",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt\n  ) |&gt; \n  add_p()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\np-value2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    Unknown\n7\n4\n\n\n\n\nGrade\n\n\n\n\n0.9\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n\n\n    III\n31 (32%)\n33 (32%)\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    Unknown\n3\n4\n\n\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\nadd_p(): adds a column of p-values\nFunction is customizable with many methods implemented internally, as well as extendable to any method you may be using"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "href": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-1",
    "title": "gtsummary + ARD",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall N = 2001\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "href": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-2",
    "title": "gtsummary + ARD",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall() |&gt; \n  add_n()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nOverall N = 2001\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n189\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n200\n\n\n\n\n\n\n\n\n    I\n\n\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n\n\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n\n\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response\n193\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics\nadd_n(): adds a column with the sample size"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "href": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-3",
    "title": "gtsummary + ARD",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_overall() |&gt; \n  add_n() |&gt; \n  add_stat_label(\n    label = all_categorical() ~ \"No. (%)\"\n  ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nOverall N = 200\nDrug A N = 98\nDrug B N = 102\n\n\n\n\nAge, Median (Q1, Q3)\n189\n47 (38, 57)\n46 (37, 60)\n48 (39, 56)\n\n\nGrade, No. (%)\n200\n\n\n\n\n\n\n\n\n    I\n\n\n68 (34%)\n35 (36%)\n33 (32%)\n\n\n    II\n\n\n68 (34%)\n32 (33%)\n36 (35%)\n\n\n    III\n\n\n64 (32%)\n31 (32%)\n33 (32%)\n\n\nTumor Response, No. (%)\n193\n61 (32%)\n28 (29%)\n33 (34%)\n\n\n\n\n\n\n\n\nadd_overall(): adds a column of overall statistics\nadd_n(): adds a column with the sample size\nadd_stat_label(): adds a description of the reported statistic"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-with-bold_italicize_",
    "href": "slides/03-tables-gtsummary/index.html#update-with-bold_italicize_",
    "title": "gtsummary + ARD",
    "section": "Update with bold_*()/italicize_*()",
    "text": "Update with bold_*()/italicize_*()\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt\n  ) |&gt;\n  add_p() |&gt; \n  bold_labels() |&gt; \n  italicize_levels() |&gt; \n  bold_p(t = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\np-value2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    Unknown\n7\n4\n\n\n\n\nGrade\n\n\n\n\n0.9\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n\n\n    III\n31 (32%)\n33 (32%)\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    Unknown\n3\n4\n\n\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n2 Wilcoxon rank sum test; Pearson’s Chi-squared test\n\n\n\n\n\n\n\n\n\nbold_labels(): bold the variable labels\nitalicize_levels(): italicize the variable levels\nbold_p(): bold p-values according a specified threshold"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "href": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-modify_",
    "title": "gtsummary + ARD",
    "section": "Update tbl_summary() with modify_*()",
    "text": "Update tbl_summary() with modify_*()\n\n\ntbl &lt;-\n  sm_trial |&gt; \n  tbl_summary(by = trt, \n              missing = \"no\") |&gt;\n  modify_header(\n      stat_1 ~ \"**Group A**\",\n      stat_2 ~ \"**Group B**\"\n  ) |&gt; \n  modify_spanning_header(\n    all_stat_cols() ~ \"**Drug**\") |&gt; \n  modify_footnote(\n    all_stat_cols() ~ \n      paste(\"median (IQR) for continuous;\",\n            \"n (%) for categorical\")\n  )\ntbl\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug\n\n\n\nGroup A1\nGroup B1\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\nGrade\n\n\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n\n1 median (IQR) for continuous; n (%) for categorical\n\n\n\n\n\n\n\n\n\nUse show_header_names() to see the internal header names available for use in modify_header()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-4",
    "href": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-4",
    "title": "gtsummary + ARD",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\ntrial |&gt;\n  select(trt, marker, response) |&gt;\n  tbl_summary(\n    by = trt,\n    statistic = list(marker ~ \"{mean} ({sd})\",\n                     response ~ \"{p}%\"),\n    missing = \"no\"\n  ) |&gt; \n  add_difference()\n\n\n\n\n  \n    \n      Characteristic\n      Drug A\nN = 981\n      Drug B\nN = 1021\n      Difference2\n      95% CI2\n      p-value2\n    \n  \n  \n    Marker Level (ng/mL)\n1.02 (0.89)\n0.82 (0.83)\n0.20\n-0.05, 0.44\n0.12\n    Tumor Response\n29%\n34%\n-4.2%\n-18%, 9.9%\n0.6\n  \n  \n    \n      Abbreviation: CI = Confidence Interval\n    \n  \n  \n    \n      1 Mean (SD); %\n    \n    \n      2 Welch Two Sample t-test; 2-sample test for equality of proportions with continuity correction\n    \n  \n\n\n\n\n\nadd_difference(): mean and rate differences between two groups. Can also be adjusted differences"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-5",
    "href": "slides/03-tables-gtsummary/index.html#update-tbl_summary-with-add_-5",
    "title": "gtsummary + ARD",
    "section": "Update tbl_summary() with add_*()",
    "text": "Update tbl_summary() with add_*()\n\n\n\nsm_trial |&gt;\n  tbl_summary(\n    by = trt,\n    missing = \"no\"\n  ) |&gt; \n  add_stat(...)\n\n\n\nCustomize statistics presented with add_stat()\nAdded statistics can be placed on the label or the level rows\nAdded statistics may be a single column or multiple"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#where-are-the-ards",
    "href": "slides/03-tables-gtsummary/index.html#where-are-the-ards",
    "title": "gtsummary + ARD",
    "section": "Where are the ARDs?",
    "text": "Where are the ARDs?\n\n\n\nARDs are the backbone for all calculations in gtsummary\nEvery gtsummary table saves the ARDs from each calculation\nThey can be extracted individually, or combined.\n\n\n\ntbl &lt;- tbl_summary(trial, by = trt) |&gt; add_p()\ngather_ard(tbl) |&gt; purrr::pluck(\"add_p\", \"age\")\n\n{cards} data frame: 15 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     trt      age stats_wi…    estimate  Median o…        -1\n2     trt      age stats_wi…   statistic  X-square…      4323\n3     trt      age stats_wi…     p.value    p-value     0.718\n4     trt      age stats_wi…    conf.low  CI Lower…        -5\n5     trt      age stats_wi…   conf.high  CI Upper…         4\n6     trt      age stats_wi…      method     method Wilcoxon…\n7     trt      age stats_wi… alternative  alternat… two.sided\n8     trt      age stats_wi…          mu         mu         0\n9     trt      age stats_wi…      paired  Paired t…     FALSE\n10    trt      age stats_wi…       exact      exact          \n11    trt      age stats_wi…     correct    correct      TRUE\n12    trt      age stats_wi…    conf.int   conf.int      TRUE\n13    trt      age stats_wi…  conf.level  CI Confi…      0.95\n14    trt      age stats_wi…    tol.root   tol.root         0\n15    trt      age stats_wi… digits.rank  digits.r…       Inf\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "href": "slides/03-tables-gtsummary/index.html#add-on-functions-in-gtsummary-1",
    "title": "gtsummary + ARD",
    "section": "Add-on functions in {gtsummary}",
    "text": "Add-on functions in {gtsummary}\nAnd many more!\nSee the documentation at http://www.danieldsjoberg.com/gtsummary/reference/index.html\nAnd a detailed tbl_summary() vignette at http://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 1",
    "text": "{gtsummary} Exercise 1\n\nNavigate to Posit Cloud script exercises/03-gtsummary_partA.R.\nCreate the table outlined in the script.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1-solution",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1-solution",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 1 Solution",
    "text": "{gtsummary} Exercise 1 Solution\nCreate a demographics tables split by TRT01A including AGE, SEX, RACE\n\nlibrary(gtsummary) \nadsl &lt;- pharmaverseadam::adsl |&gt; dplyr::filter(SAFFL == \"Y\") \n \n# Create table \ntbl &lt;- adsl |&gt;  \n  tbl_summary( \n    by = TRT01A, \n    include = c(AGE, SEX, RACE), \n    type = AGE ~ 'continuous2', \n    statistic = AGE ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\") \n  ) |&gt;  \n  add_overall() \ntbl"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1-solution-output",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1-solution-output",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 1 Solution",
    "text": "{gtsummary} Exercise 1 Solution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall N = 2541\nPlacebo N = 861\nXanomeline High Dose N = 721\nXanomeline Low Dose N = 961\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (8)\n75 (9)\n74 (8)\n76 (8)\n\n\n    Median (Q1, Q3)\n77 (70, 81)\n76 (69, 82)\n76 (70, 79)\n78 (71, 82)\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n    F\n143 (56%)\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n    M\n111 (44%)\n33 (38%)\n37 (51%)\n41 (43%)\n\n\nRace\n\n\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (0.4%)\n0 (0%)\n1 (1.4%)\n0 (0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n23 (9.1%)\n8 (9.3%)\n9 (13%)\n6 (6.3%)\n\n\n    WHITE\n230 (91%)\n78 (91%)\n62 (86%)\n90 (94%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1-solution-1",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-1-solution-1",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 1 Solution",
    "text": "{gtsummary} Exercise 1 Solution\nExtract ARD from table object\n\ngather_ard(tbl)[[\"tbl_summary\"]] |&gt; dplyr::select(-gts_column)\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo      SEX              F         n          n    53\n2  TRT01A      Placebo      SEX              F         N          N    86\n3  TRT01A      Placebo      SEX              F         p          % 0.616\n4  TRT01A      Placebo      SEX              M         n          n    33\n5  TRT01A      Placebo      SEX              M         N          N    86\n6  TRT01A      Placebo      SEX              M         p          % 0.384\n7  TRT01A      Placebo     RACE      AMERICAN…         n          n     0\n8  TRT01A      Placebo     RACE      AMERICAN…         N          N    86\n9  TRT01A      Placebo     RACE      AMERICAN…         p          %     0\n10 TRT01A      Placebo     RACE      BLACK OR…         n          n     8"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#cross-tabulation-with-tbl_cross",
    "href": "slides/03-tables-gtsummary/index.html#cross-tabulation-with-tbl_cross",
    "title": "gtsummary + ARD",
    "section": "Cross-tabulation with tbl_cross()",
    "text": "Cross-tabulation with tbl_cross()\ntbl_cross() is a wrapper for tbl_summary() for n x m tables\n\n\nsm_trial |&gt;\n  tbl_cross(\n    row = trt, \n    col = grade,\n    percent = \"row\",\n    margin = \"row\"\n  ) |&gt;\n  add_p(source_note = TRUE) |&gt;\n  bold_labels()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrade\n\n\n\nI\nII\nIII\n\n\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n35 (36%)\n32 (33%)\n31 (32%)\n\n\n    Drug B\n33 (32%)\n36 (35%)\n33 (32%)\n\n\nTotal\n68 (34%)\n68 (34%)\n64 (32%)\n\n\n\nPearson’s Chi-squared test, p=0.9"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#continuous-summaries-with-tbl_continuous",
    "href": "slides/03-tables-gtsummary/index.html#continuous-summaries-with-tbl_continuous",
    "title": "gtsummary + ARD",
    "section": "Continuous Summaries with tbl_continuous()",
    "text": "Continuous Summaries with tbl_continuous()\ntbl_continuous() summarizes a continuous variable by 1, 2, or more categorical variables\n\nsm_trial |&gt;\n  tbl_continuous(\n    variable = age,\n    by = trt,\n    include = grade\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nGrade\n\n\n\n\n\n\n    I\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#wide-summaries-with-tbl_wide_summary",
    "href": "slides/03-tables-gtsummary/index.html#wide-summaries-with-tbl_wide_summary",
    "title": "gtsummary + ARD",
    "section": "Wide Summaries with tbl_wide_summary()",
    "text": "Wide Summaries with tbl_wide_summary()\ntbl_wide_summary() summarizes a continuous variable with summary statistics spread across columns\n\ntrial |&gt;\n  tbl_wide_summary(include = c(response, grade))\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nTumor Response\n61\n32%\n\n\nGrade\n\n\n\n\n\n\n    I\n68\n34%\n\n\n    II\n68\n34%\n\n\n    III\n64\n32%"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#wide-summaries-with-tbl_wide_summary-1",
    "href": "slides/03-tables-gtsummary/index.html#wide-summaries-with-tbl_wide_summary-1",
    "title": "gtsummary + ARD",
    "section": "Wide Summaries with tbl_wide_summary()",
    "text": "Wide Summaries with tbl_wide_summary()\n\ntrial |&gt;\n  tbl_wide_summary(include = c(age, marker))\n\n\n\n\n\n\n\nCharacteristic\nMedian\nQ1, Q3\n\n\n\n\nAge\n47\n38, 57\n\n\nMarker Level (ng/mL)\n0.64\n0.22, 1.41\n\n\n\n\n\n\n\nNaturally, you can change the statistics, and which appear in each column."
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#nested-summaries-with-tbl_hierarchical",
    "href": "slides/03-tables-gtsummary/index.html#nested-summaries-with-tbl_hierarchical",
    "title": "gtsummary + ARD",
    "section": "Nested Summaries with tbl_hierarchical()",
    "text": "Nested Summaries with tbl_hierarchical()\n\n cards::ADAE |&gt; \n  tbl_hierarchical(\n    variables = c(AESOC, AEDECOD),\n    by = TRTA,\n    id = USUBJID,\n    denominator = cards::ADSL |&gt; dplyr::rename(TRTA = ARM)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class     Dictionary-Derived Term\nPlacebo N = 861\nXanomeline High Dose N = 841\nXanomeline Low Dose N = 841\n\n\n\n\nGASTROINTESTINAL DISORDERS\n10 (12%)\n4 (4.8%)\n5 (6.0%)\n\n\n    DIARRHOEA\n9 (10%)\n4 (4.8%)\n5 (6.0%)\n\n\n    HIATUS HERNIA\n1 (1.2%)\n0 (0%)\n0 (0%)\n\n\nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\n8 (9.3%)\n25 (30%)\n24 (29%)\n\n\n    APPLICATION SITE ERYTHEMA\n3 (3.5%)\n15 (18%)\n12 (14%)\n\n\n    APPLICATION SITE PRURITUS\n6 (7.0%)\n22 (26%)\n22 (26%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "href": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "title": "gtsummary + ARD",
    "section": "tbl_merge() for side-by-side tables",
    "text": "tbl_merge() for side-by-side tables\n\n\n\nlibrary(gtsummary)\ntbl_n &lt;- \n  tbl_summary(\n    trial, \n    include = grade, \n    statistic = grade ~ \"{n}\"\n  ) |&gt; \n  modify_header( # update header\n    all_stat_cols() ~ \"**N**\"\n  ) |&gt; \n  modify_footnote( # rm footnote\n    all_stat_cols() ~ NA\n  ) \ntbl_n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\n\n\n\n\nGrade\n\n\n\n\n    I\n68\n\n\n    II\n68\n\n\n    III\n64\n\n\n\n\n\n\n\n\n\ntbl_age &lt;-\n  tbl_continuous(\n    trial, \n    include = grade, \n    variable = age, \n    by = trt\n  ) |&gt; \n  modify_header( # update header\n    all_stat_cols() ~ \"**{level}**\"\n  ) \n\n\n\ntbl_age\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\nGrade\n\n\n\n\n\n\n    I\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables-1",
    "href": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables-1",
    "title": "gtsummary + ARD",
    "section": "tbl_merge() for side-by-side tables",
    "text": "tbl_merge() for side-by-side tables\n\n# combine the tables side by side\nlist(tbl_n, tbl_age) |&gt; \n  tbl_merge(tab_spanner = FALSE) # suppress default header\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nDrug A1\nDrug B1\n\n\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68\n46 (36, 60)\n48 (42, 55)\n\n\n    II\n68\n45 (31, 55)\n51 (42, 58)\n\n\n    III\n64\n52 (42, 61)\n45 (36, 52)\n\n\n\n1 Age: Median (Q1, Q3)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "href": "slides/03-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "title": "gtsummary + ARD",
    "section": "tbl_stack() to combine vertically",
    "text": "tbl_stack() to combine vertically\n\ntbl_drug_a &lt;- trial |&gt; \n  dplyr::filter(trt == \"Drug A\") |&gt; \n  tbl_summary(include = c(response, death), missing = \"no\")\ntbl_drug_b &lt;- trial |&gt; \n  dplyr::filter(trt == \"Drug B\") |&gt; \n  tbl_summary(include = c(response, death), missing = \"no\")\n\n# stack the two tables \nlist(tbl_drug_a, tbl_drug_b) |&gt; \n  tbl_stack(group_header = c(\"Drug A\", \"Drug B\")) |&gt; # optionally include headers for each table\n  modify_header(all_stat_cols() ~ \"**Outcome Rates**\")\n\n\n\n\n\n\n\nCharacteristic\nOutcome Rates1\n\n\n\n\nDrug A\n\n\nTumor Response\n28 (29%)\n\n\nPatient Died\n52 (53%)\n\n\nDrug B\n\n\nTumor Response\n33 (34%)\n\n\nPatient Died\n60 (59%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_strata-for-stratified-tables",
    "href": "slides/03-tables-gtsummary/index.html#tbl_strata-for-stratified-tables",
    "title": "gtsummary + ARD",
    "section": "tbl_strata() for stratified tables",
    "text": "tbl_strata() for stratified tables\n\ntbl_strata(\n  trial, \n  strata = trt, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(response, death))\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nDrug A\n\n\nDrug B\n\n\n\nn\n%\nn\n%\n\n\n\n\nTumor Response\n28\n29%\n33\n34%\n\n\nPatient Died\n52\n53%\n60\n59%\n\n\n\n\n\n\n\nThe default is to combine stratified tables with tbl_merge()."
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_strata-for-stratified-tables-1",
    "href": "slides/03-tables-gtsummary/index.html#tbl_strata-for-stratified-tables-1",
    "title": "gtsummary + ARD",
    "section": "tbl_strata() for stratified tables",
    "text": "tbl_strata() for stratified tables\nWe can also stack the tables.\n\ntbl_strata(\n  trial, \n  strata = trt, \n  ~ .x |&gt; \n    tbl_wide_summary(include = c(response, death)),\n  .combine_with = \"tbl_stack\"\n)\n\n\n\n\n\n\n\nCharacteristic\nn\n%\n\n\n\n\nDrug A\n\n\nTumor Response\n28\n29%\n\n\nPatient Died\n52\n53%\n\n\nDrug B\n\n\nTumor Response\n33\n34%\n\n\nPatient Died\n60\n59%"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "href": "slides/03-tables-gtsummary/index.html#define-custom-function-tbl_cmh",
    "title": "gtsummary + ARD",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "href": "slides/03-tables-gtsummary/index.html#define-custom-function-tbl_cmh-1",
    "title": "gtsummary + ARD",
    "section": "Define custom function tbl_cmh()",
    "text": "Define custom function tbl_cmh()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#cobbling-tables-together",
    "href": "slides/03-tables-gtsummary/index.html#cobbling-tables-together",
    "title": "gtsummary + ARD",
    "section": "Cobbling Tables Together",
    "text": "Cobbling Tables Together\n\n\nMost of the tables we create in the pharma space come from a catalog of standard tables.\nCustom or one-off tables are often quite difficult and time intensive to create.\nThe {gtsummary} package makes it simple to break complex tables into their simple parts and cobble them together in the end.\nMoreover, the internal structure of a gtsummary table is super simple: a data frame and instructions on how to print that data frame to make it cute. If needed, you can directly modify the underlying data frame with modify_table_body().\n\n\n\ntrial |&gt; tbl_summary(include = c(age, grade), by = trt) |&gt; purrr::pluck(\"table_body\")\n\n# A tibble: 6 × 7\n  variable var_type    row_type var_label label   stat_1      stat_2     \n  &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt;      \n1 age      continuous  label    Age       Age     46 (37, 60) 48 (39, 56)\n2 age      continuous  missing  Age       Unknown 7           4          \n3 grade    categorical label    Grade     Grade   &lt;NA&gt;        &lt;NA&gt;       \n4 grade    categorical level    Grade     I       35 (36%)    33 (32%)   \n5 grade    categorical level    Grade     II      32 (33%)    36 (35%)   \n6 grade    categorical level    Grade     III     31 (32%)    33 (32%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-1",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-1",
    "title": "gtsummary + ARD",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nSimilar to functions that accept a data frame, the package exports functions with nearly identical APIs that accept an ARD.\n\n\ntbl_summary()\n\ntbl_continuous()\n\ntbl_wide_summary()\n\ntbl_ard_summary()\n\ntbl_ard_continuous()\n\ntbl_ard_wide_summary()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-2",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-2",
    "title": "gtsummary + ARD",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can use the skills we learned earlier today to create ARDs for gtsummary tables.\n\n\nlibrary(cards)\nlibrary(gtsummary)\n\nard &lt;- ard_stack(\n  data = trial, \n  ard_continuous(variables = age),\n  ard_categorical(variables = grade),\n  .attributes=TRUE\n)\n\nard |&gt; print(n = 7)\n\n\n{cards} data frame: 22 x 9\n\n\n  variable variable_level   context stat_name stat_label   stat\n1      age                continuo…         N          N    189\n2      age                continuo…      mean       Mean 47.238\n3      age                continuo…        sd         SD 14.312\n4      age                continuo…    median     Median     47\n5      age                continuo…       p25         Q1     38\n6      age                continuo…       p75         Q3     57\n7      age                continuo…       min        Min      6\n\n\nℹ 15 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\nThe .attributes=TRUE call adds column attributes, like labels, to the ARD table, which leads to better defaults by displaying the column labels in the table."
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-3",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-3",
    "title": "gtsummary + ARD",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can simply use the ARD from the previous slide, and pass it to tbl_ard_summary() for a summary table.\n\n\ntbl_ard_summary(ard)\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\n\n\n\n\nAge\n47.0 (38.0, 57.0)\n\n\nGrade\n\n\n\n\n    I\n68 (34.0%)\n\n\n    II\n68 (34.0%)\n\n\n    III\n64 (32.0%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-4",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-4",
    "title": "gtsummary + ARD",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nNow let’s try a somewhat more complicated table.\n\ntrial |&gt; \n  ard_stack( \n    .by = trt,\n    ard_continuous(variables = age),\n    ard_categorical(variables = grade),\n    # add this for best-looking tables\n    .attributes = TRUE,\n    .overall = TRUE # get unstratified summary statistics\n  ) |&gt; \n  tbl_ard_summary(\n    by = trt,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    label = list(age = \"Patient Age, yrs\"),\n    overall = TRUE\n  ) |&gt; \n  modify_caption(\"**Table 1. Subject Demographics**\")"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-4-output",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-4-output",
    "title": "gtsummary + ARD",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\n\n\n\n\n\nTable 1. Subject Demographics\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\nDrug A1\nDrug B1\n\n\n\n\nPatient Age, yrs\n\n\n\n\n\n\n\n\n    Mean (SD)\n47.2 (14.3)\n47.0 (14.7)\n47.4 (14.0)\n\n\n    Min - Max\n6.0 - 83.0\n6.0 - 78.0\n9.0 - 83.0\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n68 (34.0%)\n35 (35.7%)\n33 (32.4%)\n\n\n    II\n68 (34.0%)\n32 (32.7%)\n36 (35.3%)\n\n\n    III\n64 (32.0%)\n31 (31.6%)\n33 (32.4%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#what-about-other-tables",
    "href": "slides/03-tables-gtsummary/index.html#what-about-other-tables",
    "title": "gtsummary + ARD",
    "section": "What About Other Tables?",
    "text": "What About Other Tables?\n\n\nWhile our examples have focused on simple demographics tables, the ARD structure is general and any statistic can be presented.\n\n\n\ntrial |&gt; \n  cardx::ard_stats_t_test_onesample(by = c(trt, grade), variables = age) |&gt; \n  cards::update_ard_fmt_fn(stat_names = \"p.value\", \n                           fmt_fn = label_style_pvalue(prepend_p = TRUE)) |&gt; \n  tbl_ard_continuous(\n    by = trt, \n    include = grade,\n    variable = age,\n    statistic = ~\"{estimate} ({conf.low}, {conf.high}; {p.value})\"\n  ) |&gt; \n  modify_footnote(all_stat_cols() ~ \"One-sample t-test\")\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\ngrade\n\n\n\n\n\n\n    I\n45.9 (40.2, 51.5; p&lt;0.001)\n46.4 (41.2, 51.6; p&lt;0.001)\n\n\n    II\n44.6 (39.0, 50.1; p&lt;0.001)\n50.3 (45.9, 54.7; p&lt;0.001)\n\n\n    III\n51.0 (46.1, 55.9; p&lt;0.001)\n45.7 (40.4, 51.0; p&lt;0.001)\n\n\n\n1 One-sample t-test"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 2",
    "text": "{gtsummary} Exercise 2\n\nNavigate to Posit Cloud script exercises/03-gtsummary_partB.R.\nCreate the table outlined in the script.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 2 Solution",
    "text": "{gtsummary} Exercise 2 Solution\nCreate a demographics tables split by TRT01A including AGE, SEX, RACE using ARD-first\n\nlibrary(cards) \nlibrary(gtsummary) \nadsl &lt;- pharmaverseadam::adsl |&gt; dplyr::filter(SAFFL == \"Y\") \n\n# Create the ARD with the needed statistics \nard &lt;-  \n  ard_stack( \n    adsl, \n    .by = TRT01A, \n    ard_continuous(variables = AGE), \n    ard_categorical(variables = c(SEX, RACE)), \n    .attributes = TRUE,  \n    .overall = TRUE \n  )\nard"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution-output",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution-output",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 2 Solution",
    "text": "{gtsummary} Exercise 2 Solution\n\n{cards} data frame: 109 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      SEX              F         n          n     53\n10 TRT01A      Placebo      SEX              F         N          N     86\n\n\nℹ 99 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution-1",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution-1",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 2 Solution",
    "text": "{gtsummary} Exercise 2 Solution\n\nard |&gt;  \n  tbl_ard_summary( \n    by = TRT01A, \n    include = c(AGE, SEX, RACE), \n    type = AGE ~ 'continuous2', \n    statistic = AGE ~ c(\"{mean} ({sd})\", \"{median} ({p25}, {p75})\"), \n    overall = TRUE \n  )"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution-1-output",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-exercise-2-solution-1-output",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} Exercise 2 Solution",
    "text": "{gtsummary} Exercise 2 Solution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall1\nPlacebo1\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n\n\n    Mean (SD)\n75.1 (8.2)\n75.2 (8.6)\n73.8 (7.9)\n76.0 (8.1)\n\n\n    Median (Q1, Q3)\n77.0 (70.0, 81.0)\n76.0 (69.0, 82.0)\n75.5 (70.0, 79.0)\n78.0 (71.0, 82.0)\n\n\nSex\n\n\n\n\n\n\n\n\n\n\n    F\n143 (56.3%)\n53 (61.6%)\n35 (48.6%)\n55 (57.3%)\n\n\n    M\n111 (43.7%)\n33 (38.4%)\n37 (51.4%)\n41 (42.7%)\n\n\nRace\n\n\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (0.4%)\n0 (0.0%)\n1 (1.4%)\n0 (0.0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n23 (9.1%)\n8 (9.3%)\n9 (12.5%)\n6 (6.3%)\n\n\n    WHITE\n230 (90.6%)\n78 (90.7%)\n62 (86.1%)\n90 (93.8%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-table-shells",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-table-shells",
    "title": "gtsummary + ARD",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\ntrial |&gt; \n  ard_stack( \n    .by = trt,\n    ard_continuous(variables = age),\n    ard_categorical(variables = grade),\n    # add this for best-looking tables\n    .attributes = TRUE\n  ) |&gt; \n  update_ard_fmt_fn(stat_names = c(\"mean\", \"sd\", \"min\", \"max\", \"p\"), \n                    fmt_fn = \\(x) \"xx.x\") |&gt; \n  update_ard_fmt_fn(stat_names = \"n\", fmt_fn = \\(x) \"xx\") |&gt; \n  tbl_ard_summary(\n    by = trt,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\"),\n    label = list(age = \"Patient Age, yrs\")\n  ) |&gt; \n  modify_header(all_stat_cols() ~ \"**{level}**  \\nN = xx\")"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-table-shells-output",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-table-shells-output",
    "title": "gtsummary + ARD",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = xx1\nDrug B N = xx1\n\n\n\n\nPatient Age, yrs\n\n\n\n\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Min - Max\nxx.x - xx.x\nxx.x - xx.x\n\n\nGrade\n\n\n\n\n\n\n    I\nxx (xx.x%)\nxx (xx.x%)\n\n\n    II\nxx (xx.x%)\nxx (xx.x%)\n\n\n    III\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-theme-basics",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-theme-basics",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} theme basics",
    "text": "{gtsummary} theme basics\n\nA theme is a set of customization preferences that can be easily set and reused.\nThemes control default settings for existing functions\nThemes control more fine-grained customization not available via arguments or helper functions\nEasily use one of the available themes, or create your own"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-default-theme",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-default-theme",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} default theme",
    "text": "{gtsummary} default theme\n\n\nlibrary(gtsummary)\nreset_gtsummary_theme()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Default Theme\"\n  )\n\n\n\n\n\n\nDefault Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-theme_gtsummary_journal",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-theme_gtsummary_journal",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} theme_gtsummary_journal()",
    "text": "{gtsummary} theme_gtsummary_journal()\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_journal(journal = \"jama\")\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\n    \"Journal Theme (JAMA)\"\n  )\n\n\n\n\n\n\nJournal Theme (JAMA)\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 98\nDrug B N = 102\n\n\n\n\nAge, Median (IQR)\n46 (37 – 60)\n48 (39 – 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response, n (%)\n28 (29)\n33 (34)\n\n\n    Unknown\n3\n4"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-theme_gtsummary_language",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-theme_gtsummary_language",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} theme_gtsummary_language()",
    "text": "{gtsummary} theme_gtsummary_language()\n\n\nreset_gtsummary_theme()\ntheme_gtsummary_language(language = \"zh-tw\")\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  add_p() |&gt; \n  modify_caption(\n    \"Language Theme (Chinese)\"\n  )\n\n\n\n\n\n\nLanguage Theme (Chinese)\n\n\n\n\n\n\n\n\n特色\nDrug A N = 981\nDrug B N = 1021\nP 值2\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n0.7\n\n\n    未知\n7\n4\n\n\n\n\nTumor Response\n28 (29%)\n33 (34%)\n0.5\n\n\n    未知\n3\n4\n\n\n\n\n\n1 中位數 (Q1, Q3); n (%)\n\n\n2 Wilcoxon 排序和檢定; 卡方 獨立性檢定\n\n\n\n\n\n\n\n\nLanguage options:\n\n\n\nGerman\nEnglish\nSpanish\nFrench\nGujarati\nHindi\n\n\n\nIcelandic\nJapanese\nKorean\nMarathi\nDutch\n\n\n\nNorwegian\nPortuguese\nSwedish\nChinese Simplified\nChinese Traditional"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-theme_gtsummary_compact",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-theme_gtsummary_compact",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} theme_gtsummary_compact()",
    "text": "{gtsummary} theme_gtsummary_compact()\n\nreset_gtsummary_theme()\ntheme_gtsummary_compact()\n\ntrial |&gt; \n  tbl_summary(\n    by = trt, \n    include = c(age, response)\n  ) |&gt;\n  modify_caption(\"Compact Theme\")\n\n\n\n\n\nCompact Theme\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = 981\nDrug B N = 1021\n\n\n\n\nAge\n46 (37, 60)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\nReduces padding and font size"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#a-pharma-theme",
    "href": "slides/03-tables-gtsummary/index.html#a-pharma-theme",
    "title": "gtsummary + ARD",
    "section": "A pharma theme?",
    "text": "A pharma theme?\nWhile not yet exported from gtsummary, we can create a theme for tables that look more like what we expect in pharma.\n\nFixed-width font\nContinuous variable summaries default to multi-line\nFunction for rounding percentages includes leading white space\nDefault right alignment on summary statistics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nPlacebo N = 86\nXanomeline Low Dose N = 84\nXanomeline High Dose N = 84\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Median (Q1, Q3)\n76.0 (69.0, 82.0)\n77.5 (71.0, 82.0)\n76.0 (70.5, 80.0)\n\n\n    Mean (SD)\n75.2 (8.6)\n75.7 (8.3)\n74.4 (7.9)\n\n\n    Min - Max\n52.0 - 89.0\n51.0 - 88.0\n56.0 - 88.0\n\n\nAge Group, n (%)\n\n\n\n\n\n\n\n\n    &lt;65\n14 (16.3%)\n8 ( 9.5%)\n11 (13.1%)\n\n\n    65-80\n42 (48.8%)\n47 (56.0%)\n55 (65.5%)\n\n\n    &gt;80\n30 (34.9%)\n29 (34.5%)\n18 (21.4%)\n\n\nFemale, n (%)\n53 (61.6%)\n50 (59.5%)\n40 (47.6%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-set_gtsummary_theme",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-set_gtsummary_theme",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} set_gtsummary_theme()",
    "text": "{gtsummary} set_gtsummary_theme()\n\nset_gtsummary_theme() to use a custom theme.\nSee the {gtsummary} + themes vignette for examples\n\nhttp://www.danieldsjoberg.com/gtsummary/articles/themes.html"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#themes-for-new-functions",
    "href": "slides/03-tables-gtsummary/index.html#themes-for-new-functions",
    "title": "gtsummary + ARD",
    "section": "Themes for new functions",
    "text": "Themes for new functions\n\n\nWe can also use themes to help us write new functions with different default behavior.\nIn pharma we often want tbl_summary(type = all_continuous() ~ \"continuous2\"). That is, continuous summaries to appear on 2+ rows.\nUse the with_gtsummary_theme() function to help here! In the example below, tbl_demographics() wraps tbl_summary() changing some default behavior. (https://github.com/insightsengineering/crane)\n\n\n\ncrane::theme_gtsummary_roche()\n\ncrane::tbl_demographics(\n  cards::ADSL,\n  include = c(AGE, RACE)\n)\n\nCharacteristicN = 254Agen254Mean (SD)75 (8)Median77Min - Max51 - 89Racen254AMERICAN INDIAN OR ALASKA NATIVE1 (0.4%)BLACK OR AFRICAN AMERICAN23 (9.1%)WHITE230 (90.6%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-print-engines-2",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-print-engines-2",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines\nUse any print engine to customize table\n\n\nlibrary(gtsummary)\nlibrary(gt)\ntrial |&gt;\n  select(age, grade) |&gt;\n  tbl_summary() |&gt;\n  as_gt() |&gt;\n  cols_width(label ~ px(300)) |&gt;\n  cols_align(columns = stat_0, \n             align = \"left\")\n\n\n\n\n\n\n\n\nCharacteristic\nN = 2001\n\n\n\n\nAge\n47 (38, 57)\n\n\n    Unknown\n11\n\n\nGrade\n\n\n\n\n    I\n68 (34%)\n\n\n    II\n68 (34%)\n\n\n    III\n64 (32%)\n\n\n\n1 Median (Q1, Q3); n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-website",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-website",
    "title": "gtsummary + ARD",
    "section": "{gtsummary} website",
    "text": "{gtsummary} website\nhttp://www.danieldsjoberg.com/gtsummary/"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#section-2",
    "href": "slides/03-tables-gtsummary/index.html#section-2",
    "title": "gtsummary + ARD",
    "section": "",
    "text": "Package Authors/Contributors\n\nDaniel D. Sjoberg\nJoseph Larmarange\nMichael Curry\nJessica Lavery\nKarissa Whiting\nEmily C. Zabor\nXing Bai\nEsther Drill\nJessica Flynn\nMargie Hannum\nStephanie Lobaugh\nShannon Pileggi\nAmy Tin\nGustavo Zapata Wainberg\n\n\nOther Contributors\n\n@abduazizR, @ablack3, @ABohynDOE, @ABorakati, @adilsonbauhofer, @aghaynes, @ahinton-mmc, @aito123, @akarsteve, @akefley, @albamrt, @albertostefanelli, @alecbiom, @alexandrayas, @alexis-catherine, @AlexZHENGH, @alnajar, @amygimma, @anaavu, @anddis, @andrader, @Andrzej-Andrzej, @angelgar, @arbet003, @arnmayer, @aspina7, @AurelienDasre, @awcm0n, @ayogasekaram, @barretmonchka, @barthelmes, @bc-teixeira, @bcjaeger, @BeauMeche, @benediktclaus, @benwhalley, @berg-michael, @bhattmaulik, @BioYork, @blue-abdur, @brachem-christian, @brianmsm, @browne123, @bwiernik, @bx259, @calebasaraba, @CarolineXGao, @CharlyMarie, @ChongTienGoh, @Chris-M-P, @chrisleitzinger, @cjprobst, @ClaudiaCampani, @clmawhorter, @CodieMonster, @coeusanalytics, @coreysparks, @CorradoLanera, @crystalluckett-sanofi, @ctlamb, @dafxy, @DanChaltiel, @DanielPark-MGH, @davideyre, @davidgohel, @davidkane9, @DavisVaughan, @dax44, @dchiu911, @ddsjoberg, @DeFilippis, @denis-or, @dereksonderegger, @derekstein, @DesiQuintans, @dieuv0, @dimbage, @discoleo, @djbirke, @dmenne, @DrDinhLuong, @edelarua, @edrill, @Eduardo-Auer, @ElfatihHasabo, @emilyvertosick, @eokoshi, @ercbk, @eremingt, @erikvona, @eugenividal, @eweisbrod, @fdehrich, @feizhadj, @fh-jsnider, @fh-mthomson, @FrancoisGhesquiere, @ge-generation, @Generalized, @ghost, @giorgioluciano, @giovannitinervia9, @gjones1219, @gorkang, @GuiMarthe, @gungorMetehan, @hass91, @hescalar, @HichemLa, @hichew22, @hr70, @huftis, @hughjonesd, @iaingallagher, @ilyamusabirov, @IndrajeetPatil, @irene9116, @IsadoraBM, @j-tamad, @jalavery, @jaromilfrossard, @JBarsotti, @jbtov, @jeanmanguy, @jemus42, @jenifav, @jennybc, @JeremyPasco, @jerrodanzalone, @JesseRop, @jflynn264, @jhchou, @jhelvy, @jhk0530, @jjallaire, @jkylearmstrong, @jmbarajas, @jmbarbone, @JoanneF1229, @joelgautschi, @johnryan412, @JohnSodling, @jonasrekdalmathisen, @JonGretar, @jordan49er, @jsavinc, @jthomasmock, @juseer, @jwilliman, @karissawhiting, @karl-an, @kendonB, @kentm4, @klh281, @kmdono02, @kristyrobledo, @kwakuduahc1, @lamberp6, @lamhine, @larmarange, @ledermanr, @leejasme, @leslem, @levossen, @lngdet, @longjp, @lorenzoFabbri, @loukesio, @love520lfh, @lspeetluk, @ltin1214, @ltj-github, @lucavd, @LucyMcGowan, @LuiNov, @lukejenner6, @maciekbanas, @maia-sh, @malcolmbarrett, @mariamaseng, @Marsus1972, @martsobm, @Mathicaa, @matthieu-faron, @maxanes, @mayazadok2, @mbac, @mdidish, @medewitt, @meenakshi-kushwaha, @melindahiggins2000, @MelissaAssel, @Melkiades, @mfansler, @michaelcurry1123, @mikemazzucco, @mlamias, @mljaniczek, @moleps, @monitoringhsd, @motocci, @mrmvergeer, @msberends, @mvuorre, @myamortor, @myensr, @MyKo101, @nalimilan, @ndunnewind, @nikostr, @ningyile, @O16789, @oliviercailloux, @oranwutang, @palantre, @parmsam, @Pascal-Schmidt, @PaulC91, @paulduf, @pedersebastian, @perlatex, @pgseye, @philippemichel, @philsf, @polc1410, @Polperobis, @postgres-newbie, @proshano, @raphidoc, @RaviBot, @rawand-hanna, @rbcavanaugh, @remlapmot, @rich-iannone, @RiversPharmD, @rmgpanw, @roaldarbol, @roman2023, @ryzhu75, @s-j-choi, @sachijay, @saifelayan, @sammo3182, @samrodgersmelnick, @samuele-mercan, @sandhyapc, @sbalci, @sda030, @shah-in-boots, @shannonpileggi, @shaunporwal, @shengchaohou, @ShixiangWang, @simonpcouch, @slb2240, @slobaugh, @spiralparagon, @Spring75xx, @StaffanBetner, @steenharsted, @stenw, @Stephonomon, @storopoli, @stratopopolis, @strengejacke, @szimmer, @tamytsujimoto, @TAOS25, @TarJae, @themichjam, @THIB20, @tibirkrajc, @tjmeyers, @tldrcharlene, @tormodb, @toshifumikuroda, @TPDeramus, @UAB-BST-680, @uakimix, @uriahf, @Valja64, @viola-hilbert, @violet-nova, @vvm02, @will-gt, @xkcococo, @xtimbeau, @yatirbe, @yihunzeleke, @yonicd, @yoursdearboy, @YousufMohammed2002, @yuryzablotski, @zabore, @zachariae, @zaddyzad, @zawkzaw, @zdz2101, @zeyunlu, @zhangkaicr, @zhaohongxin0, @zheer-kejlberg, @zhengnow, @zhonghua723, @zlkrvsm, @zongell-star, and @Zoulf001."
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#thank-you",
    "href": "slides/03-tables-gtsummary/index.html#thank-you",
    "title": "gtsummary + ARD",
    "section": "Thank you",
    "text": "Thank you\n\n\n\n Ask on stackoverflow.com\n Use the gtsummary tag\n Thousands of posts!\n\n danieldsjoberg.com\n mastodon.social/@ddsjoberg\n linkedin.com/in/ddsjoberg/\n github.com/ddsjoberg"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html",
    "href": "slides/04-tables-tfrmt/tfrmt.html",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "",
    "text": "Metadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "href": "slides/04-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "",
    "text": "Metadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "href": "slides/04-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "href": "slides/04-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = d_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n Removing `value` from input data for mocking.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "href": "slides/04-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = d_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "href": "slides/04-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = d_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "href": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "href": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "href": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "href": "slides/04-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#saving-display",
    "href": "slides/04-tables-tfrmt/tfrmt.html#saving-display",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Saving display",
    "text": "Saving display\n\ntfrmt::print_to_gt() creates a {gt} object under the hood\nYou can export the table to a variety of formats using gt::gt_save()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "href": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n\n{cards} includes a helper function shuffle_ard() to transform native {cards} output to display-ready data\nThis is also available as an argument .shuffle in ard_stack()\n\n\n\nlibrary(cards)\n\npharmaverseadam::adsl |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  )\n\n{cards} data frame: 48 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33\n\n\nℹ 38 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt-1",
    "href": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n{cards} includes a helper function rename_ard_columns() to transform native {cards} output to display-ready data\n\n\nlibrary(cards)\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  ) |&gt; \n   rename_ard_columns(columns = all_ard_groups(),\n                      unlist = c(\"variable_level\", \"stat\")) |&gt; \n  dplyr::select(-c(fmt_fn, warning, error))\n\n# A tibble: 36 × 7\n   TRT01A  variable variable_level context     stat_name stat_label   stat\n   &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;       &lt;dbl&gt;\n 1 Placebo AGEGR1   &gt;64            categorical n         n          72    \n 2 Placebo AGEGR1   &gt;64            categorical N         N          86    \n 3 Placebo AGEGR1   &gt;64            categorical p         %           0.837\n 4 Placebo AGEGR1   18-64          categorical n         n          14    \n 5 Placebo AGEGR1   18-64          categorical N         N          86    \n 6 Placebo AGEGR1   18-64          categorical p         %           0.163\n 7 Placebo SEX      F              categorical n         n          53    \n 8 Placebo SEX      F              categorical N         N          86    \n 9 Placebo SEX      F              categorical p         %           0.616\n10 Placebo SEX      M              categorical n         n          33    \n# ℹ 26 more rows"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt-2",
    "href": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt-2",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n{cards} includes a helper function rename_ard_columns() to transform native {cards} output to display-ready data\n\n\nlibrary(cards)\nlibrary(tfrmt)\n\nmy_ard &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  ) |&gt; \n   rename_ard_columns(columns = all_ard_groups(),\n                      unlist = c(\"variable_level\", \"stat\")) |&gt; \n  dplyr::select(-c(fmt_fn, warning, error)) |&gt; \n  dplyr::filter(stat_name %in% c(\"n\",\"p\")) |&gt; \n  dplyr::select(-c(context, stat_label))\n\ntfrmt(\n  group = variable,\n  label = variable_level ,\n  column = TRT01A,\n  param = stat_name,\n  value = stat,\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", \n                   label_val = \".default\", \n                   frmt_combine(\"{n} ({p}%)\",\n                                n = frmt(\"xx\"),\n                                p = frmt(\"xx\", \n                                         transform = ~.*100)))\n  )\n) |&gt; \n  print_to_gt(my_ard)|&gt; \n  gt_style_slides()|&gt; \n    gt::tab_options(\n      table.font.size = 15\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlacebo\nXanomeline High Dose\nXanomeline Low Dose\n\n\n\n\nAGEGR1\n\n\n\n\n\n\n\n\n  &gt;64\n72 (84%)\n61 (85%)\n88 (92%)\n\n\n  18-64\n14 (16%)\n11 (15%)\n 8 ( 8%)\n\n\nSEX\n\n\n\n\n\n\n\n\n  F\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n  M\n33 (38%)\n37 (51%)\n41 (43%)"
  }
]