[
  {
    "objectID": "slides/04-tables-tfrmt/wrapup.html",
    "href": "slides/04-tables-tfrmt/wrapup.html",
    "title": "Workshop recap",
    "section": "",
    "text": "Introduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}\n\n\n\n\n\n{cards}: https://insightsengineering.github.io/cards/\n{cardx}: https://insightsengineering.github.io/cardx/\n{gtsummary}: https://www.danieldsjoberg.com/gtsummary/\n{tfrmt}: https://gsk-biostatistics.github.io/tfrmt/\n{tfrmtbuilder}: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/04-tables-tfrmt/wrapup.html#workshop-recap-1",
    "href": "slides/04-tables-tfrmt/wrapup.html#workshop-recap-1",
    "title": "Workshop recap",
    "section": "",
    "text": "Introduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/wrapup.html#learning-more",
    "href": "slides/04-tables-tfrmt/wrapup.html#learning-more",
    "title": "Workshop recap",
    "section": "",
    "text": "{cards}: https://insightsengineering.github.io/cards/\n{cardx}: https://insightsengineering.github.io/cardx/\n{gtsummary}: https://www.danieldsjoberg.com/gtsummary/\n{tfrmt}: https://gsk-biostatistics.github.io/tfrmt/\n{tfrmtbuilder}: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#workshop-outline",
    "href": "slides/04-tables-tfrmt/index.html#workshop-outline",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Workshop outline",
    "text": "Workshop outline\n\n\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "href": "slides/04-tables-tfrmt/index.html#ard-first-tables-with-tfrmt",
    "title": "ARD to Tables with {tfrmt}",
    "section": "ARD-first Tables with {tfrmt}",
    "text": "ARD-first Tables with {tfrmt}\n\n\n\n\n\n\n\n\n\nMetadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}\nYou can export the table to a variety of formats using gt::gt_save()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#the-tfrmt-object",
    "href": "slides/04-tables-tfrmt/index.html#the-tfrmt-object",
    "title": "ARD to Tables with {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "href": "slides/04-tables-tfrmt/index.html#use-1-study-planning-mocks",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = d_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#use-2-final-analysis",
    "href": "slides/04-tables-tfrmt/index.html#use-2-final-analysis",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = d_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "href": "slides/04-tables-tfrmt/index.html#use-3-repurposed-final-table",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = d_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#templates-the-possibilities",
    "href": "slides/04-tables-tfrmt/index.html#templates-the-possibilities",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-1",
    "href": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-1",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-2",
    "href": "slides/04-tables-tfrmt/index.html#templates-the-possibilities-2",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#save-metadata-for-reuse",
    "href": "slides/04-tables-tfrmt/index.html#save-metadata-for-reuse",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt",
    "href": "slides/04-tables-tfrmt/index.html#cards-to-tfrmt",
    "title": "ARD to Tables with {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n{cards} includes a helper function rename_ard_columns() to transform native {cards} output to display-ready data\n\n\n\nlibrary(cards)\nlibrary(tfrmt)\n\nmy_ard &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  ) |&gt; \n   rename_ard_columns(columns = all_ard_groups(),\n                      unlist = c(\"variable_level\", \"stat\")) |&gt; \n  dplyr::select(-c(fmt_fn, warning, error)) |&gt; \n  dplyr::filter(stat_name %in% c(\"n\",\"p\")) |&gt; \n  dplyr::select(-c(context, stat_label))\n\ntfrmt(\n  group = variable,\n  label = variable_level ,\n  column = TRT01A,\n  param = stat_name,\n  value = stat,\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", \n                   label_val = \".default\", \n                   frmt_combine(\"{n} ({p}%)\",\n                                n = frmt(\"xx\"),\n                                p = frmt(\"xx\", \n                                         transform = ~.*100)))\n  )\n) |&gt; \n  print_to_gt(my_ard)|&gt; \n  gt_style_slides()|&gt; \n    gt::tab_options(\n      table.font.size = 15\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlacebo\nXanomeline High Dose\nXanomeline Low Dose\n\n\n\n\nAGEGR1\n\n\n\n\n\n\n\n\n  &gt;64\n72 (84%)\n61 (85%)\n88 (92%)\n\n\n  18-64\n14 (16%)\n11 (15%)\n 8 ( 8%)\n\n\nSEX\n\n\n\n\n\n\n\n\n  F\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n  M\n33 (38%)\n37 (51%)\n41 (43%)"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#workshop-recap-1",
    "href": "slides/04-tables-tfrmt/index.html#workshop-recap-1",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Workshop recap",
    "text": "Workshop recap\n\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#learning-more",
    "href": "slides/04-tables-tfrmt/index.html#learning-more",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Learning more",
    "text": "Learning more\n\n{cards}: https://insightsengineering.github.io/cards/\n{cardx}: https://insightsengineering.github.io/cardx/\n{gtsummary}: https://www.danieldsjoberg.com/gtsummary/\n{tfrmt}: https://gsk-biostatistics.github.io/tfrmt/\n{tfrmtbuilder}: https://gsk-biostatistics.github.io/tfrmtbuilder/"
  },
  {
    "objectID": "slides/04-tables-tfrmt/index.html#thank-you-for-coming",
    "href": "slides/04-tables-tfrmt/index.html#thank-you-for-coming",
    "title": "ARD to Tables with {tfrmt}",
    "section": "Thank you for coming! 🎉",
    "text": "Thank you for coming! 🎉"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#workshop-outline",
    "href": "slides/02-intro-cardx/index.html#workshop-outline",
    "title": "{cardx} & other extras",
    "section": "Workshop outline",
    "text": "Workshop outline"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#workshop-outline-1",
    "href": "slides/02-intro-cardx/index.html#workshop-outline-1",
    "title": "{cardx} & other extras",
    "section": "Workshop outline",
    "text": "Workshop outline\n\nIntroduction to the Analysis Results Standard and ARDs with {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx",
    "href": "slides/02-intro-cardx/index.html#cardx",
    "title": "{cardx} & other extras",
    "section": "{cardx}",
    "text": "{cardx}\n\nExtension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-1",
    "href": "slides/02-intro-cardx/index.html#cardx-1",
    "title": "{cardx} & other extras",
    "section": "{cardx}",
    "text": "{cardx}\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-t-test-example",
    "href": "slides/02-intro-cardx/index.html#cardx-t-test-example",
    "title": "{cardx} & other extras",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAlso includes function inputs; useful for re-use, e.g. we record we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-t-test-example-1",
    "href": "slides/02-intro-cardx/index.html#cardx-t-test-example-1",
    "title": "{cardx} & other extras",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_continuous(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fn\n1      AGE t_test_o…    estimate   estimate    75.024      1\n2      AGE t_test_o…   statistic  statistic     120.2      1\n3      AGE t_test_o…     p.value    p.value         0      1\n4      AGE t_test_o…   parameter  parameter       167      1\n5      AGE t_test_o…    conf.low   conf.low    73.792      1\n6      AGE t_test_o…   conf.high  conf.high    76.256      1\n7      AGE t_test_o…      method     method One Samp…   &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-t-test-example-2",
    "href": "slides/02-intro-cardx/index.html#cardx-t-test-example-2",
    "title": "{cardx} & other extras",
    "section": "{cardx} t-test Example",
    "text": "{cardx} t-test Example\n\nUpdate code for a two-sample t-test\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_complex(\n    variables = AGE,\n    statistic = ~ list(t_test = \\(x, data, ...) broom::tidy(t.test(x ~ data$ARM)))\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#building-your-own-ard-functions",
    "href": "slides/02-intro-cardx/index.html#building-your-own-ard-functions",
    "title": "{cardx} & other extras",
    "section": "Building your own ARD functions",
    "text": "Building your own ARD functions\nSee the full vignette for details on creating both one-off ARDs and functions for creating ARDs."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-regression",
    "href": "slides/02-intro-cardx/index.html#cardx-regression",
    "title": "{cardx} & other extras",
    "section": "{cardx} Regression",
    "text": "{cardx} Regression\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), tidycmprsk::crr(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-regression-example",
    "href": "slides/02-intro-cardx/index.html#cardx-regression-example",
    "title": "{cardx} & other extras",
    "section": "{cardx} Regression Example",
    "text": "{cardx} Regression Example\n\nlibrary(survival)\nlibrary(gtsummary)\n\n# build model\nmod &lt;- pharmaverseadam::adtte_onco |&gt; \n  dplyr::filter(PARAM %in% \"Progression Free Survival\") |&gt;\n  coxph(ggsurvfit::Surv_CNSR() ~ ARM + AGE, data = _)\n\n# put model in a summary table\ntbl &lt;- tbl_regression(mod, exponentiate = TRUE) |&gt; \n  add_n(location = c('label', 'level')) |&gt; \n  add_nevent(location = c('label', 'level')) |&gt; \n  bold_labels()\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nEvent N\nHR\n95% CI\np-value\n\n\n\n\nDescription of Planned Arm\n254\n6\n\n\n\n\n\n\n\n\n    Placebo\n86\n3\n—\n—\n\n\n\n\n    Xanomeline High Dose\n84\n2\n1.94\n0.27, 14.1\n0.5\n\n\n    Xanomeline Low Dose\n84\n1\n0.65\n0.06, 7.47\n0.7\n\n\nAge\n254\n6\n1.10\n0.95, 1.29\n0.2\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#cardx-regression-example-1",
    "href": "slides/02-intro-cardx/index.html#cardx-regression-example-1",
    "title": "{cardx} & other extras",
    "section": "{cardx} Regression Example",
    "text": "{cardx} Regression Example\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more."
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#when-things-go-wrong",
    "href": "slides/02-intro-cardx/index.html#when-things-go-wrong",
    "title": "{cardx} & other extras",
    "section": "When things go wrong 😱",
    "text": "When things go wrong 😱\nWhat happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_continuous(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fn\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#mock-ards",
    "href": "slides/02-intro-cardx/index.html#mock-ards",
    "title": "{cardx} & other extras",
    "section": "Mock ARDs",
    "text": "Mock ARDs\nLike mock tables, mock ARDs are often useful\n\ncards::bind_ard(\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\"))),\n  cards::mock_continuous(variables = \"AGE\")\n) |&gt; \n  cards::apply_fmt_fn()\n\n{cards} data frame: 14 x 10\n\n\n   variable variable_level stat_name stat_label stat stat_fmt\n1    AGEGR1            &lt;65         n          n            xx\n2    AGEGR1            &lt;65         p          %          xx.x\n3    AGEGR1            &lt;65         N          N            xx\n4    AGEGR1           &gt;=65         n          n            xx\n5    AGEGR1           &gt;=65         p          %          xx.x\n6    AGEGR1           &gt;=65         N          N            xx\n7       AGE                        N          N            xx\n8       AGE                     mean       Mean          xx.x\n9       AGE                       sd         SD          xx.x\n10      AGE                   median     Median          xx.x\n11      AGE                      p25         Q1          xx.x\n12      AGE                      p75         Q3          xx.x\n13      AGE                      min        Min          xx.x\n14      AGE                      max        Max          xx.x\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#mock-ards-1",
    "href": "slides/02-intro-cardx/index.html#mock-ards-1",
    "title": "{cardx} & other extras",
    "section": "Mock ARDs",
    "text": "Mock ARDs\n\ncards::bind_ard(\n  cards::mock_continuous(variables = \"AGE\", \n                         by = list(ARM = c(\"Drug A\", \"Drug B\"))),\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\")),\n                          by = list(ARM = c(\"Drug A\", \"Drug B\")))\n) |&gt; \n  gtsummary::tbl_ard_summary(\n    by = ARM,\n    type  = AGE ~ \"continuous2\",\n    statistic = AGE ~ c(\"{N}\", \"{mean} ({sd})\", \"{median} ({p25}, {p75})\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\nAGE\n\n\n\n\n\n\n    N\nxx\nxx\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Median (Q1, Q3)\nxx.x (xx.x, xx.x)\nxx.x (xx.x, xx.x)\n\n\nAGEGR1\n\n\n\n\n\n\n    &lt;65\nxx (xx.x%)\nxx (xx.x%)\n\n\n    &gt;=65\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/02-intro-cardx/index.html#other-ard-representations",
    "href": "slides/02-intro-cardx/index.html#other-ard-representations",
    "title": "{cardx} & other extras",
    "section": "Other ARD Representations",
    "text": "Other ARD Representations\nWhile the data frame-based ARD is easy to work with, language-agnostic representations are often useful.\n\n\nYAML\n\ncards::as_nested_list(ard) |&gt; \n  yaml::as.yaml() |&gt; \n  cat()\n\nvariable:\n  AGE:\n    group1:\n      ARM:\n        group1_level:\n          Placebo:\n            stat_name:\n              'N':\n                stat: 86\n                stat_fmt: '86'\n                warning: ~\n                error: ~\n                context: continuous\n              mean:\n                stat: 75.2093023\n...\n\n\n\nJSON\n\ncards::as_nested_list(ard) |&gt; \n  jsonlite::toJSON(pretty = TRUE)\n\n{\n  \"variable\": {\n    \"AGE\": {\n      \"group1\": {\n        \"ARM\": {\n          \"group1_level\": {\n            \"Placebo\": {\n              \"stat_name\": {\n                \"N\": {\n                  \"stat\": [86],\n                  \"stat_fmt\": [\"86\"],\n                  \"warning\": {},\n                  \"error\": {},\n                  \"context\": [\"continuous\"]\n                },\n..."
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html",
    "href": "slides/02-intro-cardx/01-cardx.html",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Extension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods.\n\n\n\n\n\n\n\n\n\n\nExports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱\n\n\n\n\n\n\nWe see the results like the mean difference, the confidence interval, and p-value as expected.\nAlso includes function inputs; useful for re-use, e.g. we record we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\n\n\nWhat to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_continuous(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fn\n1      AGE t_test_o…    estimate   estimate    75.024      1\n2      AGE t_test_o…   statistic  statistic     120.2      1\n3      AGE t_test_o…     p.value    p.value         0      1\n4      AGE t_test_o…   parameter  parameter       167      1\n5      AGE t_test_o…    conf.low   conf.low    73.792      1\n6      AGE t_test_o…   conf.high  conf.high    76.256      1\n7      AGE t_test_o…      method     method One Samp…   &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\nUpdate code for a two-sample t-test\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_complex(\n    variables = AGE,\n    statistic = ~ list(t_test = \\(x, data, ...) broom::tidy(t.test(x ~ data$ARM)))\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fn, warning, error\n\n\n\n\n\nSee the full vignette for details on creating both one-off ARDs and functions for creating ARDs.\n\n\n\n\n\nIncludes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), tidycmprsk::crr(), VGAM::vglm() (and more)\n\n\n\n\n\nlibrary(survival)\nlibrary(gtsummary)\n\n# build model\nmod &lt;- pharmaverseadam::adtte_onco |&gt; \n  dplyr::filter(PARAM %in% \"Progression Free Survival\") |&gt;\n  coxph(ggsurvfit::Surv_CNSR() ~ ARM + AGE, data = _)\n\n# put model in a summary table\ntbl &lt;- tbl_regression(mod, exponentiate = TRUE) |&gt; \n  add_n(location = c('label', 'level')) |&gt; \n  add_nevent(location = c('label', 'level')) |&gt; \n  bold_labels()\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nEvent N\nHR\n95% CI\np-value\n\n\n\n\nDescription of Planned Arm\n254\n6\n\n\n\n\n\n\n\n\n    Placebo\n86\n3\n—\n—\n\n\n\n\n    Xanomeline High Dose\n84\n2\n1.94\n0.27, 14.1\n0.5\n\n\n    Xanomeline Low Dose\n84\n1\n0.65\n0.06, 7.47\n0.7\n\n\nAge\n254\n6\n1.10\n0.95, 1.29\n0.2\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio\n\n\n\n\n\n\n\n\n\n\n\nThe cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more."
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Extension of the {cards} package, providing additional functions to create Analysis Results Datasets (ARDs)\nThe {cardx} package exports many ard_*() function for statistical methods."
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-1",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-1",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Exports ARD frameworks for statistical analyses from many packages\n\n\n  - {stats}\n  - {car}\n  - {effectsize}\n  - {emmeans}\n  - {geepack}\n  - {lme4}\n  - {parameters}\n  - {smd}\n  - {survey}\n  - {survival}\n\n\nThis list is growing (rather quickly) 🌱"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "We see the results like the mean difference, the confidence interval, and p-value as expected.\nAlso includes function inputs; useful for re-use, e.g. we record we did not use equal variances.\n\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cardx::ard_stats_t_test(by = ARM, variables = AGE)\n\n{cards} data frame: 14 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE stats_t_…    estimate  Mean Dif…    -1.286\n2     ARM      AGE stats_t_…   estimate1  Group 1 …    74.381\n3     ARM      AGE stats_t_…   estimate2  Group 2 …    75.667\n4     ARM      AGE stats_t_…   statistic  t Statis…     -1.03\n5     ARM      AGE stats_t_…     p.value    p-value     0.304\n6     ARM      AGE stats_t_…   parameter  Degrees …   165.595\n7     ARM      AGE stats_t_…    conf.low  CI Lower…     -3.75\n8     ARM      AGE stats_t_…   conf.high  CI Upper…     1.179\n9     ARM      AGE stats_t_…      method     method Welch Tw…\n10    ARM      AGE stats_t_… alternative  alternat… two.sided\n11    ARM      AGE stats_t_…          mu    H0 Mean         0\n12    ARM      AGE stats_t_…      paired  Paired t…     FALSE\n13    ARM      AGE stats_t_…   var.equal  Equal Va…     FALSE\n14    ARM      AGE stats_t_…  conf.level  CI Confi…      0.95\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-1",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-1",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "What to do if a method you need is not implemented?\nIt’s simple to wrap existing frameworks to customize.\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_continuous(\n    variables = AGE,\n    statistic = everything() ~ list(t_test = \\(x) t.test(x) |&gt; broom::tidy())\n  ) |&gt; \n  dplyr::mutate(context = \"t_test_one_sample\")\n\n{cards} data frame: 8 x 8\n\n\n  variable   context   stat_name stat_label      stat fmt_fn\n1      AGE t_test_o…    estimate   estimate    75.024      1\n2      AGE t_test_o…   statistic  statistic     120.2      1\n3      AGE t_test_o…     p.value    p.value         0      1\n4      AGE t_test_o…   parameter  parameter       167      1\n5      AGE t_test_o…    conf.low   conf.low    73.792      1\n6      AGE t_test_o…   conf.high  conf.high    76.256      1\n7      AGE t_test_o…      method     method One Samp…   &lt;fn&gt;\n8      AGE t_test_o… alternative  alternat… two.sided   &lt;fn&gt;\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-2",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-t-test-example-2",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Update code for a two-sample t-test\n\n\npharmaverseadam::adsl |&gt; \n  dplyr::filter(ARM %in% c(\"Xanomeline High Dose\", \"Xanomeline Low Dose\")) |&gt;\n  cards::ard_complex(\n    variables = AGE,\n    statistic = ~ list(t_test = \\(x, data, ...) broom::tidy(t.test(x ~ data$ARM)))\n  ) |&gt; \n  dplyr::mutate(group1 = \"ARM\", context = \"t_test_two_sample\") |&gt; \n  cards::tidy_ard_column_order()\n\n{cards} data frame: 10 x 9\n\n\n   group1 variable   context   stat_name stat_label      stat\n1     ARM      AGE t_test_t…    estimate   estimate    -1.286\n2     ARM      AGE t_test_t…   estimate1  estimate1    74.381\n3     ARM      AGE t_test_t…   estimate2  estimate2    75.667\n4     ARM      AGE t_test_t…   statistic  statistic     -1.03\n5     ARM      AGE t_test_t…     p.value    p.value     0.304\n6     ARM      AGE t_test_t…   parameter  parameter   165.595\n7     ARM      AGE t_test_t…    conf.low   conf.low     -3.75\n8     ARM      AGE t_test_t…   conf.high  conf.high     1.179\n9     ARM      AGE t_test_t…      method     method Welch Tw…\n10    ARM      AGE t_test_t… alternative  alternat… two.sided\n\n\nℹ 3 more variables: fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#building-your-own-ard-functions",
    "href": "slides/02-intro-cardx/01-cardx.html#building-your-own-ard-functions",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "See the full vignette for details on creating both one-off ARDs and functions for creating ARDs."
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-regression",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-regression",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "Includes functionality to summarize nearly every type of regression model in the R ecosystem:\n\n\nbetareg::betareg(), biglm::bigglm(), brms::brm(), cmprsk::crr(), fixest::feglm(), fixest::femlm(), fixest::feNmlm(), fixest::feols(), gam::gam(), geepack::geeglm(), glmmTMB::glmmTMB(), glmtoolbox::glmgee(), lavaan::lavaan(), lfe::felm(), lme4::glmer.nb(), lme4::glmer(), lme4::lmer(), logitr::logitr(), MASS::glm.nb(), MASS::polr(), mgcv::gam(), mice::mira, mmrm::mmrm(), multgee::nomLORgee(), multgee::ordLORgee(), nnet::multinom(), ordinal::clm(), ordinal::clmm(), parsnip::model_fit, plm::plm(), pscl::hurdle(), pscl::zeroinfl(), rstanarm::stan_glm(), stats::aov(), stats::glm(), stats::lm(), stats::nls(), survey::svycoxph(), survey::svyglm(), survey::svyolr(), survival::cch(), survival::clogit(), survival::coxph(), survival::survreg(), tidycmprsk::crr(), VGAM::vglm() (and more)"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "library(survival)\nlibrary(gtsummary)\n\n# build model\nmod &lt;- pharmaverseadam::adtte_onco |&gt; \n  dplyr::filter(PARAM %in% \"Progression Free Survival\") |&gt;\n  coxph(ggsurvfit::Surv_CNSR() ~ ARM + AGE, data = _)\n\n# put model in a summary table\ntbl &lt;- tbl_regression(mod, exponentiate = TRUE) |&gt; \n  add_n(location = c('label', 'level')) |&gt; \n  add_nevent(location = c('label', 'level')) |&gt; \n  bold_labels()\n\n\n\n\n\n\n\n\n\nCharacteristic\nN\nEvent N\nHR\n95% CI\np-value\n\n\n\n\nDescription of Planned Arm\n254\n6\n\n\n\n\n\n\n\n\n    Placebo\n86\n3\n—\n—\n\n\n\n\n    Xanomeline High Dose\n84\n2\n1.94\n0.27, 14.1\n0.5\n\n\n    Xanomeline Low Dose\n84\n1\n0.65\n0.06, 7.47\n0.7\n\n\nAge\n254\n6\n1.10\n0.95, 1.29\n0.2\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example-1",
    "href": "slides/02-intro-cardx/01-cardx.html#cardx-regression-example-1",
    "title": "{cardx} (read: extra cards)",
    "section": "",
    "text": "The cardx::ard_regression() does a lot for us in the background.\n\nIdentifies the variable from the regression terms (i.e. groups levels of the same variable)\nIdentifies reference groups from categorical covariates\nFinds variable labels from the source data frames\nKnows the total N of the model, the number of events, and can do the same for each level of categorical variables\nContextually aware of slopes, odds ratios, hazard ratios, and incidence rate ratios\nAnd much much more."
  },
  {
    "objectID": "slides/01-intro-cards/index.html#this-workshop-is-brought-to-you-by",
    "href": "slides/01-intro-cards/index.html#this-workshop-is-brought-to-you-by",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "This workshop is brought to you by:",
    "text": "This workshop is brought to you by:"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#instructors",
    "href": "slides/01-intro-cards/index.html#instructors",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Instructors",
    "text": "Instructors\n\n\n\n\n\n\nDaniel Sjoberg, Genentech\n\n\n\n\n\n\nBecca Krouse, GSK\n\n\n\nWho are we?\nWhat do we do?\nWhy are we here?"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#workshop-outline",
    "href": "slides/01-intro-cards/index.html#workshop-outline",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Workshop outline",
    "text": "Workshop outline\n\nIntroduction to the Analysis Results Standard and ARDs with {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#this-workshop-is-for-you-if",
    "href": "slides/01-intro-cards/index.html#this-workshop-is-for-you-if",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "This workshop is for you if…",
    "text": "This workshop is for you if…\n\nYou want to learn about ARDs\nYou want to learn about new tools for working with ARDs\nYou want to learn about new tools for making displays from ARDs\nFamiliarity with R helpful (but not required!)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars-1",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\n\n\nEmerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars-2",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars-2",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-standard-ars-3",
    "href": "slides/01-intro-cards/index.html#analysis-results-standard-ars-3",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-data-ard",
    "href": "slides/01-intro-cards/index.html#analysis-results-data-ard",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#analysis-results-data-ard-1",
    "href": "slides/01-intro-cards/index.html#analysis-results-data-ard-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/01-intro-cards/index.html#a-few-notes-about-ards",
    "href": "slides/01-intro-cards/index.html#a-few-notes-about-ards",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\n\nRethinking QC\n\nQC can be focused on the raw and/or formatted values\n\nOptionnally, you don’t need to spend time trying to match formatted values\nNote: QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-introduction",
    "href": "slides/01-intro-cards/index.html#cards-introduction",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Introduction",
    "text": "{cards}: Introduction\n\nPart of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, and Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n52K downloads per month 🤯"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous()",
    "text": "{cards}: ard_continuous()\n\nlibrary(cards)\n\n# create ARD with default summary statistics\nADSL |&gt; \n  ard_continuous(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable   context stat_name stat_label   stat fmt_fn\n1      AGE continuo…         N          N    254      0\n2      AGE continuo…      mean       Mean 75.087      1\n3      AGE continuo…        sd         SD  8.246      1\n4      AGE continuo…    median     Median     77      1\n5      AGE continuo…       p25         Q1     70      1\n6      AGE continuo…       p75         Q3     81      1\n7      AGE continuo…       min        Min     51      1\n8      AGE continuo…       max        Max     89      1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-by-variable",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-by-variable",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() by variable",
    "text": "{cards}: ard_continuous() by variable\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 24 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Xanomeli…      AGE         N          N     84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() statistics",
    "text": "{cards}: ard_continuous() statistics\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nADSL |&gt; \n  ard_continuous(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Xanomeli…      AGE        cv         cv 0.106\n3    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics-1",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-statistics-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() statistics",
    "text": "{cards}: ard_continuous() statistics\n\nCustomize the statistics returned for each variable\n\n\nADSL |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_continuous(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 9 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1    ARM      Placebo      AGE        cv         cv  0.114\n2    ARM      Placebo     AGE2      mean       Mean 75.209\n3    ARM      Placebo     AGE2    median     Median     76\n4    ARM    Xanomeli…      AGE        cv         cv  0.106\n5    ARM    Xanomeli…     AGE2      mean       Mean 74.381\n6    ARM    Xanomeli…     AGE2    median     Median     76\n7    ARM    Xanomeli…      AGE        cv         cv   0.11\n8    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n9    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_continuous-fmt_fn",
    "href": "slides/01-intro-cards/index.html#cards-ard_continuous-fmt_fn",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_continuous() fmt_fn",
    "text": "{cards}: ard_continuous() fmt_fn\n\nOverride the default formatting functions\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fn(stat_names = \"mean\", fmt_fn = 0) |&gt; \n  apply_fmt_fn() \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_categorical",
    "href": "slides/01-intro-cards/index.html#cards-ard_categorical",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_categorical()",
    "text": "{cards}: ard_categorical()\n\n\nincludes n, %, N by default\n\n\n\nADSL |&gt; \n  ard_categorical(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 27 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &lt;65         n          n    14\n2     ARM      Placebo   AGEGR1            &lt;65         N          N    86\n3     ARM      Placebo   AGEGR1            &lt;65         p          % 0.163\n4     ARM      Placebo   AGEGR1            &gt;80         n          n    30\n5     ARM      Placebo   AGEGR1            &gt;80         N          N    86\n6     ARM      Placebo   AGEGR1            &gt;80         p          % 0.349\n7     ARM      Placebo   AGEGR1          65-80         n          n    42\n8     ARM      Placebo   AGEGR1          65-80         N          N    86\n9     ARM      Placebo   AGEGR1          65-80         p          % 0.488\n10    ARM    Xanomeli…   AGEGR1            &lt;65         n          n    11\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-other-summary-functions",
    "href": "slides/01-intro-cards/index.html#cards-other-summary-functions",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Other Summary Functions",
    "text": "{cards}: Other Summary Functions\n\nard_dichotomous(): similar to ard_categorical(), but for dichotomous summaries\nard_hierarchical(): similar to ard_categorical(), but built for nested tabulations, e.g. AE terms within SOC\nard_complex(): similar to ard_continuous(), but the summary functions can be more complex and accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞🥞🥞"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-other-functions",
    "href": "slides/01-intro-cards/index.html#cards-other-functions",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Other Functions",
    "text": "{cards}: Other Functions\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: rename_ard_columns(), get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-stacking-utilities",
    "href": "slides/01-intro-cards/index.html#cards-stacking-utilities",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Stacking utilities",
    "text": "{cards}: Stacking utilities\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nADSL |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_continuous(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_categorical(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &lt;65         p          %  0.163\n4     ARM      Placebo   AGEGR1            &gt;80         p          %  0.349\n5     ARM      Placebo   AGEGR1          65-80         p          %  0.488\n6     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n7     ARM    Xanomeli…      AGE                       sd         SD  7.886\n8     ARM    Xanomeli…   AGEGR1            &lt;65         p          %  0.131\n9     ARM    Xanomeli…   AGEGR1            &gt;80         p          %  0.214\n10    ARM    Xanomeli…   AGEGR1          65-80         p          %  0.655\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-1",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-2",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-2",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGE, BMI, HEIGHT, WEIGHT)\n)\n\n{cards} data frame: 96 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1  TRT01A      Placebo      AGE         N          N     86\n2  TRT01A      Placebo      AGE      mean       Mean 75.209\n3  TRT01A      Placebo      AGE        sd         SD   8.59\n4  TRT01A      Placebo      AGE    median     Median     76\n5  TRT01A      Placebo      AGE       p25         Q1     69\n6  TRT01A      Placebo      AGE       p75         Q3     82\n7  TRT01A      Placebo      AGE       min        Min     52\n8  TRT01A      Placebo      AGE       max        Max     89\n9  TRT01A      Placebo      BMI         N          N     86\n10 TRT01A      Placebo      BMI      mean       Mean 23.645\n\n\nℹ 86 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-3",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-3",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-4",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-4",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGEGR1, SEX, RACE, ETHNIC)\n)\n\n{cards} data frame: 81 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-5",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-5",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = ,\n\n  # add ard_* calls here\n\n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-6",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-6",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC))\n)\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-7",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-7",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall =  ,\n  .total_n =  \n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-demographics-ard-8",
    "href": "slides/01-intro-cards/index.html#example-demographics-ard-8",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: Demographics ARD",
    "text": "Example: Demographics ARD\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 246 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 236 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-hierarchical-summary-functions",
    "href": "slides/01-intro-cards/index.html#cards-hierarchical-summary-functions",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: Hierarchical Summary Functions",
    "text": "{cards}: Hierarchical Summary Functions\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\nard_stack_hierarchical stacking functions simplify this multi-step process into a single step\n\nard_stack_hierarchical(): calculating nested subject-level rates\nard_stack_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_stack_hierarchical",
    "href": "slides/01-intro-cards/index.html#cards-ard_stack_hierarchical",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_stack_hierarchical()",
    "text": "{cards}: ard_stack_hierarchical()\n\n\nCalculate subject-level rates over every level of variables\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA,\n  id = USUBJID,\n  denominator = adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n8    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         N\n9    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         p\n10   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n11   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n12   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n   stat_label  stat\n1           n    11\n2           N    86\n3           % 0.128\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     1\n11          N    86\n12          % 0.012\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#cards-ard_hierarchical_count",
    "href": "slides/01-intro-cards/index.html#cards-ard_hierarchical_count",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "{cards}: ard_hierarchical_count()",
    "text": "{cards}: ard_hierarchical_count()\n\n\nCalculate event-level counts over every level of variables\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA, \n  denominator = adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name stat_label stat\n1   TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n          n   14\n2   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n   10\n3   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n          n    2\n4   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n          n    2\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-ae-ard",
    "href": "slides/01-intro-cards/index.html#example-ae-ard",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: AE ARD",
    "text": "Example: AE ARD\n\nWithin every combination of treatment group (TRT01A) and severity (AESEV), calculate the number and percentage of unique subjects (USUBJID) with at least one AE: (1) Overall, (2) By each SOC (AESOC), and (3) By each Preferred term (AEDECOD) within SOC (AESOC)\n\n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n)"
  },
  {
    "objectID": "slides/01-intro-cards/index.html#example-ae-ard-1",
    "href": "slides/01-intro-cards/index.html#example-ae-ard-1",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Example: AE ARD",
    "text": "Example: AE ARD\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = c(TRTA, AESEV), \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n)\n\nℹ Denominator set by number of rows in `denominator` data frame.\n{cards} data frame: 351 x 15\n\n\n   group1 group1_level group2 group2_level group3 group3_level                     variable variable_level stat_name stat_label  stat\n1    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         n          n    10\n2    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         N          N   254\n3    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         p          % 0.039\n4    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         n          n     8\n5    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         N          N   254\n6    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         p          % 0.031\n7    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         n          n    10\n8    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         N          N   254\n9    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         p          % 0.039\n10   TRTA      Placebo  AESEV         MILD   &lt;NA&gt;              ..ard_hierarchical_overall..           TRUE         n          n    25\n\n\nℹ 341 more rows\nℹ Use `print(n = ...)` to see more rows\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "",
    "text": "🗓️ Tuesday March 18, 2025 | 04:00 - 05:30PM EDT\n🏢 Renaissance Orlando at SeaWorld, Oceans 1\n💥 FREE for PHUSE US Connect Attendees!",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Description",
    "text": "Description\nThe CDISC Analysis Results Data (ARD) Model is an emerging standard for encoding statistical analysis summaries in a machine-readable format. Its primary objective is to streamline the processes of automation, ensuring reproducibility, promoting reusability, and enhancing traceability.\nThe newly released {cards} R package, a collaborative effort in the Pharmaverse including Roche, GSK, and Novartis, offers a variety of functions for ARD generation. These range from basic univariate summaries like means and tabulations to complex multivariable summaries encompassing regression models and statistical tests.\nIn this interactive workshop, attendees will learn about ARDs and how they fit into the larger CDISC Analysis Results Standard. They will get hands-on experience using {cards} to build ARDs for both simple and complex statistical summaries. Lastly, attendees will also be introduced to open-source tools for converting their ARDs into tables using the {gtsummary} and {tfrmt} R packages. Attendees will leave with a solid understanding of ARDs and the knowledge of how to integrate them into their daily work using open-source tools.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#pre-work",
    "href": "index.html#pre-work",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Pre-work",
    "text": "Pre-work\nIf you are planning to participate in the hands-on portion of the workshop, please come prepared the following packages installed on your local machine:\ninstall.packages(c(\"cards\", \"cardx\", \"gtsummary\", \"tfrmt\", \"tfrmtbuilder\", \"pharmaverseadam\"))\nOr, you can make a copy of the following RStudio Cloud instance that has these packages pre-installed.\nTODO: ADD RSTUDIO CLOUD LINK",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#slides",
    "href": "index.html#slides",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Slides",
    "text": "Slides\nIntroduction to the Analysis Results Standard and {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary}\nARD to Tables with {tfrmt}",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Analysis Results Datasets Using Open-Source Tools from the {pharmaverse}",
    "section": "Instructors",
    "text": "Instructors\n\nDaniel D. Sjoberg (he/him) is a Senior Principal Data Scientist at Genentech. Previously, he was a Lead Data Science Manager at the Prostate Cancer Clinical Trials Consortium, and a Senior Biostatistician at Memorial Sloan Kettering Cancer Center in New York City. He enjoys R package development, creating many packages available on CRAN, R-Universe, and GitHub. He’s a co-organizer of rainbowR (a community that supports, promotes and connects LGBTQ+ people who code in the R language) and of the R Medicine Conference. His research interests include adaptive methods in clinical trials, precision medicine, and predictive modeling. Daniel is the winner of the 2021 American Statistical Association (ASA) Innovation in Statistical Programming and Analytics award.\n   \n\nBecca Krouse is a data scientist in GSK’s Statistics and Data Science Innovation Hub. A biostatistician by training, she has experience spanning 14+ years in the field of clinical research and specializes in developing R-based tools.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "slides/01-intro-cards/cards.html",
    "href": "slides/01-intro-cards/cards.html",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, and Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n52K downloads per month 🤯\n\n\n\n\n\nlibrary(cards)\n\n# create ARD with default summary statistics\nADSL |&gt; \n  ard_continuous(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable   context stat_name stat_label   stat fmt_fn\n1      AGE continuo…         N          N    254      0\n2      AGE continuo…      mean       Mean 75.087      1\n3      AGE continuo…        sd         SD  8.246      1\n4      AGE continuo…    median     Median     77      1\n5      AGE continuo…       p25         Q1     70      1\n6      AGE continuo…       p75         Q3     81      1\n7      AGE continuo…       min        Min     51      1\n8      AGE continuo…       max        Max     89      1\n\n\nℹ 2 more variables: warning, error\n\n\n\n\n\n\n\nby: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 24 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Xanomeli…      AGE         N          N     84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\nstatistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nADSL |&gt; \n  ard_continuous(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Xanomeli…      AGE        cv         cv 0.106\n3    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nCustomize the statistics returned for each variable\n\n\nADSL |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_continuous(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 9 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1    ARM      Placebo      AGE        cv         cv  0.114\n2    ARM      Placebo     AGE2      mean       Mean 75.209\n3    ARM      Placebo     AGE2    median     Median     76\n4    ARM    Xanomeli…      AGE        cv         cv  0.106\n5    ARM    Xanomeli…     AGE2      mean       Mean 74.381\n6    ARM    Xanomeli…     AGE2    median     Median     76\n7    ARM    Xanomeli…      AGE        cv         cv   0.11\n8    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n9    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nOverride the default formatting functions\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fn(stat_names = \"mean\", fmt_fn = 0) |&gt; \n  apply_fmt_fn() \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\nincludes n, %, N by default\n\n\n\nADSL |&gt; \n  ard_categorical(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 27 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &lt;65         n          n    14\n2     ARM      Placebo   AGEGR1            &lt;65         N          N    86\n3     ARM      Placebo   AGEGR1            &lt;65         p          % 0.163\n4     ARM      Placebo   AGEGR1            &gt;80         n          n    30\n5     ARM      Placebo   AGEGR1            &gt;80         N          N    86\n6     ARM      Placebo   AGEGR1            &gt;80         p          % 0.349\n7     ARM      Placebo   AGEGR1          65-80         n          n    42\n8     ARM      Placebo   AGEGR1          65-80         N          N    86\n9     ARM      Placebo   AGEGR1          65-80         p          % 0.488\n10    ARM    Xanomeli…   AGEGR1            &lt;65         n          n    11\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD.\n\n\n\n\n\nard_dichotomous(): similar to ard_categorical(), but for dichotomous summaries\nard_hierarchical(): similar to ard_categorical(), but built for nested tabulations, e.g. AE terms within SOC\nard_complex(): similar to ard_continuous(), but the summary functions can be more complex and accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞🥞🥞\n\n\n\nIn addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: rename_ard_columns(), get_ard_statistics(), replace_null_statistic(), etc.\n\n\n\n\n\ndata and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nADSL |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_continuous(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_categorical(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &lt;65         p          %  0.163\n4     ARM      Placebo   AGEGR1            &gt;80         p          %  0.349\n5     ARM      Placebo   AGEGR1          65-80         p          %  0.488\n6     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n7     ARM    Xanomeli…      AGE                       sd         SD  7.886\n8     ARM    Xanomeli…   AGEGR1            &lt;65         p          %  0.131\n9     ARM    Xanomeli…   AGEGR1            &gt;80         p          %  0.214\n10    ARM    Xanomeli…   AGEGR1          65-80         p          %  0.655\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\n\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = ,\n  variables =\n)\n\n\n\n\nFirst, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGE, BMI, HEIGHT, WEIGHT)\n)\n\n{cards} data frame: 96 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1  TRT01A      Placebo      AGE         N          N     86\n2  TRT01A      Placebo      AGE      mean       Mean 75.209\n3  TRT01A      Placebo      AGE        sd         SD   8.59\n4  TRT01A      Placebo      AGE    median     Median     76\n5  TRT01A      Placebo      AGE       p25         Q1     69\n6  TRT01A      Placebo      AGE       p75         Q3     82\n7  TRT01A      Placebo      AGE       min        Min     52\n8  TRT01A      Placebo      AGE       max        Max     89\n9  TRT01A      Placebo      BMI         N          N     86\n10 TRT01A      Placebo      BMI      mean       Mean 23.645\n\n\nℹ 86 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = ,\n  variables =\n)\n\n\n\n\nNext, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGEGR1, SEX, RACE, ETHNIC)\n)\n\n{cards} data frame: 81 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = ,\n\n  # add ard_* calls here\n\n)\n\n\n\n\nPerform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC))\n)\n\n{cards} data frame: 186 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 176 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall =  ,\n  .total_n =  \n)\n\n\n\n\nAlso add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 246 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 236 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nDisplays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\nard_stack_hierarchical stacking functions simplify this multi-step process into a single step\n\nard_stack_hierarchical(): calculating nested subject-level rates\nard_stack_hierarchical_count(): calculating nested event-level counts\n\n\n\n\n\n\n\nCalculate subject-level rates over every level of variables\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA,\n  id = USUBJID,\n  denominator = adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n8    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         N\n9    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         p\n10   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n11   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n12   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n   stat_label  stat\n1           n    11\n2           N    86\n3           % 0.128\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     1\n11          N    86\n12          % 0.012\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\n\nCalculate event-level counts over every level of variables\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA, \n  denominator = adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name stat_label stat\n1   TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n          n   14\n2   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n   10\n3   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n          n    2\n4   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n          n    2\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\n\n\n\nWithin every combination of treatment group (TRT01A) and severity (AESEV), calculate the number and percentage of unique subjects (USUBJID) with at least one AE: (1) Overall, (2) By each SOC (AESOC), and (3) By each Preferred term (AEDECOD) within SOC (AESOC)\n\n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n)\n\n\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = c(TRTA, AESEV), \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n)\n\nℹ Denominator set by number of rows in `denominator` data frame.\n{cards} data frame: 351 x 15\n\n\n   group1 group1_level group2 group2_level group3 group3_level                     variable variable_level stat_name stat_label  stat\n1    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         n          n    10\n2    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         N          N   254\n3    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         p          % 0.039\n4    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         n          n     8\n5    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         N          N   254\n6    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         p          % 0.031\n7    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         n          n    10\n8    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         N          N   254\n9    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         p          % 0.039\n10   TRTA      Placebo  AESEV         MILD   &lt;NA&gt;              ..ard_hierarchical_overall..           TRUE         n          n    25\n\n\nℹ 341 more rows\nℹ Use `print(n = ...)` to see more rows\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-introduction",
    "href": "slides/01-intro-cards/cards.html#cards-introduction",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Part of the Pharmaverse\nCollaboration between Roche, GSK, Novartis, and Pfizer\nContains a variety of utilities for making ARDs\nCan be used within the ARS workflow and separately\n52K downloads per month 🤯"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "library(cards)\n\n# create ARD with default summary statistics\nADSL |&gt; \n  ard_continuous(\n    variables = AGE\n  )\n\n{cards} data frame: 8 x 8\n\n\n  variable   context stat_name stat_label   stat fmt_fn\n1      AGE continuo…         N          N    254      0\n2      AGE continuo…      mean       Mean 75.087      1\n3      AGE continuo…        sd         SD  8.246      1\n4      AGE continuo…    median     Median     77      1\n5      AGE continuo…       p25         Q1     70      1\n6      AGE continuo…       p75         Q3     81      1\n7      AGE continuo…       min        Min     51      1\n8      AGE continuo…       max        Max     89      1\n\n\nℹ 2 more variables: warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-by-variable",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-by-variable",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "by: summary statistics are calculated by all combinations of the by variables, including unobserved factor levels\n\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM         # stats by treatment arm\n  ) \n\n{cards} data frame: 24 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1     ARM      Placebo      AGE         N          N     86\n2     ARM      Placebo      AGE      mean       Mean 75.209\n3     ARM      Placebo      AGE        sd         SD   8.59\n4     ARM      Placebo      AGE    median     Median     76\n5     ARM      Placebo      AGE       p25         Q1     69\n6     ARM      Placebo      AGE       p75         Q3     82\n7     ARM      Placebo      AGE       min        Min     52\n8     ARM      Placebo      AGE       max        Max     89\n9     ARM    Xanomeli…      AGE         N          N     84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "statistic: specify univariate summary statistics. Accepts any function, base R, from a package, or user-defined.\n\n\n\ncv &lt;- function(x)  sd(x, na.rm = TRUE)/mean(x, na.rm = TRUE)\n\nADSL |&gt; \n  ard_continuous(  \n    variables = AGE,\n    by = ARM,\n    statistic = ~ list(cv = cv) # customize statistics\n  )\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label  stat\n1    ARM      Placebo      AGE        cv         cv 0.114\n2    ARM    Xanomeli…      AGE        cv         cv 0.106\n3    ARM    Xanomeli…      AGE        cv         cv  0.11\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics-1",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-statistics-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Customize the statistics returned for each variable\n\n\nADSL |&gt; \n  dplyr::mutate(AGE2 = AGE) |&gt; \n  ard_continuous(\n    variables = c(AGE, AGE2),\n    by = ARM,\n    statistic = list(AGE = list(cv = cv),\n                     AGE2 = continuous_summary_fns(c(\"mean\",\"median\")))\n  )\n\n{cards} data frame: 9 x 10\n\n\n  group1 group1_level variable stat_name stat_label   stat\n1    ARM      Placebo      AGE        cv         cv  0.114\n2    ARM      Placebo     AGE2      mean       Mean 75.209\n3    ARM      Placebo     AGE2    median     Median     76\n4    ARM    Xanomeli…      AGE        cv         cv  0.106\n5    ARM    Xanomeli…     AGE2      mean       Mean 74.381\n6    ARM    Xanomeli…     AGE2    median     Median     76\n7    ARM    Xanomeli…      AGE        cv         cv   0.11\n8    ARM    Xanomeli…     AGE2      mean       Mean 75.667\n9    ARM    Xanomeli…     AGE2    median     Median   77.5\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_continuous-fmt_fn",
    "href": "slides/01-intro-cards/cards.html#cards-ard_continuous-fmt_fn",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Override the default formatting functions\n\n\nADSL |&gt; \n  ard_continuous(\n    variables = AGE,\n    by = ARM,                               \n  ) |&gt; \n  update_ard_fmt_fn(stat_names = \"mean\", fmt_fn = 0) |&gt; \n  apply_fmt_fn() \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable stat_name stat_label   stat stat_fmt\n1     ARM      Placebo      AGE         N          N     86       86\n2     ARM      Placebo      AGE      mean       Mean 75.209       75\n3     ARM      Placebo      AGE        sd         SD   8.59      8.6\n4     ARM      Placebo      AGE    median     Median     76     76.0\n5     ARM      Placebo      AGE       p25         Q1     69     69.0\n6     ARM      Placebo      AGE       p75         Q3     82     82.0\n7     ARM      Placebo      AGE       min        Min     52     52.0\n8     ARM      Placebo      AGE       max        Max     89     89.0\n9     ARM    Xanomeli…      AGE         N          N     84       84\n10    ARM    Xanomeli…      AGE      mean       Mean 74.381       74\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_categorical",
    "href": "slides/01-intro-cards/cards.html#cards-ard_categorical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "includes n, %, N by default\n\n\n\nADSL |&gt; \n  ard_categorical(\n    by = ARM,\n    variables = AGEGR1\n  ) \n\n{cards} data frame: 27 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1     ARM      Placebo   AGEGR1            &lt;65         n          n    14\n2     ARM      Placebo   AGEGR1            &lt;65         N          N    86\n3     ARM      Placebo   AGEGR1            &lt;65         p          % 0.163\n4     ARM      Placebo   AGEGR1            &gt;80         n          n    30\n5     ARM      Placebo   AGEGR1            &gt;80         N          N    86\n6     ARM      Placebo   AGEGR1            &gt;80         p          % 0.349\n7     ARM      Placebo   AGEGR1          65-80         n          n    42\n8     ARM      Placebo   AGEGR1          65-80         N          N    86\n9     ARM      Placebo   AGEGR1          65-80         p          % 0.488\n10    ARM    Xanomeli…   AGEGR1            &lt;65         n          n    11\n\n\nℹ 17 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error\n\n\n\nAny unobserved levels of the variables will be present in the resulting ARD."
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-other-summary-functions",
    "href": "slides/01-intro-cards/cards.html#cards-other-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_dichotomous(): similar to ard_categorical(), but for dichotomous summaries\nard_hierarchical(): similar to ard_categorical(), but built for nested tabulations, e.g. AE terms within SOC\nard_complex(): similar to ard_continuous(), but the summary functions can be more complex and accepts other arguments like the full and subsetted (within the by groups) data sets.\nard_missing(): tabulates rates of missingness\n\nThe results from all these functions are entirely compatible with one another, and can be stacked into a single data frame. 🥞🥞🥞"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-other-functions",
    "href": "slides/01-intro-cards/cards.html#cards-other-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "In addition to exporting functions to prepare summaries, {cards} exports many utilities for wrangling ARDs and creating new ARDs.\nConstructing: bind_ard(), nest_for_ard(), check_ard_structure(), and many more\nWrangling: rename_ard_columns(), get_ard_statistics(), replace_null_statistic(), etc."
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-stacking-utilities",
    "href": "slides/01-intro-cards/cards.html#cards-stacking-utilities",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "data and .by are shared by all ard_* calls\nAdditional Options .overall, .missing, .attributes, and .total_n provide even more results\nBy default, summaries of the .by variable are included\n\n\n\nADSL |&gt; \n  ard_stack( \n    .by = ARM,      \n    ard_continuous(variables = AGE, statistic = ~ continuous_summary_fns(c(\"mean\",\"sd\"))), \n    ard_categorical(variables = AGEGR1, statistic = ~ \"p\")\n  )  \n\n{cards} data frame: 24 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1     ARM      Placebo      AGE                     mean       Mean 75.209\n2     ARM      Placebo      AGE                       sd         SD   8.59\n3     ARM      Placebo   AGEGR1            &lt;65         p          %  0.163\n4     ARM      Placebo   AGEGR1            &gt;80         p          %  0.349\n5     ARM      Placebo   AGEGR1          65-80         p          %  0.488\n6     ARM    Xanomeli…      AGE                     mean       Mean 74.381\n7     ARM    Xanomeli…      AGE                       sd         SD  7.886\n8     ARM    Xanomeli…   AGEGR1            &lt;65         p          %  0.131\n9     ARM    Xanomeli…   AGEGR1            &gt;80         p          %  0.214\n10    ARM    Xanomeli…   AGEGR1          65-80         p          %  0.655\n\n\nℹ 14 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-1",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "First, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-2",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-2",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "First, compute the continuous summaries for AGE, BMI, HEIGHT, WEIGHT by TRT01A\n\nard_continuous(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGE, BMI, HEIGHT, WEIGHT)\n)\n\n{cards} data frame: 96 x 10\n\n\n   group1 group1_level variable stat_name stat_label   stat\n1  TRT01A      Placebo      AGE         N          N     86\n2  TRT01A      Placebo      AGE      mean       Mean 75.209\n3  TRT01A      Placebo      AGE        sd         SD   8.59\n4  TRT01A      Placebo      AGE    median     Median     76\n5  TRT01A      Placebo      AGE       p25         Q1     69\n6  TRT01A      Placebo      AGE       p75         Q3     82\n7  TRT01A      Placebo      AGE       min        Min     52\n8  TRT01A      Placebo      AGE       max        Max     89\n9  TRT01A      Placebo      BMI         N          N     86\n10 TRT01A      Placebo      BMI      mean       Mean 23.645\n\n\nℹ 86 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-3",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-3",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Next, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = ,\n  variables =\n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-4",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-4",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Next, compute the categorical summaries for AGEGR1, SEX, RACE, ETHNIC by TRT01A\n\nard_categorical(\n  data = adsl,\n  by = TRT01A,\n  variables = c(AGEGR1, SEX, RACE, ETHNIC)\n)\n\n{cards} data frame: 81 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label  stat\n1  TRT01A      Placebo   AGEGR1            &gt;64         n          n    72\n2  TRT01A      Placebo   AGEGR1            &gt;64         N          N    86\n3  TRT01A      Placebo   AGEGR1            &gt;64         p          % 0.837\n4  TRT01A      Placebo   AGEGR1          18-64         n          n    14\n5  TRT01A      Placebo   AGEGR1          18-64         N          N    86\n6  TRT01A      Placebo   AGEGR1          18-64         p          % 0.163\n7  TRT01A      Placebo      SEX              F         n          n    53\n8  TRT01A      Placebo      SEX              F         N          N    86\n9  TRT01A      Placebo      SEX              F         p          % 0.616\n10 TRT01A      Placebo      SEX              M         n          n    33\n\n\nℹ 71 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-5",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-5",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Perform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = ,\n\n  # add ard_* calls here\n\n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-6",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-6",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Perform all of the summaries in a single ard_stack() call, including:\n- summaries by TRT01A as performed above\n\n- continuous summaries from part A for AGE, BMI, HEIGHT, and WEIGHT\n\n- categorical summaries from part B for AGEGR1, SEX, RACE, ETHNIC\n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC))\n)\n\n{cards} data frame: 186 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 176 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-7",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-7",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Also add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall =  ,\n  .total_n =  \n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-demographics-ard-8",
    "href": "slides/01-intro-cards/cards.html#example-demographics-ard-8",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Also add the following pieces\n- overall summaries for all of the variables\n\n- total N \n\nard_stack(\n  data = adsl,\n  .by = TRT01A,\n  ard_continuous( variables = c(AGE, BMI, HEIGHT, WEIGHT)),\n  ard_categorical(variables = c(AGEGR1, SEX, RACE, ETHNIC)), \n  .overall = TRUE,\n  .total_n = TRUE\n)\n\n{cards} data frame: 246 x 11\n\n\n   group1 group1_level variable variable_level stat_name stat_label   stat\n1  TRT01A      Placebo      AGE                        N          N     86\n2  TRT01A      Placebo      AGE                     mean       Mean 75.209\n3  TRT01A      Placebo      AGE                       sd         SD   8.59\n4  TRT01A      Placebo      AGE                   median     Median     76\n5  TRT01A      Placebo      AGE                      p25         Q1     69\n6  TRT01A      Placebo      AGE                      p75         Q3     82\n7  TRT01A      Placebo      AGE                      min        Min     52\n8  TRT01A      Placebo      AGE                      max        Max     89\n9  TRT01A      Placebo      BMI                        N          N     86\n10 TRT01A      Placebo      BMI                     mean       Mean 23.645\n\n\nℹ 236 more rows\n\n\nℹ Use `print(n = ...)` to see more rows\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-hierarchical-summary-functions",
    "href": "slides/01-intro-cards/cards.html#cards-hierarchical-summary-functions",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Displays for hierarchical data typically report on each level of the hierarchy (Any AE Overall, by System Organ Class, by Preferred Term)\nFurther, subject-level summaries require a different subset of the data each time. For example, to calculate Overall rates, we need to subset to 1 record per subject in ADAE.\nard_stack_hierarchical stacking functions simplify this multi-step process into a single step\n\nard_stack_hierarchical(): calculating nested subject-level rates\nard_stack_hierarchical_count(): calculating nested event-level counts"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_stack_hierarchical",
    "href": "slides/01-intro-cards/cards.html#cards-ard_stack_hierarchical",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Calculate subject-level rates over every level of variables\nThe id argument is used to subset the data along the way\n\n\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA,\n  id = USUBJID,\n  denominator = adsl\n)\n\n\n\n{cards} data frame: 12 x 13\n\n\n   group1 group1_level group2 group2_level variable variable_level stat_name\n1    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n\n2    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         N\n3    TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         p\n4    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n\n5    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         N\n6    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         p\n7    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n\n8    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         N\n9    TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         p\n10   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n\n11   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         N\n12   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         p\n   stat_label  stat\n1           n    11\n2           N    86\n3           % 0.128\n4           n     9\n5           N    86\n6           % 0.105\n7           n     1\n8           N    86\n9           % 0.012\n10          n     1\n11          N    86\n12          % 0.012\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#cards-ard_hierarchical_count",
    "href": "slides/01-intro-cards/cards.html#cards-ard_hierarchical_count",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Calculate event-level counts over every level of variables\n\n\n\nard_stack_hierarchical_count(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = TRTA, \n  denominator = adsl\n)\n\n\n\n{cards} data frame: 4 x 13\n\n\n  group1 group1_level group2 group2_level variable variable_level stat_name stat_label stat\n1   TRTA      Placebo   &lt;NA&gt;                 AESOC      GASTROIN…         n          n   14\n2   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DIARRHOEA         n          n   10\n3   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      DYSPEPSIA         n          n    2\n4   TRTA      Placebo  AESOC    GASTROIN…  AEDECOD      HIATUS H…         n          n    2\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-ae-ard",
    "href": "slides/01-intro-cards/cards.html#example-ae-ard",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "Within every combination of treatment group (TRT01A) and severity (AESEV), calculate the number and percentage of unique subjects (USUBJID) with at least one AE: (1) Overall, (2) By each SOC (AESOC), and (3) By each Preferred term (AEDECOD) within SOC (AESOC)\n\n\nard_stack_hierarchical(\n  data = ,\n  variables = ,\n  by = , \n  id = ,\n  denominator = \n)"
  },
  {
    "objectID": "slides/01-intro-cards/cards.html#example-ae-ard-1",
    "href": "slides/01-intro-cards/cards.html#example-ae-ard-1",
    "title": "ARDs using {cards}",
    "section": "",
    "text": "ard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = c(TRTA, AESEV), \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n)\n\nℹ Denominator set by number of rows in `denominator` data frame.\n{cards} data frame: 351 x 15\n\n\n   group1 group1_level group2 group2_level group3 group3_level                     variable variable_level stat_name stat_label  stat\n1    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         n          n    10\n2    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         N          N   254\n3    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GASTROIN…         p          % 0.039\n4    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         n          n     8\n5    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         N          N   254\n6    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      GENERAL …         p          % 0.031\n7    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         n          n    10\n8    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         N          N   254\n9    TRTA      Placebo  AESEV         MILD   &lt;NA&gt;                                     AESOC      SKIN AND…         p          % 0.039\n10   TRTA      Placebo  AESEV         MILD   &lt;NA&gt;              ..ard_hierarchical_overall..           TRUE         n          n    25\n\n\nℹ 341 more rows\nℹ Use `print(n = ...)` to see more rows\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html",
    "href": "slides/01-intro-cards/intro.html",
    "title": "Introduction",
    "section": "",
    "text": "You want to learn about ARDs\nYou want to learn about new tools for working with ARDs\nYou want to learn about new tools for making displays from ARDs\nFamiliarity with R helpful (but not required!)"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#this-workshop-is-for-you-if",
    "href": "slides/01-intro-cards/intro.html#this-workshop-is-for-you-if",
    "title": "Introduction",
    "section": "",
    "text": "You want to learn about ARDs\nYou want to learn about new tools for working with ARDs\nYou want to learn about new tools for making displays from ARDs\nFamiliarity with R helpful (but not required!)"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-1",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-1",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\n\n\nEmerging standard for prospectively encoding statistical analysis reporting pipeline in a machine-readable format.\nLogical model that describes analysis results and associated metadata.\nPrimary objectives:\n\nLeverage analysis results metadata to drive automation of results\nSupport storage, access, processing, traceability and reproducibility of results\n\n\n\n\n\n\nLearn more at https://www.cdisc.org/events/webinar/analysis-results-standard-public-review"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-2",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-2",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-3",
    "href": "slides/01-intro-cards/intro.html#analysis-results-standard-ars-3",
    "title": "Introduction",
    "section": "Analysis Results Standard (ARS)",
    "text": "Analysis Results Standard (ARS)\nExample ARS Flow\n\n\n\n\n\n\nThe ARS provides a metadata-driven infrastructure for analysis\n{cards} serves as the engine for the analysis"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-data-ard",
    "href": "slides/01-intro-cards/intro.html#analysis-results-data-ard",
    "title": "Introduction",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\n\nEncodes statistical analysis outcomes in a machine-readable format.\nThe ARD model specifies how statistical results are saved into a structured format.\nThe ARD can be used to to subsequently create tables and figures.\nThe ARD does not describe the layout of the results"
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#analysis-results-data-ard-1",
    "href": "slides/01-intro-cards/intro.html#analysis-results-data-ard-1",
    "title": "Introduction",
    "section": "Analysis Results Data (ARD)",
    "text": "Analysis Results Data (ARD)\n\nAfter the initial creation of an ARD, the results can later be re-used again and again for subsequent reporting needs."
  },
  {
    "objectID": "slides/01-intro-cards/intro.html#a-few-notes-about-ards",
    "href": "slides/01-intro-cards/intro.html#a-few-notes-about-ards",
    "title": "Introduction",
    "section": "A few notes about ARDs",
    "text": "A few notes about ARDs\n\n\nRethinking QC\n\nQC can be focused on the raw and/or formatted values\n\nOptionnally, you don’t need to spend time trying to match formatted values\nNote: QC will be more sensitive to floating point\n\n\nFlexible data file types\n\nARD can be saved as a dataset (rds, xpt, etc) or json file"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html",
    "href": "slides/02-intro-cardx/02-extras.html",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "What happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_continuous(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fn\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#when-things-go-wrong",
    "href": "slides/02-intro-cardx/02-extras.html#when-things-go-wrong",
    "title": "Analysis Results Datasets",
    "section": "",
    "text": "What happens when statistics are un-calculable?\n\nard_gone_wrong &lt;- \n  cards::ADSL |&gt; \n  cards::ard_continuous(\n    by = ARM,\n    variable = AGEGR1,\n    statistic = ~list(kurtosis = \\(x) e1071::kurtosis(x))\n  ) |&gt; \n  cards::replace_null_statistic()\nard_gone_wrong\n\n{cards} data frame: 3 x 10\n\n\n  group1 group1_level variable stat_name stat_label stat   warning     error\n1    ARM      Placebo   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n2    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n3    ARM    Xanomeli…   AGEGR1  kurtosis   kurtosis   NA argument… non-nume…\n\n\nℹ 2 more variables: context, fmt_fn\n\n\n\ncards::print_ard_conditions(ard_gone_wrong)\n\n\n\n\nWhere is the statistic? AGEGR1 is character\nEven when there are errors or warnings, we still get the ARD with the expected structure returned.\n\nTHIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.\nThis allows you to design everything up-front.\n\nWe can also report these warnings and errors back to users. &lt;!CLICK!&gt;"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#mock-ards",
    "href": "slides/02-intro-cardx/02-extras.html#mock-ards",
    "title": "Analysis Results Datasets",
    "section": "Mock ARDs",
    "text": "Mock ARDs\nLike mock tables, mock ARDs are often useful\n\ncards::bind_ard(\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\"))),\n  cards::mock_continuous(variables = \"AGE\")\n) |&gt; \n  cards::apply_fmt_fn()\n\n{cards} data frame: 14 x 10\n\n\n   variable variable_level stat_name stat_label stat stat_fmt\n1    AGEGR1            &lt;65         n          n            xx\n2    AGEGR1            &lt;65         p          %          xx.x\n3    AGEGR1            &lt;65         N          N            xx\n4    AGEGR1           &gt;=65         n          n            xx\n5    AGEGR1           &gt;=65         p          %          xx.x\n6    AGEGR1           &gt;=65         N          N            xx\n7       AGE                        N          N            xx\n8       AGE                     mean       Mean          xx.x\n9       AGE                       sd         SD          xx.x\n10      AGE                   median     Median          xx.x\n11      AGE                      p25         Q1          xx.x\n12      AGE                      p75         Q3          xx.x\n13      AGE                      min        Min          xx.x\n14      AGE                      max        Max          xx.x\n\n\nℹ 4 more variables: context, fmt_fn, warning, error"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#mock-ards-1",
    "href": "slides/02-intro-cardx/02-extras.html#mock-ards-1",
    "title": "Analysis Results Datasets",
    "section": "Mock ARDs",
    "text": "Mock ARDs\n\ncards::bind_ard(\n  cards::mock_continuous(variables = \"AGE\", \n                         by = list(ARM = c(\"Drug A\", \"Drug B\"))),\n  cards::mock_categorical(variables = list(AGEGR1 = c(\"&lt;65\", \"&gt;=65\")),\n                          by = list(ARM = c(\"Drug A\", \"Drug B\")))\n) |&gt; \n  gtsummary::tbl_ard_summary(\n    by = ARM,\n    type  = AGE ~ \"continuous2\",\n    statistic = AGE ~ c(\"{N}\", \"{mean} ({sd})\", \"{median} ({p25}, {p75})\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A1\nDrug B1\n\n\n\n\nAGE\n\n\n\n\n\n\n    N\nxx\nxx\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Median (Q1, Q3)\nxx.x (xx.x, xx.x)\nxx.x (xx.x, xx.x)\n\n\nAGEGR1\n\n\n\n\n\n\n    &lt;65\nxx (xx.x%)\nxx (xx.x%)\n\n\n    &gt;=65\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/02-intro-cardx/02-extras.html#other-ard-representations",
    "href": "slides/02-intro-cardx/02-extras.html#other-ard-representations",
    "title": "Analysis Results Datasets",
    "section": "Other ARD Representations",
    "text": "Other ARD Representations\nWhile the data frame-based ARD is easy to work with, language-agnostic representations are often useful.\n\n\nYAML\n\ncards::as_nested_list(ard) |&gt; \n  yaml::as.yaml() |&gt; \n  cat()\n\nvariable:\n  AGE:\n    group1:\n      ARM:\n        group1_level:\n          Placebo:\n            stat_name:\n              'N':\n                stat: 86\n                stat_fmt: '86'\n                warning: ~\n                error: ~\n                context: continuous\n              mean:\n                stat: 75.2093023\n...\n\n\n\nJSON\n\ncards::as_nested_list(ard) |&gt; \n  jsonlite::toJSON(pretty = TRUE)\n\n{\n  \"variable\": {\n    \"AGE\": {\n      \"group1\": {\n        \"ARM\": {\n          \"group1_level\": {\n            \"Placebo\": {\n              \"stat_name\": {\n                \"N\": {\n                  \"stat\": [86],\n                  \"stat_fmt\": [\"86\"],\n                  \"warning\": {},\n                  \"error\": {},\n                  \"context\": [\"continuous\"]\n                },\n..."
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#workshop-outline",
    "href": "slides/03-tables-gtsummary/index.html#workshop-outline",
    "title": "ARD + {gtsummary}",
    "section": "Workshop outline",
    "text": "Workshop outline\n\n\nIntroduction to the Analysis Results Standard and ARDs with {cards}\nIntroduction to the {cardx} Package and ARD Extras\nARD to Tables with {gtsummary} and {tfrmt}"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tables-in-the-pharmaverse",
    "href": "slides/03-tables-gtsummary/index.html#tables-in-the-pharmaverse",
    "title": "ARD + {gtsummary}",
    "section": "Tables in the {pharmaverse}",
    "text": "Tables in the {pharmaverse}"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tables-in-the-pharmaverse-1",
    "href": "slides/03-tables-gtsummary/index.html#tables-in-the-pharmaverse-1",
    "title": "ARD + {gtsummary}",
    "section": "Tables in the {pharmaverse}",
    "text": "Tables in the {pharmaverse}\n\n\nData frame-first packages"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tables-in-the-pharmaverse-2",
    "href": "slides/03-tables-gtsummary/index.html#tables-in-the-pharmaverse-2",
    "title": "ARD + {gtsummary}",
    "section": "Tables in the {pharmaverse}",
    "text": "Tables in the {pharmaverse}\n\n\nARD-first packages"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#section",
    "href": "slides/03-tables-gtsummary/index.html#section",
    "title": "ARD + {gtsummary}",
    "section": "",
    "text": "How it started\n\n\nBegan to address reproducible issues while working in academia\nGoal was to build a package to summarize study results with code that was both simple and customizable\nFirst release in May 2019\n\n\n\nHow it’s going\n\n\nThe stats\n\n1,300,000+ installations from CRAN\n1100+ GitHub stars\n300+ contributors\n50+ code contributors\n\nWon the 2021 American Statistical Association (ASA) Innovation in Programming Award\nWon the 2024 Posit Pharma Table Contest"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-overview",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-overview",
    "title": "ARD + {gtsummary}",
    "section": "{gtsummary} overview",
    "text": "{gtsummary} overview\n\n\n\nCreate tabular summaries with sensible defaults but highly customizable\nTypes of summaries:\n\nDemographic- or “Table 1”-types\nCross-tabulation\nRegression models\nSurvival data\nNested summaries (AE tables)\nCustom tables\n\n\n\n\nStack and/or merge any table type\nUse themes to standardize across tables\nChoose from different print engines"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-runs-on-ards",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-runs-on-ards",
    "title": "ARD + {gtsummary}",
    "section": "{gtsummary} runs on ARDs!",
    "text": "{gtsummary} runs on ARDs!"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#simple-summary-table",
    "href": "slides/03-tables-gtsummary/index.html#simple-summary-table",
    "title": "ARD + {gtsummary}",
    "section": "Simple Summary Table",
    "text": "Simple Summary Table\n\nlibrary(gtsummary)\nADSL &lt;- cards::ADSL |&gt; dplyr::filter(startsWith(ARM, \"Xanomeline\"))\nADAE &lt;- cards::ADAE |&gt; dplyr::filter(startsWith(TRTA, \"Xanomeline\"))\n\ntbl &lt;- ADSL |&gt; \n  tbl_summary(\n    by = ARM, \n    include = c(AGE, RACE),\n    type = AGE ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min}, {max}\")\n  ) |&gt; \n  add_overall()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nOverall N = 1681\nXanomeline High Dose N = 841\nXanomeline Low Dose N = 841\n\n\n\n\nAge\n\n\n\n\n\n\n\n\n    Mean (SD)\n75 (8)\n74 (8)\n76 (8)\n\n\n    Min, Max\n51, 88\n56, 88\n51, 88\n\n\nRace\n\n\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (0.6%)\n1 (1.2%)\n0 (0.0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n15 (8.9%)\n9 (10.7%)\n6 (7.1%)\n\n\n    WHITE\n152 (90.5%)\n74 (88.1%)\n78 (92.9%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#simple-summary-table-1",
    "href": "slides/03-tables-gtsummary/index.html#simple-summary-table-1",
    "title": "ARD + {gtsummary}",
    "section": "Simple Summary Table",
    "text": "Simple Summary Table\nBut where are the ARDs?!\n\n\n\ngather_ard(tbl) |&gt; \n  purrr::pluck(\"tbl_summary\") |&gt; \n  cards::apply_fmt_fn()\n\n   group1 group1_level variable variable_level stat_name stat_label  stat stat_fmt\n1     ARM    Xanomeli…     RACE      AMERICAN…         n          n     1        1\n2     ARM    Xanomeli…     RACE      AMERICAN…         N          N    84       84\n3     ARM    Xanomeli…     RACE      AMERICAN…         p          % 0.012      1.2\n4     ARM    Xanomeli…     RACE      BLACK OR…         n          n     9        9\n5     ARM    Xanomeli…     RACE      BLACK OR…         N          N    84       84\n6     ARM    Xanomeli…     RACE      BLACK OR…         p          % 0.107     10.7\n7     ARM    Xanomeli…     RACE          WHITE         n          n    74       74\n8     ARM    Xanomeli…     RACE          WHITE         N          N    84       84\n9     ARM    Xanomeli…     RACE          WHITE         p          % 0.881     88.1\n10    ARM    Xanomeli…     RACE      AMERICAN…         n          n     0        0\n\n\n\n\nBecause the ARD is created as a byproduct of every gtsummary function, QC is a breeze.\nSimply compare the ARD above to the ARD created with {cards}, which allows you to compare both the underlying numeric values and the rounded/formatted value that appears in the table."
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ae-summary-table",
    "href": "slides/03-tables-gtsummary/index.html#ae-summary-table",
    "title": "ARD + {gtsummary}",
    "section": "AE Summary Table",
    "text": "AE Summary Table\n\ntbl &lt;- ADAE |&gt; \n  dplyr::filter(AESOC %in% c(\"EYE DISORDERS\", \"VASCULAR DISORDERS\")) |&gt; \n  tbl_hierarchical(\n    by = TRTA,\n    variables = c(AESOC, AETERM),\n    id = USUBJID,\n    denominator = ADSL |&gt; dplyr::rename(TRTA = ARM)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrimary System Organ Class     Reported Term for the Adverse Event\nXanomeline High Dose N = 841\nXanomeline Low Dose N = 841\n\n\n\n\nEYE DISORDERS\n1 (1.2%)\n2 (2.4%)\n\n\n    CONJUNCTIVAL HAEMORRHAGE\n0 (0.0%)\n1 (1.2%)\n\n\n    VISION BLURRED\n1 (1.2%)\n1 (1.2%)\n\n\nVASCULAR DISORDERS\n2 (2.4%)\n3 (3.6%)\n\n\n    HOT FLUSH\n0 (0.0%)\n1 (1.2%)\n\n\n    HYPERTENSION\n1 (1.2%)\n1 (1.2%)\n\n\n    HYPOTENSION\n0 (0.0%)\n1 (1.2%)\n\n\n    WOUND HAEMORRHAGE\n1 (1.2%)\n0 (0.0%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "href": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables",
    "title": "ARD + {gtsummary}",
    "section": "tbl_merge() for side-by-side tables",
    "text": "tbl_merge() for side-by-side tables\n\n\n\nlibrary(survival)\n\ntbl_uvreg &lt;- cards::ADTTE |&gt; \n  tbl_uvregression(\n    y = Surv(AVAL, 1 - CNSR),\n    include = c(TRTA, AGE),\n    method = coxph,\n    exponentiate = TRUE, \n    hide_n = TRUE)\ntbl_uvreg\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHR\n95% CI\np-value\n\n\n\n\nActual Treatment\n\n\n\n\n\n\n\n\n    Placebo\n—\n—\n\n\n\n\n    Xanomeline High Dose\n5.03\n3.18, 7.94\n&lt;0.0001\n\n\n    Xanomeline Low Dose\n4.15\n2.65, 6.50\n&lt;0.0001\n\n\nAge\n0.99\n0.97, 1.01\n0.2494\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio\n\n\n\n\n\n\n\n\n\n\ntbl_reg &lt;- \n  coxph(\n    Surv(AVAL, 1-CNSR)~TRTA+AGE, \n    data = cards::ADTTE) |&gt; \n  tbl_regression(exponentiate=TRUE)\n\n\n\n\ntbl_reg\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHR\n95% CI\np-value\n\n\n\n\nActual Treatment\n\n\n\n\n\n\n\n\n    Placebo\n—\n—\n\n\n\n\n    Xanomeline High Dose\n5.08\n3.21, 8.03\n&lt;0.0001\n\n\n    Xanomeline Low Dose\n4.22\n2.69, 6.63\n&lt;0.0001\n\n\nAge\n0.99\n0.97, 1.00\n0.1326\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables-1",
    "href": "slides/03-tables-gtsummary/index.html#tbl_merge-for-side-by-side-tables-1",
    "title": "ARD + {gtsummary}",
    "section": "tbl_merge() for side-by-side tables",
    "text": "tbl_merge() for side-by-side tables\n\n# combine the tables side by side\ntbl &lt;- list(tbl_uvreg, tbl_reg) |&gt; \n  tbl_merge(tab_spanner = c(\"**Univariable**\", \"**Multivariable**\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n\nUnivariable\n\n\nMultivariable\n\n\n\nHR\n95% CI\np-value\nHR\n95% CI\np-value\n\n\n\n\nActual Treatment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Placebo\n—\n—\n\n\n—\n—\n\n\n\n\n    Xanomeline High Dose\n5.03\n3.18, 7.94\n&lt;0.0001\n5.08\n3.21, 8.03\n&lt;0.0001\n\n\n    Xanomeline Low Dose\n4.15\n2.65, 6.50\n&lt;0.0001\n4.22\n2.69, 6.63\n&lt;0.0001\n\n\nAge\n0.99\n0.97, 1.01\n0.2494\n0.99\n0.97, 1.00\n0.1326\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "href": "slides/03-tables-gtsummary/index.html#tbl_stack-to-combine-vertically",
    "title": "ARD + {gtsummary}",
    "section": "tbl_stack() to combine vertically",
    "text": "tbl_stack() to combine vertically\n\n# stack the two tables \ntbl &lt;- list(tbl_uvreg, tbl_reg) |&gt; \n  tbl_stack(group_header = c(\"Univariable\", \"Multivariable\")) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHR\n95% CI\np-value\n\n\n\n\nUnivariable\n\n\nActual Treatment\n\n\n\n\n\n\n\n\n    Placebo\n—\n—\n\n\n\n\n    Xanomeline High Dose\n5.03\n3.18, 7.94\n&lt;0.0001\n\n\n    Xanomeline Low Dose\n4.15\n2.65, 6.50\n&lt;0.0001\n\n\nAge\n0.99\n0.97, 1.01\n0.2494\n\n\nMultivariable\n\n\nActual Treatment\n\n\n\n\n\n\n\n\n    Placebo\n—\n—\n\n\n\n\n    Xanomeline High Dose\n5.08\n3.21, 8.03\n&lt;0.0001\n\n\n    Xanomeline Low Dose\n4.22\n2.69, 6.63\n&lt;0.0001\n\n\nAge\n0.99\n0.97, 1.00\n0.1326\n\n\n\nAbbreviations: CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-1",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-1",
    "title": "ARD + {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nSimilar to functions that accept a data frame, the package exports functions with nearly identical APIs that accept an ARD.\n\n\ntbl_summary()\n\ntbl_continuous()\n\ntbl_wide_summary()\n\ntbl_ard_summary()\n\ntbl_ard_continuous()\n\ntbl_ard_wide_summary()"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-2",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-2",
    "title": "ARD + {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\nWe can use the skills we learned earlier today to create ARDs for simple and complex gtsummary tables.\n\ntbl &lt;- ADSL |&gt; \n  ard_stack( \n    .by = ARM,\n    ard_continuous(variables = AGE),\n    ard_categorical(variables = RACE),\n    # add this for best-looking tables\n    .attributes = TRUE\n  ) |&gt; \n  tbl_ard_summary(\n    by = ARM,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous() ~ c(\"{mean} ({sd})\", \"{min} - {max}\")\n  ) |&gt; \n  modify_caption(\"**Table 1. Subject Demographics**\")"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-tables-3",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-tables-3",
    "title": "ARD + {gtsummary}",
    "section": "ARD-first Tables",
    "text": "ARD-first Tables\n\n\n\n\n\n\nTable 1. Subject Demographics\n\n\n\n\n\n\n\nCharacteristic\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nAge\n\n\n\n\n\n\n    Mean (SD)\n74.4 (7.9)\n75.7 (8.3)\n\n\n    Min - Max\n56.0 - 88.0\n51.0 - 88.0\n\n\nRace\n\n\n\n\n\n\n    AMERICAN INDIAN OR ALASKA NATIVE\n1 (1.2%)\n0 (0.0%)\n\n\n    BLACK OR AFRICAN AMERICAN\n9 (10.7%)\n6 (7.1%)\n\n\n    WHITE\n74 (88.1%)\n78 (92.9%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#what-about-other-tables",
    "href": "slides/03-tables-gtsummary/index.html#what-about-other-tables",
    "title": "ARD + {gtsummary}",
    "section": "What About Other Tables?",
    "text": "What About Other Tables?\n\nWhile our examples have focused on simple demographics tables, the ARD structure is general and any statistic can be presented.\n\n\nADSL |&gt; \n  cardx::ard_stats_t_test_onesample(by = c(ARM, SEX), variables = AGE) |&gt; \n  cards::update_ard_fmt_fn(stat_names = \"p.value\", \n                           fmt_fn = label_style_pvalue(prepend_p = TRUE)) |&gt; \n  tbl_ard_continuous(\n    by = ARM, \n    include = SEX,\n    variable = AGE,\n    statistic = ~\"{estimate} ({conf.low}, {conf.high}; {p.value})\"\n  ) |&gt; \n  modify_footnote(all_stat_cols() ~ \"Mean (95% CI; p-value)\")\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nXanomeline High Dose1\nXanomeline Low Dose1\n\n\n\n\nSEX\n\n\n\n\n\n\n    F\n74.7 (72.2, 77.1; p&lt;0.001)\n75.7 (73.4, 78.0; p&lt;0.001)\n\n\n    M\n74.1 (71.6, 76.6; p&lt;0.001)\n75.6 (72.6, 78.7; p&lt;0.001)\n\n\n\n1 Mean (95% CI; p-value)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#ard-first-table-shells",
    "href": "slides/03-tables-gtsummary/index.html#ard-first-table-shells",
    "title": "ARD + {gtsummary}",
    "section": "ARD-first Table Shells",
    "text": "ARD-first Table Shells\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nDrug A N = xx1\nDrug B N = xx1\n\n\n\n\nPatient Age, yrs\n\n\n\n\n\n\n    Mean (SD)\nxx.x (xx.x)\nxx.x (xx.x)\n\n\n    Min - Max\nxx.x - xx.x\nxx.x - xx.x\n\n\nGrade\n\n\n\n\n\n\n    I\nxx (xx.x%)\nxx (xx.x%)\n\n\n    II\nxx (xx.x%)\nxx (xx.x%)\n\n\n    III\nxx (xx.x%)\nxx (xx.x%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#as_gtsummary",
    "href": "slides/03-tables-gtsummary/index.html#as_gtsummary",
    "title": "ARD + {gtsummary}",
    "section": "as_gtsummary()",
    "text": "as_gtsummary()\nFor tables that just don’t fit any mold, use as_gtsummary().\n\nCreate a data frame of the data summary convert to gtsummary\n\n\nADAE[1:5,] |&gt; \n  dplyr::select(USUBJID, AESOC, AETERM) |&gt; \n  dplyr::mutate(\n    .by = USUBJID, \n    USUBJID = ifelse(dplyr::row_number() == 1, USUBJID, NA)\n  ) |&gt; \n  as_gtsummary() |&gt; \n  modify_header(USUBJID = \"Patient ID\") |&gt; \n  modify_column_alignment(everything(), \"left\")"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#as_gtsummary-output",
    "href": "slides/03-tables-gtsummary/index.html#as_gtsummary-output",
    "title": "ARD + {gtsummary}",
    "section": "as_gtsummary()",
    "text": "as_gtsummary()\n\n\n\n\n\n\n\n\n\n\n\n\nPatient ID\nPrimary System Organ Class\nReported Term for the Adverse Event\n\n\n\n\n01-701-1028\nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\nAPPLICATION SITE ERYTHEMA\n\n\n\n\nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\nAPPLICATION SITE PRURITUS\n\n\n01-701-1034\nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\nAPPLICATION SITE PRURITUS\n\n\n\n\nGENERAL DISORDERS AND ADMINISTRATION SITE CONDITIONS\nFATIGUE\n\n\n01-701-1097\nSKIN AND SUBCUTANEOUS TISSUE DISORDERS\nERYTHEMA"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-print-engines-1",
    "title": "ARD + {gtsummary}",
    "section": "{gtsummary} print engines",
    "text": "{gtsummary} print engines"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#gtsummary-website",
    "href": "slides/03-tables-gtsummary/index.html#gtsummary-website",
    "title": "ARD + {gtsummary}",
    "section": "{gtsummary} website",
    "text": "{gtsummary} website\nhttp://www.danieldsjoberg.com/gtsummary/"
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#section-1",
    "href": "slides/03-tables-gtsummary/index.html#section-1",
    "title": "ARD + {gtsummary}",
    "section": "",
    "text": "Package Authors/Contributors\n\nDaniel D. Sjoberg\nJoseph Larmarange\nMichael Curry\nJessica Lavery\nKarissa Whiting\nEmily C. Zabor\nXing Bai\nEsther Drill\nJessica Flynn\nMargie Hannum\nStephanie Lobaugh\nShannon Pileggi\nAmy Tin\nGustavo Zapata Wainberg\n\n\nOther Contributors\n\n@abduazizR, @ablack3, @ABohynDOE, @ABorakati, @adilsonbauhofer, @aghaynes, @ahinton-mmc, @aito123, @akarsteve, @akefley, @albamrt, @albertostefanelli, @alecbiom, @alexandrayas, @alexis-catherine, @AlexZHENGH, @alnajar, @amygimma, @anaavu, @anddis, @andrader, @Andrzej-Andrzej, @angelgar, @arbet003, @arnmayer, @aspina7, @AurelienDasre, @awcm0n, @ayogasekaram, @barretmonchka, @barthelmes, @bc-teixeira, @bcjaeger, @BeauMeche, @benediktclaus, @benwhalley, @berg-michael, @bhattmaulik, @BioYork, @blue-abdur, @brachem-christian, @brianmsm, @browne123, @bwiernik, @bx259, @calebasaraba, @CarolineXGao, @CharlyMarie, @ChongTienGoh, @Chris-M-P, @chrisleitzinger, @cjprobst, @ClaudiaCampani, @clmawhorter, @CodieMonster, @coeusanalytics, @coreysparks, @CorradoLanera, @crystalluckett-sanofi, @ctlamb, @dafxy, @DanChaltiel, @DanielPark-MGH, @davideyre, @davidgohel, @davidkane9, @DavisVaughan, @dax44, @dchiu911, @ddsjoberg, @DeFilippis, @denis-or, @dereksonderegger, @derekstein, @DesiQuintans, @dieuv0, @dimbage, @discoleo, @djbirke, @dmenne, @DrDinhLuong, @edelarua, @edrill, @Eduardo-Auer, @ElfatihHasabo, @emilyvertosick, @eokoshi, @ercbk, @eremingt, @erikvona, @eugenividal, @eweisbrod, @fdehrich, @feizhadj, @fh-jsnider, @fh-mthomson, @FrancoisGhesquiere, @ge-generation, @Generalized, @ghost, @giorgioluciano, @giovannitinervia9, @gjones1219, @gorkang, @GuiMarthe, @gungorMetehan, @hass91, @hescalar, @HichemLa, @hichew22, @hr70, @huftis, @hughjonesd, @iaingallagher, @ilyamusabirov, @IndrajeetPatil, @irene9116, @IsadoraBM, @j-tamad, @jalavery, @jaromilfrossard, @JBarsotti, @jbtov, @jeanmanguy, @jemus42, @jenifav, @jennybc, @JeremyPasco, @jerrodanzalone, @JesseRop, @jflynn264, @jhchou, @jhelvy, @jhk0530, @jjallaire, @jkylearmstrong, @jmbarajas, @jmbarbone, @JoanneF1229, @joelgautschi, @johnryan412, @JohnSodling, @jonasrekdalmathisen, @JonGretar, @jordan49er, @jsavinc, @jthomasmock, @juseer, @jwilliman, @karissawhiting, @karl-an, @kendonB, @kentm4, @klh281, @kmdono02, @kristyrobledo, @kwakuduahc1, @lamberp6, @lamhine, @larmarange, @ledermanr, @leejasme, @leslem, @levossen, @lngdet, @longjp, @lorenzoFabbri, @loukesio, @love520lfh, @lspeetluk, @ltin1214, @ltj-github, @lucavd, @LucyMcGowan, @LuiNov, @lukejenner6, @maciekbanas, @maia-sh, @malcolmbarrett, @mariamaseng, @Marsus1972, @martsobm, @Mathicaa, @matthieu-faron, @maxanes, @mayazadok2, @mbac, @mdidish, @medewitt, @meenakshi-kushwaha, @melindahiggins2000, @MelissaAssel, @Melkiades, @mfansler, @michaelcurry1123, @mikemazzucco, @mlamias, @mljaniczek, @moleps, @monitoringhsd, @motocci, @mrmvergeer, @msberends, @mvuorre, @myamortor, @myensr, @MyKo101, @nalimilan, @ndunnewind, @nikostr, @ningyile, @O16789, @oliviercailloux, @oranwutang, @palantre, @parmsam, @Pascal-Schmidt, @PaulC91, @paulduf, @pedersebastian, @perlatex, @pgseye, @philippemichel, @philsf, @polc1410, @Polperobis, @postgres-newbie, @proshano, @raphidoc, @RaviBot, @rawand-hanna, @rbcavanaugh, @remlapmot, @rich-iannone, @RiversPharmD, @rmgpanw, @roaldarbol, @roman2023, @ryzhu75, @s-j-choi, @sachijay, @saifelayan, @sammo3182, @samrodgersmelnick, @samuele-mercan, @sandhyapc, @sbalci, @sda030, @shah-in-boots, @shannonpileggi, @shaunporwal, @shengchaohou, @ShixiangWang, @simonpcouch, @slb2240, @slobaugh, @spiralparagon, @Spring75xx, @StaffanBetner, @steenharsted, @stenw, @Stephonomon, @storopoli, @stratopopolis, @strengejacke, @szimmer, @tamytsujimoto, @TAOS25, @TarJae, @themichjam, @THIB20, @tibirkrajc, @tjmeyers, @tldrcharlene, @tormodb, @toshifumikuroda, @TPDeramus, @UAB-BST-680, @uakimix, @uriahf, @Valja64, @viola-hilbert, @violet-nova, @vvm02, @will-gt, @xkcococo, @xtimbeau, @yatirbe, @yihunzeleke, @yonicd, @yoursdearboy, @YousufMohammed2002, @yuryzablotski, @zabore, @zachariae, @zaddyzad, @zawkzaw, @zdz2101, @zeyunlu, @zhangkaicr, @zhaohongxin0, @zheer-kejlberg, @zhengnow, @zhonghua723, @zlkrvsm, @zongell-star, and @Zoulf001."
  },
  {
    "objectID": "slides/03-tables-gtsummary/index.html#connect",
    "href": "slides/03-tables-gtsummary/index.html#connect",
    "title": "ARD + {gtsummary}",
    "section": "Connect!",
    "text": "Connect!\n\n\n\n Ask on stackoverflow.com\n Use the gtsummary tag\n Thousands of posts!\n\n danieldsjoberg.com\n @ddsjoberg.bsky.social\n linkedin.com/in/ddsjoberg/\n github.com/ddsjoberg"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html",
    "href": "slides/04-tables-tfrmt/tfrmt.html",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "",
    "text": "Metadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}\nYou can export the table to a variety of formats using gt::gt_save()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "href": "slides/04-tables-tfrmt/tfrmt.html#ard-first-tables-with-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "",
    "text": "Metadata-driven table formatting\nEasily create new and modify existing tables\nInput: ARD with raw, numeric values ({cards}!)\nOutput: Formatted table via {gt}\nYou can export the table to a variety of formats using gt::gt_save()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "href": "slides/04-tables-tfrmt/tfrmt.html#the-tfrmt-object",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "The {tfrmt} object",
    "text": "The {tfrmt} object\n\nPre-define the non-data components of your table\nPre-define how the data will be handled once added"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "href": "slides/04-tables-tfrmt/tfrmt.html#use-1-study-planning-mocks",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #1: Study planning (mocks)",
    "text": "Use #1: Study planning (mocks)\n\nlibrary(tfrmt)\n\nprint_mock_gt(\n  tfrmt = tfrmt_demog, # tfrmt\n  .data = d_demog_mock # sample ARD\n)|&gt; \n   gt_style_slides()\n\n Removing `value` from input data for mocking.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = xx\nLow DoseN = xx\nHigh DoseN = xx\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;65 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  65-80 yrs \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;80 yrs   \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  Female    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  SD        \nxxx.xx      \nxxx.xx      \nxxx.xx      \n\n\n  Median    \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Min       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  Max       \nxxx.x       \nxxx.x       \nxxx.x       \n\n\n  &lt;25       \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  25-&lt;30    \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n  &gt;=30      \nxxx (xx.x %)\nxxx (xx.x %)\nxxx (xx.x %)\n\n\n\n\n\n\n\n\nIf no data is supplied, {tfrmt} will generate some under the hood"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "href": "slides/04-tables-tfrmt/tfrmt.html#use-2-final-analysis",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #2: Final analysis",
    "text": "Use #2: Final analysis\n\nlibrary(tfrmt)\n\nprint_to_gt(\n  tfrmt = tfrmt_demog,\n  .data = d_demog # true ARD\n)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\n\nPlaceboN = 86\nLow DoseN = 84\nHigh DoseN = 84\n\n\n\n\nAge (y)     \n\n\n\n\n\n\n\n\n  Mean      \n75.2       \n75.7       \n74.4       \n\n\n  SD        \n 8.59      \n 8.29      \n 7.89      \n\n\n  Median    \n76.0       \n77.5       \n76.0       \n\n\n  Min       \n52.0       \n51.0       \n56.0       \n\n\n  Max       \n89.0       \n88.0       \n88.0       \n\n\n  &lt;65 yrs   \n14 (16.3 %)\n 8 ( 9.5 %)\n11 (13.1 %)\n\n\n  65-80 yrs \n42 (48.8 %)\n47 (56.0 %)\n55 (65.5 %)\n\n\n  &gt;80 yrs   \n30 (34.9 %)\n29 (34.5 %)\n18 (21.4 %)\n\n\nSex         \n\n\n\n\n\n\n\n\n  Male      \n33 (38.4 %)\n34 (40.5 %)\n44 (52.4 %)\n\n\n  Female    \n53 (61.6 %)\n50 (59.5 %)\n40 (47.6 %)\n\n\nBaseline BMI\n\n\n\n\n\n\n\n\n  Mean      \n23.6       \n25.1       \n25.3       \n\n\n  SD        \n 3.67      \n 4.27      \n 4.16      \n\n\n  Median    \n23.4       \n24.3       \n24.8       \n\n\n  Min       \n15.1       \n17.7       \n13.7       \n\n\n  Max       \n33.3       \n40.1       \n34.5       \n\n\n  &lt;25       \n59 (68.6 %)\n47 (56.0 %)\n44 (52.4 %)\n\n\n  25-&lt;30    \n21 (24.4 %)\n27 (32.1 %)\n28 (33.3 %)\n\n\n  &gt;=30      \n 6 ( 7.0 %)\n10 (11.9 %)\n12 (14.3 %)\n\n\n\n\n\n\n\n\nFull reuse of the original {tfrmt} object = reduced rework!"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "href": "slides/04-tables-tfrmt/tfrmt.html#use-3-repurposed-final-table",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Use #3: Repurposed final table",
    "text": "Use #3: Repurposed final table\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  layer_tfrmt(\n    tfrmt_demog_custom  \n  )|&gt; \n  print_to_gt( \n    .data = d_demog\n  ) |&gt; \n  gt::grp_pull(1)|&gt; \n   gt_style_slides()\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemographics Table\n\n\nSafety Population\n\n\n\nHigh Dose(N = 84)\nLow Dose(N = 84)\nPlacebo(N = 86)\n\n\n\n\nAge (y)    \n\n\n\n\n\n\n\n\n  Mean     \n74.4       \n75.7       \n75.2       \n\n\n  SD       \n 7.89      \n 8.29      \n 8.59      \n\n\n  Median   \n76.0       \n77.5       \n76.0       \n\n\n  Min      \n56.0       \n51.0       \n52.0       \n\n\n  Max      \n88.0       \n88.0       \n89.0       \n\n\n           \n           \n           \n           \n\n\n  &lt;65 yrs  \n11 (13.1 %)\n 8 ( 9.5 %)\n14 (16.3 %)\n\n\n  65-80 yrs\n55 (65.5 %)\n47 (56.0 %)\n42 (48.8 %)\n\n\n  &gt;80 yrs  \n18 (21.4 %)\n29 (34.5 %)\n30 (34.9 %)\n\n\n           \n           \n           \n           \n\n\nSex        \n\n\n\n\n\n\n\n\n  Male     \n44 (52.4 %)\n34 (40.5 %)\n33 (38.4 %)\n\n\n  Female   \n40 (47.6 %)\n50 (59.5 %)\n53 (61.6 %)\n\n\n           \n           \n           \n           \n\n\n\nData collected at Screening Visit\n\n\n\n\n\n\n\n\n\nLayering allows for custom tweaks while preserving the original metadata"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "href": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\n\n\n# create a template as a function\ntfrmt_demog_org &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_org &lt;- tfrmt( \n    # define standard formatting for org\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Make a standard table\ntfrmt_demog_org() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "href": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-1",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_ta &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_ta &lt;- tfrmt( \n    # define the formatting specific to the therapeutic area\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_ta)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "href": "slides/04-tables-tfrmt/tfrmt.html#templates-the-possibilities-2",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Templates: the possibilities",
    "text": "Templates: the possibilities\n\nOrganization standards can be capture as templates\nWith layering, teams can customize only the bits that need changing\n\n\n# create a template as a function\ntfrmt_demog_study &lt;- function(tfrmt_obj){\n  \n  tfrmt_demog_study &lt;- tfrmt( \n    # define the formatting specific to the study\n  )\n  \n  layer_tfrmt(x = tfrmt_obj, y = tfrmt_demog_study)\n}\n\n# Layering multiple templates\ntfrmt_demog_org() |&gt; \n  tfrmt_demog_ta() |&gt;  \n  tfrmt_demog_study() |&gt; \n  print_to_gt(\n    .data = demog_data\n  )"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "href": "slides/04-tables-tfrmt/tfrmt.html#save-metadata-for-reuse",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "Save metadata for reuse",
    "text": "Save metadata for reuse\n\nlibrary(tfrmt)\n\ntfrmt_demog |&gt; \n  tfrmt_to_json()\n\n{\n  \"group\": [\"rowlbl1\", \"grp\"],\n  \"label\": [\"rowlbl2\"],\n  \"param\": [\"param\"],\n  \"value\": [\"value\"],\n  \"column\": [\"column\"],\n  \"title\": [\"Demographics Table\"],\n  \"body_plan\": [\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\".default\"],\n      \"param_val\": [\"n\", \"pct\"],\n      \"frmt_combine\": {\n        \"expression\": [\"{n} {pct}\"],\n        \"frmt_ls\": {\n          \"n\": {\n            \"frmt\": {\n              \"expression\": [\"xxx\"],\n              \"missing\": {},\n              \"scientific\": {},\n              \"transform\": {}\n            }\n          },\n          \"pct\": {\n            \"frmt_when\": {\n              \"frmt_ls\": {\n                \"==100\": [\"\"],\n                \"==0\": [\"\"],\n                \"TRUE\": {\n                  \"frmt\": {\n                    \"expression\": [\"(xx.x %)\"],\n                    \"missing\": {},\n                    \"scientific\": {},\n                    \"transform\": {}\n                  }\n                }\n              },\n              \"missing\": {}\n            }\n          }\n        },\n        \"missing\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"n\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"Mean\", \"Median\", \"Min\", \"Max\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.x\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    },\n    {\n      \"group_val\": [\".default\"],\n      \"label_val\": [\"SD\"],\n      \"param_val\": [\".default\"],\n      \"frmt\": {\n        \"expression\": [\"xxx.xx\"],\n        \"missing\": {},\n        \"scientific\": {},\n        \"transform\": {}\n      }\n    }\n  ],\n  \"col_style_plan\": [\n    {\n      \"cols\": [\n        [\"Placebo\"],\n        [\"Low Dose\"],\n        [\"High Dose\"]\n      ],\n      \"align\": [\".\", \",\", \" \"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    },\n    {\n      \"cols\": [\n        [\"rowlbl1\"],\n        [\"rowlbl2\"]\n      ],\n      \"align\": [\"left\"],\n      \"type\": [\"char\"],\n      \"width\": {}\n    }\n  ],\n  \"col_plan\": {\n    \"col_plan\": {\n      \"dots\": [\n        [\"-grp\"],\n        [\"-starts_with(\\\"ord\\\")\"]\n      ],\n      \".drop\": [false]\n    }\n  },\n  \"sorting_cols\": [\"ord1\", \"ord2\"],\n  \"big_n\": {\n    \"param_val\": [\"bigN\"],\n    \"n_frmt\": {\n      \"expression\": [\"&lt;br&gt;N = xx\"],\n      \"missing\": {},\n      \"scientific\": {},\n      \"transform\": {}\n    },\n    \"by_page\": [false]\n  }\n} \n\n\n\nCreate a language-agnostic JSON file\nLoad JSON back into R and recreate the table with json_to_tfrmt()"
  },
  {
    "objectID": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "href": "slides/04-tables-tfrmt/tfrmt.html#cards-to-tfrmt",
    "title": "A quick tour of the many uses of {tfrmt}",
    "section": "cards to tfrmt",
    "text": "cards to tfrmt\n\n{cards} includes a helper function rename_ard_columns() to transform native {cards} output to display-ready data\n\n\nlibrary(cards)\nlibrary(tfrmt)\n\nmy_ard &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  ard_categorical(\n    by = TRT01A,\n    variables = c(\"AGEGR1\",\"SEX\")\n  ) |&gt; \n   rename_ard_columns(columns = all_ard_groups(),\n                      unlist = c(\"variable_level\", \"stat\")) |&gt; \n  dplyr::select(-c(fmt_fn, warning, error)) |&gt; \n  dplyr::filter(stat_name %in% c(\"n\",\"p\")) |&gt; \n  dplyr::select(-c(context, stat_label))\n\ntfrmt(\n  group = variable,\n  label = variable_level ,\n  column = TRT01A,\n  param = stat_name,\n  value = stat,\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", \n                   label_val = \".default\", \n                   frmt_combine(\"{n} ({p}%)\",\n                                n = frmt(\"xx\"),\n                                p = frmt(\"xx\", \n                                         transform = ~.*100)))\n  )\n) |&gt; \n  print_to_gt(my_ard)|&gt; \n  gt_style_slides()|&gt; \n    gt::tab_options(\n      table.font.size = 15\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlacebo\nXanomeline High Dose\nXanomeline Low Dose\n\n\n\n\nAGEGR1\n\n\n\n\n\n\n\n\n  &gt;64\n72 (84%)\n61 (85%)\n88 (92%)\n\n\n  18-64\n14 (16%)\n11 (15%)\n 8 ( 8%)\n\n\nSEX\n\n\n\n\n\n\n\n\n  F\n53 (62%)\n35 (49%)\n55 (57%)\n\n\n  M\n33 (38%)\n37 (51%)\n41 (43%)"
  }
]